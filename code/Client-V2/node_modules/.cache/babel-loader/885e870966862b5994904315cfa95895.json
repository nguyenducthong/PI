{"ast":null,"code":"import Mock from \"../mock\";\nimport shortid from \"shortid\";\nimport ConstantList from \"../../app/appConfig\";\nvar invoiceDB = {\n  invoices: [{\n    id: shortid.generate(),\n    orderNo: \"232\",\n    status: \"pending\",\n    date: new Date(),\n    currency: \"$\",\n    vat: 10,\n    buyer: {\n      name: \"Schoen, Conn and Mills\",\n      address: \"rodriguez.trent@senger.com \\n 61 Johnson St. Shirley, NY 11967. \\n \\n +202-555-0170\"\n    },\n    seller: {\n      name: \"UI Lib\",\n      address: \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n    },\n    item: [{\n      name: \"Item 1\",\n      unit: 9,\n      price: 200\n    }, {\n      name: \"Item 2\",\n      unit: 15,\n      price: 300\n    }]\n  }, {\n    id: shortid.generate(),\n    orderNo: \"233\",\n    status: \"processing\",\n    date: new Date(),\n    currency: \"$\",\n    vat: 10,\n    buyer: {\n      name: \"New Age Inc.\",\n      address: \"this is a test address \\n 7664 Rockcrest Road. Longview, TX 75604. \\n \\n +1-202-555-0153\"\n    },\n    seller: {\n      name: \"UI Lib\",\n      address: \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n    },\n    item: [{\n      name: \"Item 1\",\n      unit: 3,\n      price: 2000\n    }, {\n      name: \"Item 2\",\n      unit: 2,\n      price: 4000\n    }]\n  }, {\n    id: shortid.generate(),\n    orderNo: \"234\",\n    status: \"delivered\",\n    date: new Date(),\n    currency: \"$\",\n    vat: 10,\n    buyer: {\n      name: \"Predovic, Schowalter and Haag\",\n      address: \"linwood53@price.com \\n 7178 Plumb Branch Dr. South Bend, IN 46614 \\n \\n +999 9999 9999\"\n    },\n    seller: {\n      name: \"UI Lib\",\n      address: \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n    },\n    item: [{\n      name: \"Item 1\",\n      unit: 5,\n      price: 1000\n    }, {\n      name: \"Item 2\",\n      unit: 2,\n      price: 4000\n    }]\n  }, {\n    id: shortid.generate(),\n    orderNo: \"235\",\n    status: \"delivered\",\n    date: new Date(),\n    currency: \"$\",\n    vat: 10,\n    buyer: {\n      name: \"Hane PLC\",\n      address: \"nader.savanna@lindgren.org \\n 858 8th St. Nanuet, NY 10954. \\n \\n +202-555-0131\"\n    },\n    seller: {\n      name: \"UI Lib\",\n      address: \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n    },\n    item: [{\n      name: \"Item 1\",\n      unit: 3,\n      price: 4000\n    }, {\n      name: \"Item 2\",\n      unit: 1,\n      price: 5000\n    }]\n  }]\n};\nMock.onGet(ConstantList.ROOT_PATH + \"api/invoices/all\").reply(function (config) {\n  return [200, invoiceDB.invoices];\n});\nMock.onGet(ConstantList.ROOT_PATH + \"api/invoices\").reply(function (config) {\n  var id = config.data;\n  var response = invoiceDB.invoices.find(function (invoice) {\n    return invoice.id === id;\n  });\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/invoices/delete\").reply(function (config) {\n  var invoice = JSON.parse(config.data);\n  var index = {\n    i: 0\n  };\n  invoiceDB.invoices.forEach(function (element) {\n    if (element.id === invoice.id) {\n      return [200, invoiceDB.invoices.splice(index.i, 1)];\n    }\n\n    index.i++;\n  });\n  return [200, invoiceDB.invoices];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/invoices/update\").reply(function (config) {\n  var invoice = JSON.parse(config.data);\n  var index = {\n    i: 0\n  };\n  invoiceDB.invoices.forEach(function (element) {\n    if (element.id === invoice.id) {\n      invoiceDB.invoices[index.i] = invoice;\n      return [200, invoiceDB.invoices];\n    }\n\n    index.i++;\n  });\n  return [200, invoiceDB.invoices];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/invoices/add\").reply(function (config) {\n  var invoice = JSON.parse(config.data);\n  invoiceDB.invoices.push(invoice);\n  return [200, invoiceDB.invoices];\n});","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/fake-db/db/invoice.js"],"names":["Mock","shortid","ConstantList","invoiceDB","invoices","id","generate","orderNo","status","date","Date","currency","vat","buyer","name","address","seller","item","unit","price","onGet","ROOT_PATH","reply","config","data","response","find","invoice","onPost","JSON","parse","index","i","forEach","element","splice","push"],"mappings":"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","sourcesContent":["import Mock from \"../mock\";\nimport shortid from \"shortid\";\nimport ConstantList from \"../../app/appConfig\";\nconst invoiceDB = {\n  invoices: [\n    {\n      id: shortid.generate(),\n      orderNo: \"232\",\n      status: \"pending\",\n      date: new Date(),\n      currency: \"$\",\n      vat: 10,\n      buyer: {\n        name: \"Schoen, Conn and Mills\",\n        address:\n          \"rodriguez.trent@senger.com \\n 61 Johnson St. Shirley, NY 11967. \\n \\n +202-555-0170\"\n      },\n      seller: {\n        name: \"UI Lib\",\n        address:\n          \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n      },\n      item: [\n        {\n          name: \"Item 1\",\n          unit: 9,\n          price: 200\n        },\n        {\n          name: \"Item 2\",\n          unit: 15,\n          price: 300\n        }\n      ]\n    },\n    {\n      id: shortid.generate(),\n      orderNo: \"233\",\n      status: \"processing\",\n      date: new Date(),\n      currency: \"$\",\n      vat: 10,\n      buyer: {\n        name: \"New Age Inc.\",\n        address:\n          \"this is a test address \\n 7664 Rockcrest Road. Longview, TX 75604. \\n \\n +1-202-555-0153\"\n      },\n      seller: {\n        name: \"UI Lib\",\n        address:\n          \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n      },\n      item: [\n        {\n          name: \"Item 1\",\n          unit: 3,\n          price: 2000\n        },\n        {\n          name: \"Item 2\",\n          unit: 2,\n          price: 4000\n        }\n      ]\n    },\n    {\n      id: shortid.generate(),\n      orderNo: \"234\",\n      status: \"delivered\",\n      date: new Date(),\n      currency: \"$\",\n      vat: 10,\n      buyer: {\n        name: \"Predovic, Schowalter and Haag\",\n        address:\n          \"linwood53@price.com \\n 7178 Plumb Branch Dr. South Bend, IN 46614 \\n \\n +999 9999 9999\"\n      },\n      seller: {\n        name: \"UI Lib\",\n        address:\n          \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n      },\n      item: [\n        {\n          name: \"Item 1\",\n          unit: 5,\n          price: 1000\n        },\n        {\n          name: \"Item 2\",\n          unit: 2,\n          price: 4000\n        }\n      ]\n    },\n    {\n      id: shortid.generate(),\n      orderNo: \"235\",\n      status: \"delivered\",\n      date: new Date(),\n      currency: \"$\",\n      vat: 10,\n      buyer: {\n        name: \"Hane PLC\",\n        address:\n          \"nader.savanna@lindgren.org \\n 858 8th St. Nanuet, NY 10954. \\n \\n +202-555-0131\"\n      },\n      seller: {\n        name: \"UI Lib\",\n        address:\n          \"sales@ui-lib.com \\n 8254 S. Garfield Street. Villa Rica, GA 30180. \\n \\n +1-202-555-0170\"\n      },\n      item: [\n        {\n          name: \"Item 1\",\n          unit: 3,\n          price: 4000\n        },\n        {\n          name: \"Item 2\",\n          unit: 1,\n          price: 5000\n        }\n      ]\n    }\n  ]\n};\n\nMock.onGet(ConstantList.ROOT_PATH+\"api/invoices/all\").reply(config => {\n  return [200, invoiceDB.invoices];\n});\n\nMock.onGet(ConstantList.ROOT_PATH+\"api/invoices\").reply(config => {\n  const id = config.data;\n  const response = invoiceDB.invoices.find(invoice => invoice.id === id);\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/invoices/delete\").reply(config => {\n  let invoice = JSON.parse(config.data);\n  let index = { i: 0 };\n  invoiceDB.invoices.forEach(element => {\n    if (element.id === invoice.id) {\n      return [200, invoiceDB.invoices.splice(index.i, 1)];\n    }\n    index.i++;\n  });\n  return [200, invoiceDB.invoices];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/invoices/update\").reply(config => {\n  let invoice = JSON.parse(config.data);\n  let index = { i: 0 };\n  invoiceDB.invoices.forEach(element => {\n    if (element.id === invoice.id) {\n      invoiceDB.invoices[index.i] = invoice;\n      return [200, invoiceDB.invoices];\n    }\n    index.i++;\n  });\n  return [200, invoiceDB.invoices];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/invoices/add\").reply(config => {\n  let invoice = JSON.parse(config.data);\n  invoiceDB.invoices.push(invoice);\n  return [200, invoiceDB.invoices];\n});\n"]},"metadata":{},"sourceType":"module"}