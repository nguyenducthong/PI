{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n} // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { getAttributeScale } from '../utils/scales-utils';\nimport Animation, { AnimationPropType } from '../animation';\nimport { getTicksTotalFromSize, getTickValues, DIRECTION } from '../utils/axis-utils';\nvar VERTICAL = DIRECTION.VERTICAL,\n    HORIZONTAL = DIRECTION.HORIZONTAL;\nvar propTypes = {\n  direction: PropTypes.oneOf([VERTICAL, HORIZONTAL]),\n  attr: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  top: PropTypes.number,\n  left: PropTypes.number,\n  style: PropTypes.object,\n  tickValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  tickTotal: PropTypes.number,\n  animation: AnimationPropType,\n  // generally supplied by xyplot\n  marginTop: PropTypes.number,\n  marginBottom: PropTypes.number,\n  marginLeft: PropTypes.number,\n  marginRight: PropTypes.number,\n  innerWidth: PropTypes.number,\n  innerHeight: PropTypes.number\n};\nvar defaultProps = {\n  direction: VERTICAL\n};\nvar animatedProps = ['xRange', 'yRange', 'xDomain', 'yDomain', 'width', 'height', 'marginLeft', 'marginTop', 'marginRight', 'marginBottom', 'tickTotal'];\n\nvar GridLines = function (_PureComponent) {\n  _inherits(GridLines, _PureComponent);\n\n  function GridLines() {\n    _classCallCheck(this, GridLines);\n\n    return _possibleConstructorReturn(this, (GridLines.__proto__ || Object.getPrototypeOf(GridLines)).apply(this, arguments));\n  }\n\n  _createClass(GridLines, [{\n    key: '_getDefaultProps',\n    value: function _getDefaultProps() {\n      var _props = this.props,\n          innerWidth = _props.innerWidth,\n          innerHeight = _props.innerHeight,\n          marginTop = _props.marginTop,\n          marginLeft = _props.marginLeft,\n          direction = _props.direction;\n      return {\n        left: marginLeft,\n        top: marginTop,\n        width: innerWidth,\n        height: innerHeight,\n        tickTotal: getTicksTotalFromSize(direction === VERTICAL ? innerWidth : innerHeight)\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props2 = this.props,\n          animation = _props2.animation,\n          className = _props2.className;\n\n      if (animation) {\n        return React.createElement(Animation, _extends({}, this.props, {\n          animatedProps: animatedProps\n        }), React.createElement(GridLines, _extends({}, this.props, {\n          animation: null\n        })));\n      }\n\n      var props = _extends({}, this._getDefaultProps(), this.props);\n\n      var attr = props.attr,\n          direction = props.direction,\n          width = props.width,\n          height = props.height,\n          style = props.style,\n          tickTotal = props.tickTotal,\n          tickValues = props.tickValues,\n          top = props.top,\n          left = props.left;\n      var isVertical = direction === VERTICAL;\n      var tickXAttr = isVertical ? 'y' : 'x';\n      var tickYAttr = isVertical ? 'x' : 'y';\n      var length = isVertical ? height : width;\n      var scale = getAttributeScale(props, attr);\n      var values = getTickValues(scale, tickTotal, tickValues);\n      return React.createElement('g', {\n        transform: 'translate(' + left + ',' + top + ')',\n        className: 'rv-xy-plot__grid-lines ' + className\n      }, values.map(function (v, i) {\n        var _pathProps;\n\n        var pos = scale(v);\n        var pathProps = (_pathProps = {}, _defineProperty(_pathProps, tickYAttr + '1', pos), _defineProperty(_pathProps, tickYAttr + '2', pos), _defineProperty(_pathProps, tickXAttr + '1', 0), _defineProperty(_pathProps, tickXAttr + '2', length), _pathProps);\n        return React.createElement('line', _extends({}, pathProps, {\n          key: i,\n          className: 'rv-xy-plot__grid-lines__line',\n          style: style\n        }));\n      }));\n    }\n  }]);\n\n  return GridLines;\n}(PureComponent);\n\nGridLines.displayName = 'GridLines';\nGridLines.defaultProps = defaultProps;\nGridLines.propTypes = propTypes;\nGridLines.requiresSVG = true;\nexport default GridLines;","map":null,"metadata":{},"sourceType":"module"}