{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.styles = exports.MTableToolbar = void 0;\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Checkbox = _interopRequireDefault(require(\"@material-ui/core/Checkbox\"));\n\nvar _FormControlLabel = _interopRequireDefault(require(\"@material-ui/core/FormControlLabel\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _InputAdornment = _interopRequireDefault(require(\"@material-ui/core/InputAdornment\"));\n\nvar _Menu = _interopRequireDefault(require(\"@material-ui/core/Menu\"));\n\nvar _MenuItem = _interopRequireDefault(require(\"@material-ui/core/MenuItem\"));\n\nvar _TextField = _interopRequireDefault(require(\"@material-ui/core/TextField\"));\n\nvar _Toolbar = _interopRequireDefault(require(\"@material-ui/core/Toolbar\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"@material-ui/core/Tooltip\"));\n\nvar _Typography = _interopRequireDefault(require(\"@material-ui/core/Typography\"));\n\nvar _withStyles = _interopRequireDefault(require(\"@material-ui/core/styles/withStyles\"));\n\nvar _colorManipulator = require(\"@material-ui/core/styles/colorManipulator\");\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _filefy = require(\"filefy\");\n\nvar _propTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nrequire(\"jspdf-autotable\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar jsPDF = typeof window !== \"undefined\" ? require(\"jspdf\").jsPDF : null;\n/* eslint-enable no-unused-vars */\n\nvar MTableToolbar = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(MTableToolbar, _React$Component);\n\n  var _super = _createSuper(MTableToolbar);\n\n  function MTableToolbar(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MTableToolbar);\n    _this = _super.call(this, props);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSearchChange\", function (searchText) {\n      _this.props.dataManager.changeSearchText(searchText);\n\n      _this.setState({\n        searchText: searchText\n      }, _this.props.onSearchChanged(searchText));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"getTableData\", function () {\n      var columns = _this.props.columns.filter(function (columnDef) {\n        return (!columnDef.hidden || columnDef[\"export\"] === true) && columnDef[\"export\"] !== false && columnDef.field;\n      }).sort(function (a, b) {\n        return a.tableData.columnOrder > b.tableData.columnOrder ? 1 : -1;\n      });\n\n      var data = (_this.props.exportAllData ? _this.props.data : _this.props.renderData).map(function (rowData) {\n        return columns.map(function (columnDef) {\n          return _this.props.getFieldValue(rowData, columnDef);\n        });\n      });\n      return [columns, data];\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"defaultExportCsv\", function () {\n      var _this$getTableData = _this.getTableData(),\n          _this$getTableData2 = (0, _slicedToArray2[\"default\"])(_this$getTableData, 2),\n          columns = _this$getTableData2[0],\n          data = _this$getTableData2[1];\n\n      var fileName = _this.props.title || \"data\";\n\n      if (_this.props.exportFileName) {\n        fileName = typeof _this.props.exportFileName === \"function\" ? _this.props.exportFileName() : _this.props.exportFileName;\n      }\n\n      var builder = new _filefy.CsvBuilder(fileName + \".csv\");\n      builder.setDelimeter(_this.props.exportDelimiter).setColumns(columns.map(function (columnDef) {\n        return columnDef.title;\n      })).addRows(data).exportFile();\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"defaultExportPdf\", function () {\n      if (jsPDF !== null) {\n        var _this$getTableData3 = _this.getTableData(),\n            _this$getTableData4 = (0, _slicedToArray2[\"default\"])(_this$getTableData3, 2),\n            columns = _this$getTableData4[0],\n            data = _this$getTableData4[1];\n\n        var content = {\n          startY: 50,\n          head: [columns.map(function (columnDef) {\n            return columnDef.title;\n          })],\n          body: data\n        };\n        var unit = \"pt\";\n        var size = \"A4\";\n        var orientation = \"landscape\";\n        var doc = new jsPDF(orientation, unit, size);\n        doc.setFontSize(15);\n        doc.text(_this.props.exportFileName || _this.props.title, 40, 40);\n        doc.autoTable(content);\n        doc.save((_this.props.exportFileName || _this.props.title || \"data\") + \".pdf\");\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"exportCsv\", function () {\n      if (_this.props.exportCsv) {\n        _this.props.exportCsv(_this.props.columns, _this.props.data);\n      } else {\n        _this.defaultExportCsv();\n      }\n\n      _this.setState({\n        exportButtonAnchorEl: null\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"exportPdf\", function () {\n      if (_this.props.exportPdf) {\n        _this.props.exportPdf(_this.props.columns, _this.props.data);\n      } else {\n        _this.defaultExportPdf();\n      }\n\n      _this.setState({\n        exportButtonAnchorEl: null\n      });\n    });\n    _this.state = {\n      columnsButtonAnchorEl: null,\n      exportButtonAnchorEl: null,\n      searchText: props.searchText\n    };\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MTableToolbar, [{\n    key: \"renderSearch\",\n    value: function renderSearch() {\n      var _this2 = this;\n\n      var localization = (0, _objectSpread2[\"default\"])({}, MTableToolbar.defaultProps.localization, this.props.localization);\n\n      if (this.props.search) {\n        return /*#__PURE__*/React.createElement(_TextField[\"default\"], {\n          autoFocus: this.props.searchAutoFocus,\n          className: this.props.searchFieldAlignment === \"left\" && this.props.showTitle === false ? null : this.props.classes.searchField,\n          value: this.state.searchText,\n          onChange: function onChange(event) {\n            return _this2.onSearchChange(event.target.value);\n          },\n          placeholder: localization.searchPlaceholder,\n          variant: this.props.searchFieldVariant,\n          InputProps: {\n            startAdornment: /*#__PURE__*/React.createElement(_InputAdornment[\"default\"], {\n              position: \"start\"\n            }, /*#__PURE__*/React.createElement(_Tooltip[\"default\"], {\n              title: localization.searchTooltip\n            }, /*#__PURE__*/React.createElement(this.props.icons.Search, {\n              fontSize: \"small\"\n            }))),\n            endAdornment: /*#__PURE__*/React.createElement(_InputAdornment[\"default\"], {\n              position: \"end\"\n            }, /*#__PURE__*/React.createElement(_IconButton[\"default\"], {\n              disabled: !this.state.searchText,\n              onClick: function onClick() {\n                return _this2.onSearchChange(\"\");\n              },\n              \"aria-label\": localization.clearSearchAriaLabel\n            }, /*#__PURE__*/React.createElement(this.props.icons.ResetSearch, {\n              fontSize: \"small\",\n              \"aria-label\": \"clear\"\n            }))),\n            style: this.props.searchFieldStyle,\n            inputProps: {\n              \"aria-label\": localization.searchAriaLabel\n            }\n          }\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"renderDefaultActions\",\n    value: function renderDefaultActions() {\n      var _this3 = this;\n\n      var localization = (0, _objectSpread2[\"default\"])({}, MTableToolbar.defaultProps.localization, this.props.localization);\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", null, this.props.columnsButton && /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_Tooltip[\"default\"], {\n        title: localization.showColumnsTitle\n      }, /*#__PURE__*/React.createElement(_IconButton[\"default\"], {\n        color: \"inherit\",\n        onClick: function onClick(event) {\n          return _this3.setState({\n            columnsButtonAnchorEl: event.currentTarget\n          });\n        },\n        \"aria-label\": localization.showColumnsAriaLabel\n      }, /*#__PURE__*/React.createElement(this.props.icons.ViewColumn, null))), /*#__PURE__*/React.createElement(_Menu[\"default\"], {\n        anchorEl: this.state.columnsButtonAnchorEl,\n        open: Boolean(this.state.columnsButtonAnchorEl),\n        onClose: function onClose() {\n          return _this3.setState({\n            columnsButtonAnchorEl: null\n          });\n        }\n      }, /*#__PURE__*/React.createElement(_MenuItem[\"default\"], {\n        key: \"text\",\n        disabled: true,\n        style: {\n          opacity: 1,\n          fontWeight: 600,\n          fontSize: 12\n        }\n      }, localization.addRemoveColumns), this.props.columns.map(function (col) {\n        if (!col.hidden || col.hiddenByColumnsButton) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            key: col.tableData.id\n          }, /*#__PURE__*/React.createElement(_MenuItem[\"default\"], {\n            className: classes.formControlLabel,\n            component: \"label\",\n            htmlFor: \"column-toggle-\".concat(col.tableData.id),\n            disabled: col.removable === false\n          }, /*#__PURE__*/React.createElement(_Checkbox[\"default\"], {\n            checked: !col.hidden,\n            id: \"column-toggle-\".concat(col.tableData.id),\n            onChange: function onChange() {\n              return _this3.props.onColumnsChanged(col, !col.hidden);\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", null, col.title)));\n        }\n\n        return null;\n      }))), this.props.exportButton && /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(_Tooltip[\"default\"], {\n        title: localization.exportTitle\n      }, /*#__PURE__*/React.createElement(_IconButton[\"default\"], {\n        color: \"inherit\",\n        onClick: function onClick(event) {\n          return _this3.setState({\n            exportButtonAnchorEl: event.currentTarget\n          });\n        },\n        \"aria-label\": localization.exportAriaLabel\n      }, /*#__PURE__*/React.createElement(this.props.icons.Export, null))), /*#__PURE__*/React.createElement(_Menu[\"default\"], {\n        anchorEl: this.state.exportButtonAnchorEl,\n        open: Boolean(this.state.exportButtonAnchorEl),\n        onClose: function onClose() {\n          return _this3.setState({\n            exportButtonAnchorEl: null\n          });\n        }\n      }, (this.props.exportButton === true || this.props.exportButton.csv) && /*#__PURE__*/React.createElement(_MenuItem[\"default\"], {\n        key: \"export-csv\",\n        onClick: this.exportCsv\n      }, localization.exportCSVName), (this.props.exportButton === true || this.props.exportButton.pdf) && /*#__PURE__*/React.createElement(_MenuItem[\"default\"], {\n        key: \"export-pdf\",\n        onClick: this.exportPdf\n      }, localization.exportPDFName))), /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(this.props.components.Actions, {\n        actions: this.props.actions && this.props.actions.filter(function (a) {\n          return a.position === \"toolbar\";\n        }),\n        components: this.props.components\n      })));\n    }\n  }, {\n    key: \"renderSelectedActions\",\n    value: function renderSelectedActions() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(this.props.components.Actions, {\n        actions: this.props.actions.filter(function (a) {\n          return a.position === \"toolbarOnSelect\";\n        }),\n        data: this.props.selectedRows,\n        components: this.props.components\n      }));\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var classes = this.props.classes;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.actions\n      }, /*#__PURE__*/React.createElement(\"div\", null, this.props.selectedRows && this.props.selectedRows.length > 0 ? this.renderSelectedActions() : this.renderDefaultActions()));\n    }\n  }, {\n    key: \"renderToolbarTitle\",\n    value: function renderToolbarTitle(title) {\n      var classes = this.props.classes;\n      var toolBarTitle = typeof title === \"string\" ? /*#__PURE__*/React.createElement(_Typography[\"default\"], {\n        variant: \"h6\",\n        style: {\n          whiteSpace: \"nowrap\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        }\n      }, title) : title;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.title\n      }, toolBarTitle);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var localization = (0, _objectSpread2[\"default\"])({}, MTableToolbar.defaultProps.localization, this.props.localization);\n      var title = this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0 ? typeof localization.nRowsSelected === \"function\" ? localization.nRowsSelected(this.props.selectedRows.length) : localization.nRowsSelected.replace(\"{0}\", this.props.selectedRows.length) : this.props.showTitle ? this.props.title : null;\n      return /*#__PURE__*/React.createElement(_Toolbar[\"default\"], {\n        className: (0, _classnames[\"default\"])(classes.root, (0, _defineProperty2[\"default\"])({}, classes.highlight, this.props.showTextRowsSelected && this.props.selectedRows && this.props.selectedRows.length > 0))\n      }, title && this.renderToolbarTitle(title), this.props.searchFieldAlignment === \"left\" && this.renderSearch(), this.props.toolbarButtonAlignment === \"left\" && this.renderActions(), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.spacer\n      }), this.props.searchFieldAlignment === \"right\" && this.renderSearch(), this.props.toolbarButtonAlignment === \"right\" && this.renderActions());\n    }\n  }]);\n  return MTableToolbar;\n}(React.Component);\n\nexports.MTableToolbar = MTableToolbar;\nMTableToolbar.defaultProps = {\n  actions: [],\n  columns: [],\n  columnsButton: false,\n  localization: {\n    addRemoveColumns: \"Add or remove columns\",\n    nRowsSelected: \"{0} row(s) selected\",\n    showColumnsTitle: \"Show Columns\",\n    showColumnsAriaLabel: \"Show Columns\",\n    exportTitle: \"Export\",\n    exportAriaLabel: \"Export\",\n    exportCSVName: \"Export as CSV\",\n    exportPDFName: \"Export as PDF\",\n    searchTooltip: \"Search\",\n    searchPlaceholder: \"Search\",\n    searchAriaLabel: \"Search\",\n    clearSearchAriaLabel: \"Clear Search\"\n  },\n  search: true,\n  showTitle: true,\n  searchText: \"\",\n  showTextRowsSelected: true,\n  toolbarButtonAlignment: \"right\",\n  searchAutoFocus: false,\n  searchFieldAlignment: \"right\",\n  searchFieldVariant: \"standard\",\n  selectedRows: [],\n  title: \"No Title!\"\n};\nMTableToolbar.propTypes = {\n  actions: _propTypes[\"default\"].array,\n  columns: _propTypes[\"default\"].array,\n  columnsButton: _propTypes[\"default\"].bool,\n  components: _propTypes[\"default\"].object.isRequired,\n  getFieldValue: _propTypes[\"default\"].func.isRequired,\n  localization: _propTypes[\"default\"].object.isRequired,\n  onColumnsChanged: _propTypes[\"default\"].func.isRequired,\n  dataManager: _propTypes[\"default\"].object.isRequired,\n  searchText: _propTypes[\"default\"].string,\n  onSearchChanged: _propTypes[\"default\"].func.isRequired,\n  search: _propTypes[\"default\"].bool.isRequired,\n  searchFieldStyle: _propTypes[\"default\"].object,\n  searchFieldVariant: _propTypes[\"default\"].string,\n  selectedRows: _propTypes[\"default\"].array,\n  title: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].element, _propTypes[\"default\"].string]),\n  showTitle: _propTypes[\"default\"].bool.isRequired,\n  showTextRowsSelected: _propTypes[\"default\"].bool.isRequired,\n  toolbarButtonAlignment: _propTypes[\"default\"].string.isRequired,\n  searchFieldAlignment: _propTypes[\"default\"].string.isRequired,\n  renderData: _propTypes[\"default\"].array,\n  data: _propTypes[\"default\"].array,\n  exportAllData: _propTypes[\"default\"].bool,\n  exportButton: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].shape({\n    csv: _propTypes[\"default\"].bool,\n    pdf: _propTypes[\"default\"].bool\n  })]),\n  exportDelimiter: _propTypes[\"default\"].string,\n  exportFileName: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].func]),\n  exportCsv: _propTypes[\"default\"].func,\n  exportPdf: _propTypes[\"default\"].func,\n  classes: _propTypes[\"default\"].object,\n  searchAutoFocus: _propTypes[\"default\"].bool\n};\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing(1)\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: (0, _colorManipulator.lighten)(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 10%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      overflow: \"hidden\"\n    },\n    searchField: {\n      minWidth: 150,\n      paddingLeft: theme.spacing(2)\n    },\n    formControlLabel: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    }\n  };\n};\n\nexports.styles = styles;\n\nvar _default = (0, _withStyles[\"default\"])(styles)(MTableToolbar);\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}