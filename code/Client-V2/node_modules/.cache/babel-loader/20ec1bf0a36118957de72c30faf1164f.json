{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\AllocationSampleSet\\\\AllocationSampleViewDetailHealthOrg.jsx\";\nimport { InputAdornment, Input, Grid, MuiThemeProvider, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { searchByPage, deleteItem, saveItem } from \"../EQAHealthOrg/EQAHealthOrgService\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar AllocationSampleViewDetailHealthOrg = /*#__PURE__*/function (_React$Component) {\n  _inherits(AllocationSampleViewDetailHealthOrg, _React$Component);\n\n  var _super = _createSuper(AllocationSampleViewDetailHealthOrg);\n\n  function AllocationSampleViewDetailHealthOrg(props) {\n    var _this;\n\n    _classCallCheck(this, AllocationSampleViewDetailHealthOrg);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      item: [],\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectedItem: {},\n      keyword: ''\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      var keyword = _this.state.keyword;\n\n      if (keyword != null) {\n        searchObject.text = keyword.trim();\n      }\n\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage; // searchByPage(searchObject).then(({ data }) => {\n      //   this.setState({ itemList: [...data.content], totalElements: data.totalElements })\n      // }\n      // );\n    };\n\n    _this.handleClick = function (event, item) {\n      if (item.id != null) {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: item\n        });\n      } else {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: null\n        });\n      }\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.search = function () {\n      var searchObject = {};\n      var keyword = _this.state.keyword;\n\n      if (keyword != null) {\n        searchObject.text = keyword.trim();\n      }\n\n      searchObject.pageIndex = _this.state.page;\n      searchObject.pageSize = _this.state.rowsPerPage; // searchByPage(searchObject).then(({ data }) => {\n      //   this.setState({ itemList: [...data.content], totalElements: data.totalElements })\n      // });\n    };\n\n    _this.handleKeyWordChange = _this.handleKeyWordChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AllocationSampleViewDetailHealthOrg, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData(this.state.page, this.state.rowsPerPage);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var item = this.props.item;\n      this.setState({\n        item\n      });\n    }\n  }, {\n    key: \"handleKeyWordChange\",\n    value: function handleKeyWordChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open;\n      var keyword = this.state.keyword;\n      var columns = [{\n        title: t(\"EQAHealthOrg.Code\"),\n        field: \"healthOrg.code\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"175x\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrg.Name\"),\n        field: \"healthOrg.name\",\n        width: \"150\"\n      }, {\n        title: t(\"EQAHealthOrg.Address\"),\n        field: \"healthOrg.address\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, t(\"EQAHealthOrg.listtitle\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        data: this.state.item,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                witdth: \"100%\"\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 23\n              }\n            })));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, t('general.close'))));\n    }\n  }]);\n\n  return AllocationSampleViewDetailHealthOrg;\n}(React.Component);\n\nexport default AllocationSampleViewDetailHealthOrg;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/AllocationSampleSet/AllocationSampleViewDetailHealthOrg.jsx"],"names":["InputAdornment","Input","Grid","MuiThemeProvider","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Radio","Dialog","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","searchByPage","deleteItem","saveItem","ValidatorForm","TextValidator","DialogActions","DialogContent","DialogContentText","DialogTitle","Draggable","Paper","Link","SearchIcon","PaperComponent","props","AllocationSampleViewDetailHealthOrg","state","rowsPerPage","page","data","totalElements","item","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectedItem","keyword","setPage","setState","updatePageData","setRowsPerPage","event","target","value","handleChangePage","newPage","searchObject","text","trim","pageIndex","pageSize","handleClick","id","selectedValue","handleKeyDownEnterSearch","e","key","search","handleKeyWordChange","bind","t","i18n","handleClose","handleSelect","open","columns","title","field","align","width","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","cursor","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","rowData","backgroundColor","tableData","color","padding","toolbar","Toolbar","witdth","body","emptyDataSourceMessage"],"mappings":"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","sourcesContent":["import { InputAdornment, Input, Grid, MuiThemeProvider, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Radio, Dialog } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { searchByPage, deleteItem, saveItem } from \"../EQAHealthOrg/EQAHealthOrgService\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass AllocationSampleViewDetailHealthOrg extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleKeyWordChange = this.handleKeyWordChange.bind(this);\r\n  }\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    item:[],\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectedItem: {},\r\n    keyword: ''\r\n  };\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function(){ \r\n      this.updatePageData();\r\n    }) \r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    let { keyword } = this.state;\r\n    if (keyword != null) {\r\n      searchObject.text = keyword.trim();\r\n    }\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    // searchByPage(searchObject).then(({ data }) => {\r\n    //   this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    // }\r\n    // );\r\n  };\r\n  componentDidMount() {\r\n    this.updatePageData(this.state.page, this.state.rowsPerPage);\r\n  }\r\n\r\n  handleClick = (event, item) => {\r\n    if (item.id != null) {\r\n      this.setState({ selectedValue: item.id, selectedItem: item });\r\n    } else {\r\n      this.setState({ selectedValue: item.id, selectedItem: null });\r\n    }\r\n\r\n  }\r\n  componentWillMount() {\r\n    let {item } = this.props;\r\n    this.setState({ item });\r\n  }\r\n  handleKeyDownEnterSearch = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.search()\r\n    }\r\n  }\r\n  search = () => {\r\n    var searchObject = {};\r\n    let { keyword } = this.state;\r\n    if (keyword != null) {\r\n      searchObject.text = keyword.trim();\r\n    }\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    // searchByPage(searchObject).then(({ data }) => {\r\n    //   this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    // });\r\n  }\r\n\r\n  handleKeyWordChange(event) {\r\n    this.setState({ keyword: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open } = this.props;\r\n    let { keyword } = this.state;\r\n    let columns = [\r\n      { title: t(\"EQAHealthOrg.Code\"), field: \"healthOrg.code\", align: \"left\", width: \"150\",\r\n      headerStyle: {\r\n        minWidth:\"175x\",\r\n        paddingLeft: \"10px\",\r\n        paddingRight: \"0px\",\r\n      },\r\n      cellStyle: {\r\n        minWidth:\"175px\",\r\n        paddingLeft: \"10px\",\r\n        paddingRight: \"0px\",\r\n        textAlign: \"left\",\r\n      }, },\r\n      { title: t(\"EQAHealthOrg.Name\"), field: \"healthOrg.name\", width: \"150\" },\r\n      { title: t(\"EQAHealthOrg.Address\"), field: \"healthOrg.address\", align: \"left\", width: \"150\" },\r\n    ];\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} PaperComponent={PaperComponent} maxWidth={\"md\"} >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <h4 className=\"mb-20\">{t(\"EQAHealthOrg.listtitle\")}</h4>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid className=\"mb-16\" container spacing={2}>\r\n            <Grid item md={12} sm={12} xs={12}>\r\n              <MaterialTable data={this.state.item} columns={columns}\r\n                parentChildData={(row, rows) => {\r\n                  var list = rows.find(a => a.id === row.parentId);\r\n                  return list;\r\n                }}\r\n                options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: rowData => ({\r\n                  backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div style={{ witdth: \"100%\" }}>\r\n                      <MTableToolbar {...props} />\r\n                    </div>\r\n                  ),\r\n                }}\r\n                onSelectionChange={(rows) => {\r\n                  this.data = rows;\r\n                }}\r\n                localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button\r\n            className=\"mb-16 mr-36 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => handleClose()}>{t('general.close')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\nexport default AllocationSampleViewDetailHealthOrg;"]},"metadata":{},"sourceType":"module"}