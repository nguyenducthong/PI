{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAReferenceDocument\\\\EQAReferenceDocumentDialog.jsx\";\nimport { Grid, DialogActions, MuiThemeProvider, TextField, Button, Tooltip, Icon, Checkbox, TablePagination, IconButton, Dialog, FormControl, FormControlLabel } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FileSaver from \"file-saver\";\nimport ConstantList from \"../../appConfig\";\nimport axios from \"axios\";\nimport Select from \"@material-ui/core/Select\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { width } from \"dom-helpers\";\nimport ReferenceDocumentFilePopup from \"./ReferenceDocumentFilePopup\";\nimport { saveItem, getCurrentUser } from \"./EQAReferenceDocumentService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3 //etc you get the idea\n\n});\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: \"rgba(0, 0, 0, 0.87)\",\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: \"-15px\",\n      left: \"-30px\",\n      width: \"80px\"\n    }\n  };\n})(Tooltip);\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EQAReferenceDocumentDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQAReferenceDocumentDialog, _React$Component);\n\n  var _super = _createSuper(EQAReferenceDocumentDialog);\n\n  function EQAReferenceDocumentDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQAReferenceDocumentDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      totalElements: 0,\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectedItem: {},\n      keyword: \"\",\n      shouldOpenSelectSourcePopup: false,\n      documents: [],\n      shouldOpenSelectOwnerPopup: false,\n      isRoleAdmin: false\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n      var item = _this.state.item;\n      var name = event.target.name;\n      var value = event.target.value;\n\n      _this.setState({\n        [name]: value\n      });\n    };\n\n    _this.handleClick = function (event, item) {\n      //alert(item);\n      if (item.id != null) {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: item\n        });\n      } else {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: null\n        });\n      }\n    };\n\n    _this.handleChangeValue = function (event, source) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var item = _this.state.item;\n      item[name] = value;\n\n      _this.setState({\n        item: item\n      }, function () {\n        _this.state.item[name] = value;\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenSelectSourcePopup: false,\n        shouldOpenSelectOwnerPopup: false\n      });\n    };\n\n    _this.handleAddRealStateFileItem = function () {\n      _this.setState({\n        shouldOpenPopupFile: true\n      });\n    };\n\n    _this.handleFilePopupClose = function () {\n      _this.setState({\n        shouldOpenPopupFile: false\n      });\n    };\n\n    _this.handleSelectFile = function (items) {\n      // console.log(items)\n      var documents = _this.state.documents;\n      var isCheck = false;\n      var listItem = documents;\n\n      if (listItem != null && listItem.length > 0) {\n        items.forEach(function (e) {\n          listItem.push(e);\n        });\n      } else {\n        listItem = items;\n      } // if (listItem == null) {\n      //     // listItem = []\n      //     listItem = items\n      //     debugger\n      // } else {\n      // }\n\n\n      documents = listItem;\n\n      _this.setState({\n        documents\n      }, function () {\n        _this.handleFilePopupClose();\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var t = _this.props.t;\n\n      if (id) {\n        saveItem(_objectSpread({}, _this.state)).then(function () {\n          toast.success(t(\"mess_edit\"));\n        }).catch(function () {\n          toast.error(t(\"mess_edit_error\"));\n        });\n      } else {\n        saveItem(_objectSpread({}, _this.state)).then(function () {\n          toast.success(t(\"mess_add\"));\n        }).catch(function () {\n          toast.error(t(\"mess_add_error\"));\n        });\n      }\n    };\n\n    _this.handleRowDataCellDownloadFile = function (rowData) {\n      var file = rowData.file;\n      var contentType = rowData.file.contentType;\n      var fileName = rowData.file.name;\n      var url = ConstantList.API_ENPOINT + \"/api/fileDownload/document/\" + rowData.file.id;\n      axios.get(url, {\n        responseType: \"arraybuffer\"\n      }).then(function (successResponse) {\n        var document = successResponse.data;\n        var file = new Blob([document], {\n          type: contentType\n        });\n        return FileSaver.saveAs(file, fileName);\n      });\n    };\n\n    _this.handleRowDataCellDeleteFile = function (rowData) {\n      var documents = _this.state.documents; // let documents = this.state.documents;\n\n      for (var index = 0; index < documents.length; index++) {\n        var item = documents[index];\n\n        if (rowData && item && rowData.id === item.id) {\n          documents.splice(index, 1);\n          documents = documents;\n\n          _this.setState({\n            documents: documents\n          });\n\n          break;\n        }\n      }\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var t = _this.props.t;\n      var item = _this.props.item;\n\n      if (item.documents != null && item.documents.length > 0) {\n        item.documents.forEach(function (element) {\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name === \"description\") {\n              element.description = event.target.value;\n            }\n          }\n        });\n\n        _this.setState({\n          item: item\n        }, function () {});\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAReferenceDocumentDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var item = this.props.item; //   console.log(item);\n\n      var _this$state = this.state,\n          displayName = _this$state.displayName,\n          lastName = _this$state.lastName;\n      this.setState(_objectSpread({}, this.props.item), function () {// this.state.item = item\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView,\n          item = _this$props.item;\n      var searchOwnerType = {\n        pageIndex: 1,\n        pageSize: 1000000\n      };\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          description = _this$state2.description,\n          documents = _this$state2.documents;\n      var selectForValue = {\n        select: 1,\n        add: 2\n      };\n      var columnsAssetFile = [{\n        title: t(\"general.stt\"),\n        field: \"code\",\n        width: \"50px\",\n        align: \"center\",\n        headerStyle: {\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\"\n        },\n        render: function render(rowData) {\n          return rowData.tableData.id + 1;\n        }\n      }, {\n        title: t(\"file.name\"),\n        field: \"file.name\",\n        align: \"left\",\n        width: \"250px\"\n      }, {\n        title: t(\"file.description\"),\n        field: \"description\",\n        align: \"left\",\n        width: \"250px\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            className: \"w-100\",\n            onChange: function onChange(event) {\n              return _this2.handleRowDataCellChange(rowData, event);\n            },\n            multiLine: true,\n            rowsMax: 3,\n            disabled: !isRoleAdmin,\n            type: \"text\",\n            name: \"description\",\n            value: rowData.description,\n            size: \"small\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t(\"general.action\"),\n        field: \"valueText\",\n        width: \"150px\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"none_wrap\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(LightTooltip, {\n            title: t(\"general.download\"),\n            placement: \"top\",\n            enterDelay: 300,\n            leaveDelay: 200,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this2.handleRowDataCellDownloadFile(rowData);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            color: \"primary\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }\n          }, \"download\"))), isRoleAdmin && /*#__PURE__*/React.createElement(LightTooltip, {\n            title: t(\"general.deleteIcon\"),\n            placement: \"top\",\n            enterDelay: 300,\n            leaveDelay: 200,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this2.handleRowDataCellDeleteFile(rowData);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            color: \"error\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }\n          }, \"delete\"))));\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }\n      }, \" \", id ? t(\"update\") : t(\"Add\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 15\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mt-8\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"referenceDocument.description\")),\n        onChange: this.handleChange,\n        disabled: isView,\n        type: \"text\",\n        name: \"description\",\n        size: \"small\",\n        variant: \"outlined\",\n        value: description,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 17\n        }\n      })), isRoleAdmin && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleAddRealStateFileItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 19\n        }\n      }, t(\"file.addFile\")), this.state.shouldOpenPopupFile && /*#__PURE__*/React.createElement(ReferenceDocumentFilePopup, {\n        open: this.state.shouldOpenPopupFile,\n        handleClose: this.handleFilePopupClose,\n        handleSelect: this.handleSelectFile,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        className: \"mt-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        data: documents ? documents : [],\n        columns: columnsAssetFile,\n        options: {\n          toolbar: false,\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          padding: \"dense\",\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? \"#EEE\" : \"#FFF\"\n            };\n          },\n          headerStyle: {\n            backgroundColor: \"#358600\",\n            color: \"#fff\"\n          },\n          maxBodyHeight: \"290px\",\n          minBodyHeight: \"290px\"\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                width: \"100%\"\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 25\n              }\n            })));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }\n      }, t(\"Cancel\")), !isView && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 15\n        }\n      }, t(\"Save\")))));\n    }\n  }]);\n\n  return EQAReferenceDocumentDialog;\n}(React.Component);\n\nexport default EQAReferenceDocumentDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAReferenceDocument/EQAReferenceDocumentDialog.jsx"],"names":["Grid","DialogActions","MuiThemeProvider","TextField","Button","Tooltip","Icon","Checkbox","TablePagination","IconButton","Dialog","FormControl","FormControlLabel","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","withStyles","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FileSaver","ConstantList","axios","Select","AsynchronousAutocomplete","Draggable","Paper","NotificationPopup","Autocomplete","width","ReferenceDocumentFilePopup","saveItem","getCurrentUser","toast","configure","autoClose","draggable","limit","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","PaperComponent","props","EQAReferenceDocumentDialog","state","rowsPerPage","page","totalElements","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectedItem","keyword","shouldOpenSelectSourcePopup","documents","shouldOpenSelectOwnerPopup","isRoleAdmin","setPage","setState","updatePageData","setRowsPerPage","event","target","value","handleChangePage","newPage","handleChange","source","persist","item","name","handleClick","id","selectedValue","handleChangeValue","handleDialogClose","handleAddRealStateFileItem","shouldOpenPopupFile","handleFilePopupClose","handleSelectFile","items","isCheck","listItem","length","forEach","e","push","handleFormSubmit","t","then","success","catch","error","handleRowDataCellDownloadFile","rowData","file","contentType","fileName","url","API_ENPOINT","get","responseType","successResponse","document","data","Blob","type","saveAs","handleRowDataCellDeleteFile","index","splice","handleRowDataCellChange","element","tableData","description","displayName","lastName","i18n","handleClose","handleSelect","open","isView","searchOwnerType","pageIndex","pageSize","selectForValue","select","add","columnsAssetFile","title","field","align","headerStyle","paddingLeft","paddingRight","render","cursor","right","toolbar","selection","actionsColumnIndex","paging","search","padding","rowStyle","maxBodyHeight","minBodyHeight","Toolbar","rows","body","emptyDataSourceMessage"],"mappings":"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","sourcesContent":["import {\r\n  Grid,\r\n  DialogActions,\r\n  MuiThemeProvider,\r\n  TextField,\r\n  Button,\r\n  Tooltip,\r\n  Icon,\r\n  Checkbox,\r\n  TablePagination,\r\n  IconButton,\r\n  Dialog,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FileSaver from \"file-saver\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport axios from \"axios\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { width } from \"dom-helpers\";\r\nimport ReferenceDocumentFilePopup from \"./ReferenceDocumentFilePopup\";\r\nimport { saveItem, getCurrentUser } from \"./EQAReferenceDocumentService\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3,\r\n  //etc you get the idea\r\n});\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n    position: \"absolute\",\r\n    top: \"-15px\",\r\n    left: \"-30px\",\r\n    width: \"80px\",\r\n  },\r\n}))(Tooltip);\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass EQAReferenceDocumentDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    totalElements: 0,\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectedItem: {},\r\n    keyword: \"\",\r\n    shouldOpenSelectSourcePopup: false,\r\n    documents: [],\r\n    shouldOpenSelectOwnerPopup: false,\r\n    isRoleAdmin: false,\r\n  };\r\n  setPage = (page) => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n  setRowsPerPage = (event) => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    let { item } = this.state;\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleClick = (event, item) => {\r\n    //alert(item);\r\n    if (item.id != null) {\r\n      this.setState({ selectedValue: item.id, selectedItem: item });\r\n    } else {\r\n      this.setState({ selectedValue: item.id, selectedItem: null });\r\n    }\r\n  };\r\n  handleChangeValue = (event, source) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    let { item } = this.state;\r\n    item[name] = value;\r\n    this.setState({ item: item }, () => {\r\n      this.state.item[name] = value;\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    let { item } = this.props;\r\n    //   console.log(item);\r\n    let { displayName, lastName } = this.state;\r\n    this.setState({ ...this.props.item }, () => {\r\n      // this.state.item = item\r\n    });\r\n  }\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSelectSourcePopup: false,\r\n      shouldOpenSelectOwnerPopup: false,\r\n    });\r\n  };\r\n  handleAddRealStateFileItem = () => {\r\n    this.setState({ shouldOpenPopupFile: true });\r\n  };\r\n  handleFilePopupClose = () => {\r\n    this.setState({ shouldOpenPopupFile: false });\r\n  };\r\n  handleSelectFile = (items) => {\r\n    // console.log(items)\r\n    let { documents } = this.state;\r\n    let isCheck = false;\r\n    let listItem = documents;\r\n    if (listItem != null && listItem.length > 0) {\r\n      items.forEach((e) => {\r\n        listItem.push(e);\r\n      });\r\n    } else {\r\n      listItem = items;\r\n    }\r\n    // if (listItem == null) {\r\n    //     // listItem = []\r\n    //     listItem = items\r\n    //     debugger\r\n    // } else {\r\n    // }\r\n    documents = listItem;\r\n    this.setState({ documents }, () => {\r\n      this.handleFilePopupClose();\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { t } = this.props;\r\n    if (id) {\r\n      saveItem({ ...this.state })\r\n        .then(() => {\r\n          toast.success(t(\"mess_edit\"));\r\n        })\r\n        .catch(() => {\r\n          toast.error(t(\"mess_edit_error\"));\r\n        });\r\n    } else {\r\n      saveItem({ ...this.state })\r\n        .then(() => {\r\n          toast.success(t(\"mess_add\"));\r\n        })\r\n        .catch(() => {\r\n          toast.error(t(\"mess_add_error\"));\r\n        });\r\n    }\r\n  };\r\n  handleRowDataCellDownloadFile = (rowData) => {\r\n    let file = rowData.file;\r\n    let contentType = rowData.file.contentType;\r\n    let fileName = rowData.file.name;\r\n    const url =\r\n      ConstantList.API_ENPOINT +\r\n      \"/api/fileDownload/document/\" +\r\n      rowData.file.id;\r\n    axios.get(url, { responseType: \"arraybuffer\" }).then((successResponse) => {\r\n      let document = successResponse.data;\r\n      let file = new Blob([document], { type: contentType });\r\n      return FileSaver.saveAs(file, fileName);\r\n    });\r\n  };\r\n\r\n  handleRowDataCellDeleteFile = (rowData) => {\r\n    let { documents } = this.state;\r\n\r\n    // let documents = this.state.documents;\r\n    for (let index = 0; index < documents.length; index++) {\r\n      const item = documents[index];\r\n      if (rowData && item && rowData.id === item.id) {\r\n        documents.splice(index, 1);\r\n        documents = documents;\r\n        this.setState({ documents: documents });\r\n        break;\r\n      }\r\n    }\r\n  };\r\n  handleRowDataCellChange = (rowData, event) => {\r\n    let { t } = this.props;\r\n    let item = this.props.item;\r\n    if (item.documents != null && item.documents.length > 0) {\r\n      item.documents.forEach((element) => {\r\n        if (\r\n          element.tableData != null &&\r\n          rowData != null &&\r\n          rowData.tableData != null &&\r\n          element.tableData.id == rowData.tableData.id\r\n        ) {\r\n          if (event.target.name === \"description\") {\r\n            element.description = event.target.value;\r\n          }\r\n        }\r\n      });\r\n      this.setState({ item: item }, () => {});\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      i18n,\r\n      handleClose,\r\n      handleSelect,\r\n      selectedItem,\r\n      open,\r\n      isRoleAdmin,\r\n      isView,\r\n      item,\r\n    } = this.props;\r\n    let searchOwnerType = { pageIndex: 1, pageSize: 1000000 };\r\n    let { id, description, documents } = this.state;\r\n    const selectForValue = { select: 1, add: 2 };\r\n    let columnsAssetFile = [\r\n      {\r\n        title: t(\"general.stt\"),\r\n        field: \"code\",\r\n        width: \"50px\",\r\n        align: \"center\",\r\n        headerStyle: {\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"10px\",\r\n        },\r\n        render: (rowData) => rowData.tableData.id + 1,\r\n      },\r\n      {\r\n        title: t(\"file.name\"),\r\n        field: \"file.name\",\r\n        align: \"left\",\r\n        width: \"250px\",\r\n      },\r\n      {\r\n        title: t(\"file.description\"),\r\n        field: \"description\",\r\n        align: \"left\",\r\n        width: \"250px\",\r\n        render: (rowData) => (\r\n          <TextValidator\r\n            className=\"w-100\"\r\n            onChange={(event) => this.handleRowDataCellChange(rowData, event)}\r\n            multiLine\r\n            rowsMax={3}\r\n            disabled={!isRoleAdmin}\r\n            type=\"text\"\r\n            name=\"description\"\r\n            value={rowData.description}\r\n            size=\"small\"\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: t(\"general.action\"),\r\n        field: \"valueText\",\r\n        width: \"150px\",\r\n        render: (rowData) => (\r\n          <div className=\"none_wrap\">\r\n            <LightTooltip\r\n              title={t(\"general.download\")}\r\n              placement=\"top\"\r\n              enterDelay={300}\r\n              leaveDelay={200}\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => this.handleRowDataCellDownloadFile(rowData)}\r\n              >\r\n                <Icon fontSize=\"small\" color=\"primary\">\r\n                  download\r\n                </Icon>\r\n              </IconButton>\r\n            </LightTooltip>\r\n            {isRoleAdmin && (\r\n              <LightTooltip\r\n                title={t(\"general.deleteIcon\")}\r\n                placement=\"top\"\r\n                enterDelay={300}\r\n                leaveDelay={200}\r\n              >\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() => this.handleRowDataCellDeleteFile(rowData)}\r\n                >\r\n                  <Icon fontSize=\"small\" color=\"error\">\r\n                    delete\r\n                  </Icon>\r\n                </IconButton>\r\n              </LightTooltip>\r\n            )}\r\n          </div>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n            <span className=\"mb-20 styleColor\">\r\n              {\" \"}\r\n              {id ? t(\"update\") : t(\"Add\")}{\" \"}\r\n            </span>\r\n            <IconButton\r\n              style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              onClick={() => handleClose()}\r\n            >\r\n              <Icon color=\"error\" title={t(\"close\")}>\r\n                close\r\n              </Icon>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mt-8\" container spacing={2}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"referenceDocument.description\")}\r\n                    </span>\r\n                  }\r\n                  onChange={this.handleChange}\r\n                  disabled={isView}\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  value={description}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              {isRoleAdmin && (\r\n                <Grid item md={12} sm={12} xs={12}>\r\n                  <Button\r\n                    size=\"small\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={this.handleAddRealStateFileItem}\r\n                  >\r\n                    {t(\"file.addFile\")}\r\n                  </Button>\r\n                  {this.state.shouldOpenPopupFile && (\r\n                    <ReferenceDocumentFilePopup\r\n                      open={this.state.shouldOpenPopupFile}\r\n                      handleClose={this.handleFilePopupClose}\r\n                      handleSelect={this.handleSelectFile}\r\n                      t={t}\r\n                      i18n={i18n}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              )}\r\n              <Grid item md={12} sm={12} xs={12} className=\"mt-16\">\r\n                <MaterialTable\r\n                  data={documents ? documents : []}\r\n                  columns={columnsAssetFile}\r\n                  options={{\r\n                    toolbar: false,\r\n                    selection: false,\r\n                    actionsColumnIndex: -1,\r\n                    paging: false,\r\n                    search: false,\r\n                    padding: \"dense\",\r\n                    rowStyle: (rowData) => ({\r\n                      backgroundColor:\r\n                        rowData.tableData.id % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n                    }),\r\n                    headerStyle: {\r\n                      backgroundColor: \"#358600\",\r\n                      color: \"#fff\",\r\n                    },\r\n                    maxBodyHeight: \"290px\",\r\n                    minBodyHeight: \"290px\",\r\n                  }}\r\n                  components={{\r\n                    Toolbar: (props) => (\r\n                      <div style={{ width: \"100%\" }}>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    ),\r\n                  }}\r\n                  onSelectionChange={(rows) => {\r\n                    this.data = rows;\r\n                  }}\r\n                  localization={{\r\n                    body: {\r\n                      emptyDataSourceMessage: `${t(\r\n                        \"general.emptyDataMessageTable\"\r\n                      )}`,\r\n                    },\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => this.props.handleClose()}\r\n            >\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {!isView && (\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                {t(\"Save\")}\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nexport default EQAReferenceDocumentDialog;\r\n"]},"metadata":{},"sourceType":"module"}