{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\ResultsOfTheUnits\\\\HealthOrgEQARoundViewDetailDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Icon, IconButton, DialogTitle, DialogContent, DialogActions, Grid } from \"@material-ui/core\";\nimport { getAllResultByHealthOrgEQARoundId, getResultReportById } from \"./ResultsOfTheUnitsService\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getItemById } from \"./ResultsOfTheUnitsService\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport shortid from \"shortid\";\nimport moment from \"moment\";\nimport Paper from '@material-ui/core/Paper';\nimport EQAResultReportElisaDialog from \"../EQAResultReportElisa/EQAResultReportElisaDialog\";\nimport EQAResultReportFastTestEditorDialog from \"../EQAResultReportFastTest/EQAResultReportFastTestEditorDialog\";\nimport EQAResultReportSerodiaDialog from \"../EQAResultReportSerodia/EQAResultReportSerodiaDialog\";\nimport EQAResultReportEcliaEditorDialog from \"../EQAResultReportEclia/EQAResultReportEcliaEditorDialog\";\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: \"px-0\",\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, item.title), \";\");\n}\n\nvar HealthOrgEQARoundViewDetailDialog = /*#__PURE__*/function (_Component) {\n  _inherits(HealthOrgEQARoundViewDetailDialog, _Component);\n\n  var _super = _createSuper(HealthOrgEQARoundViewDetailDialog);\n\n  function HealthOrgEQARoundViewDetailDialog(props) {\n    var _this;\n\n    _classCallCheck(this, HealthOrgEQARoundViewDetailDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      itemList: [],\n      item: {},\n      listSample: [],\n      listResult: [],\n      shouldOpenViewDialogElisa: false,\n      shouldOpenViewDialogFastTest: false,\n      shouldOpenViewDialogSerodia: false,\n      shouldOpenViewDialogEclia: false,\n      isActive: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenViewDialogElisa: false,\n        shouldOpenViewDialogFastTest: false,\n        shouldOpenViewDialogSerodia: false,\n        shouldOpenViewDialogEclia: false\n      });\n    };\n\n    _this.headerRef = React.createRef();\n    _this.dateColRef = React.createRef();\n    _this.timeColRef = React.createRef();\n    _this.contentRef = React.createRef();\n    _this.tbodyRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(HealthOrgEQARoundViewDetailDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(item); // console.log(item);\n\n      getAllResultByHealthOrgEQARoundId(item.id).then(function (result) {\n        if (result != null && result.data != null) {\n          _this2.setState({\n            listResult: result.data\n          }, function () {\n            var sampleSet = item.sampleSet,\n                listSample = item.listSample;\n            listSample = [];\n\n            if (sampleSet != null && sampleSet.details != null && sampleSet.details.length > 0) {\n              sampleSet.details.sort(function (a, b) {\n                return a.orderNumber > b.orderNumber ? 1 : a.orderNumber === b.orderNumber ? a.sampleTube.code > b.sampleTube.code ? 1 : -1 : -1;\n              });\n              sampleSet.details.forEach(function (sampleSetDetail) {\n                var eQASet = {};\n                eQASet.id = sampleSetDetail.sample.id;\n                eQASet.code = sampleSetDetail.code; // sampleSetDetail.sample = sampleSet.details.sample;\n                // sampleSetDetail.code = sampleSet.details.code;\n                //listSample.push(sampleSetDetail.sample);\n\n                listSample.push(eQASet);\n              });\n              this.setState({\n                listSample: listSample\n              });\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getTypeMethodName\",\n    value: function getTypeMethodName(text, type) {\n      if (type == 1) {\n        return text;\n      } else if (type == 2) {\n        return text;\n      } else if (type == 3) {\n        return text;\n      } else if (type == 4) {\n        return text;\n      } else if (type == 5) {\n        return 'KẾT LUẬN';\n      }\n    }\n  }, {\n    key: \"renderColHeadFirst\",\n    value: function renderColHeadFirst(item) {\n      if (item.reagent != null) {\n        item.title = this.getTypeMethodName(item.reagent.name, item.typeMethod);\n      } else {\n        item.title = this.getTypeMethodName(\"\", item.typeMethod);\n      } //item.title = this.getTypeMethodName(item.reagent.name,item.typeMethod);\n\n\n      return this.renderHeadCells(item);\n    }\n  }, {\n    key: \"renderRowHead\",\n    value: function renderRowHead() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          onSelectEvent = _this$props2.onSelectEvent,\n          handleDelete = _this$props2.handleDelete,\n          handleClick = _this$props2.handleClick;\n      var listResult = this.state.listResult;\n      var titleCell = null;\n\n      if (listResult != null && listResult.length > 0) {\n        listResult.forEach(function (item) {\n          if (!titleCell) {\n            titleCell = /*#__PURE__*/React.createElement(TableCell, {\n              style: {\n                backgroundColor: '#358600',\n                color: '#fff',\n                textAlign: \"left\",\n                textTransform: \"uppercase\"\n              },\n              key: shortid.generate(),\n              className: \"px-0\",\n              align: \"left\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 23\n              }\n            }, _this3.getTypeMethodName(item.typeMethod));\n          } else {\n            titleCell += /*#__PURE__*/React.createElement(TableCell, {\n              style: {\n                backgroundColor: '#358600',\n                color: '#fff',\n                textAlign: \"left\",\n                textTransform: \"uppercase\"\n              },\n              key: shortid.generate(),\n              className: \"px-0\",\n              align: \"left\",\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 24\n              }\n            }, _this3.getTypeMethodName(item.typeMethod));\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }, listResult.map(function (item, index) {\n        return _this3.renderColHeadFirst(item);\n      }));\n    }\n  }, {\n    key: \"renderHeadCells\",\n    value: function renderHeadCells(item) {\n      if (item == null) {\n        item = {};\n      }\n\n      var titleCell = /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff',\n          textAlign: \"left\",\n          textTransform: \"uppercase\"\n        },\n        key: shortid.generate(),\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }\n      }, item.title);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 7\n        }\n      }, titleCell);\n    }\n  }, {\n    key: \"openDialogDetailCellContent\",\n    value: function openDialogDetailCellContent(resultReportDetail) {\n      var _this4 = this;\n\n      if (resultReportDetail != null && resultReportDetail.resultReport != null && resultReportDetail.resultReport.id != null) {\n        getResultReportById(resultReportDetail.resultReport.id).then(function (result) {\n          var item = result.data;\n          item.isView = true;\n\n          _this4.setState({\n            item: item\n          }, function () {\n            //Elisa(1),//Kết Quả Xét Nghiệm Bằng Kỹ Thuật Elisa\n            //FastTest(2),//Kết Quả Xét Nghiệm Bằng Kỹ Thuật Xét Nghiệm Nhanh\n            //SERODIA(3)//Kết Quả Xét Nghiệm Bằng Kỹ Thuật SERODIA\n            //ECLIA(4)//KẾT QUẢ ĐIỆN/HÓA PHÁT QUANG\n            if (item.typeMethod == 1) {\n              this.setState({\n                shouldOpenViewDialogElisa: true\n              });\n            } else if (item.typeMethod == 2) {\n              this.setState({\n                shouldOpenViewDialogFastTest: true\n              });\n            } else if (item.typeMethod == 3) {\n              this.setState({\n                shouldOpenViewDialogSerodia: true\n              });\n            } else if (item.typeMethod == 4) {\n              this.setState({\n                shouldOpenViewDialogEclia: true\n              });\n            }\n          });\n        });\n      }\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells(item) {\n      var _this5 = this;\n\n      var _this$props3 = this.props,\n          t = _this$props3.t,\n          i18n = _this$props3.i18n;\n\n      if (item == null) {\n        item = {};\n      }\n\n      var contentCell = /*#__PURE__*/React.createElement(TableCell, {\n        key: shortid.generate(),\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 23\n        }\n      }, item.result == 1 ? /*#__PURE__*/React.createElement(\"small\", {\n        className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this5.openDialogDetailCellContent(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, t('result.positive'))) : /*#__PURE__*/React.createElement(\"small\", {\n        className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        onClick: function onClick() {\n          return _this5.openDialogDetailCellContent(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, item.result == -2 ? t('result.none') : item.result == -1 ? t('result.negative') : item.result == 0 ? t('result.indertermine') : item.result == 2 ? t('EQAResultReportElisa.Result.confirms') : '')));\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 7\n        }\n      }, contentCell);\n    }\n  }, {\n    key: \"renderSample\",\n    value: function renderSample(item, index) {\n      var _this6 = this;\n\n      var sttCell = /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          textAlign: \"center\",\n          width: \"15px\"\n        },\n        className: \"\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 19\n        }\n      }, index + 1);\n      var titleCell = /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          textAlign: \"left\"\n        },\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }, item ? item.code : '');\n      var listResult = this.state.listResult;\n      var cellContentByMethod = [];\n      listResult.forEach(function (result) {\n        var content = null;\n\n        if (result != null && result.details != null && result.details.length > 0 && item) {\n          result.details.forEach(function (resultDetail) {\n            if (resultDetail.sampleTube != null && resultDetail.sampleTube.eqaSample != null && item.id == resultDetail.sampleTube.eqaSample.id) {\n              content = resultDetail;\n            }\n          });\n        }\n\n        cellContentByMethod.push(content);\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 7\n        }\n      }, sttCell, titleCell, cellContentByMethod.map(function (cell, index) {\n        return _this6.renderCells(cell);\n      }));\n    }\n  }, {\n    key: \"renderResultDetails\",\n    value: function renderResultDetails(sample, index) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 9\n        }\n      }, this.renderSample(sample, index)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var _this$props4 = this.props,\n          open = _this$props4.open,\n          handleClose = _this$props4.handleClose,\n          handleOKEditClose = _this$props4.handleOKEditClose,\n          t = _this$props4.t,\n          i18n = _this$props4.i18n;\n      var infoStyle = {\n        fontSize: '18px',\n        fontWeight: 'bold'\n      };\n      var titleStyle = {\n        fontSize: '18px'\n      };\n      var _this$state = this.state,\n          id = _this$state.id,\n          healthOrg = _this$state.healthOrg,\n          round = _this$state.round,\n          sampleSet = _this$state.sampleSet,\n          listSample = _this$state.listSample,\n          listResult = _this$state.listResult,\n          shouldOpenViewDialogElisa = _this$state.shouldOpenViewDialogElisa,\n          shouldOpenViewDialogFastTest = _this$state.shouldOpenViewDialogFastTest,\n          shouldOpenViewDialogSerodia = _this$state.shouldOpenViewDialogSerodia,\n          shouldOpenViewDialogEclia = _this$state.shouldOpenViewDialogEclia,\n          item = _this$state.item;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        maxWidth: 'lg',\n        fullWidth: true,\n        disableBackdropClick: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }\n      }, t(\"result.title\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 114\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginRight: \"10%\"\n        },\n        className: \"mb-20 mr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }\n      }, t(\"ResultsOfTheUnits.laboratory\"), \": \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 109\n        }\n      }, healthOrg.name, \" (\", healthOrg.code, \")\")), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginRight: \"10%\"\n        },\n        className: \"mb-20 mr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }, t(\"ResultsOfTheUnits.eqaPlanning\"), \": \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 111\n        }\n      }, round.eqaPlanning.name)), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          marginLeft: \"10%\"\n        },\n        className: \"mb-20 mr-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }\n      }, t(\"ResultsOfTheUnits.round\"), \": \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 104\n        }\n      }, round.name)), listResult.length > 0 && listSample && /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-8 mt-8\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 54\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TableContainer, {\n        style: {\n          maxHeight: 1000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff',\n          textAlign: \"center\",\n          width: \"15px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 29\n        }\n      }, t('ResultsOfTheUnits.STT')), /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff',\n          textAlign: \"left\",\n          textTransform: \"uppercase\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }, t('ResultsOfTheUnits.set')), listResult && this.renderRowHead())), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }\n      }, listSample && listSample.map(function (sample, index) {\n        return _this7.renderResultDetails(sample, index);\n      })))))))), shouldOpenViewDialogElisa && /*#__PURE__*/React.createElement(EQAResultReportElisaDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenViewDialogElisa,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 15\n        }\n      }), shouldOpenViewDialogFastTest && /*#__PURE__*/React.createElement(EQAResultReportFastTestEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenViewDialogFastTest,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }), shouldOpenViewDialogSerodia && /*#__PURE__*/React.createElement(EQAResultReportSerodiaDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenViewDialogSerodia,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }\n      }), shouldOpenViewDialogEclia && /*#__PURE__*/React.createElement(EQAResultReportEcliaEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenViewDialogEclia,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this7.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }\n      }, t('Cancel'))));\n    }\n  }]);\n\n  return HealthOrgEQARoundViewDetailDialog;\n}(Component);\n\nexport default HealthOrgEQARoundViewDetailDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/ResultsOfTheUnits/HealthOrgEQARoundViewDetailDialog.jsx"],"names":["React","Component","Dialog","Button","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","Icon","IconButton","DialogTitle","DialogContent","DialogActions","Grid","getAllResultByHealthOrgEQARoundId","getResultReportById","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","ValidatorForm","TextValidator","getItemById","useTranslation","withTranslation","Trans","VisibilityIcon","shortid","moment","Paper","EQAResultReportElisaDialog","EQAResultReportFastTestEditorDialog","EQAResultReportSerodiaDialog","EQAResultReportEcliaEditorDialog","MaterialButton","props","t","i18n","item","title","HealthOrgEQARoundViewDetailDialog","state","name","code","description","itemList","listSample","listResult","shouldOpenViewDialogElisa","shouldOpenViewDialogFastTest","shouldOpenViewDialogSerodia","shouldOpenViewDialogEclia","isActive","handleChange","event","source","persist","setState","target","checked","value","handleDialogClose","headerRef","createRef","dateColRef","timeColRef","contentRef","tbodyRef","open","handleClose","id","then","result","data","sampleSet","details","length","sort","a","b","orderNumber","sampleTube","forEach","sampleSetDetail","eQASet","sample","push","text","type","reagent","getTypeMethodName","typeMethod","renderHeadCells","onSelectEvent","handleDelete","handleClick","titleCell","backgroundColor","color","textAlign","textTransform","generate","map","index","renderColHeadFirst","resultReportDetail","resultReport","isView","contentCell","openDialogDetailCellContent","sttCell","width","cellContentByMethod","content","resultDetail","eqaSample","cell","renderCells","renderSample","handleOKEditClose","infoStyle","fontSize","fontWeight","titleStyle","healthOrg","round","cursor","position","right","top","marginRight","eqaPlanning","marginLeft","maxHeight","renderRowHead","renderResultDetails"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,cAHF,EAIEC,KAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,QAPF,EAQEC,SARF,EASEC,IATF,EAUEC,UAVF,EAWEC,WAXF,EAYEC,aAZF,EAaEC,aAbF,EAcEC,IAdF,QAeO,mBAfP;AAgBA,SAASC,iCAAT,EAA4CC,mBAA5C,QAAuE,4BAAvE;AACA,OAAOC,aAAP,IAAwBC,aAAxB,EAAuCC,IAAvC,EAA6CC,UAA7C,EAAyDC,YAAzD,QAA6E,gBAA7E;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,0BAAP,MAAuC,oDAAvC;AACA,OAAOC,mCAAP,MAAgD,gEAAhD;AACA,OAAOC,4BAAP,MAAyC,wDAAzC;AACA,OAAOC,gCAAP,MAA6C,0DAA7C;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,wBAETZ,cAAc,EAFL;AAAA,MAErBa,CAFqB,mBAErBA,CAFqB;AAAA,MAElBC,IAFkB,mBAElBA,IAFkB;;AAG7B,MAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,KAAK,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACC,KADR,CADF,MADF;AAOD;;IAEKC,iC;;;;;AACJ,6CAAYL,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AADiB,UASnBM,KATmB,GASX;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNP,MAAAA,IAAI,EAAE,EALA;AAMNQ,MAAAA,UAAU,EAAE,EANN;AAONC,MAAAA,UAAU,EAAE,EAPN;AAQNC,MAAAA,yBAAyB,EAAE,KARrB;AASNC,MAAAA,4BAA4B,EAAE,KATxB;AAUNC,MAAAA,2BAA2B,EAAE,KAVvB;AAWNC,MAAAA,yBAAyB,EAAE,KAXrB;AAYNC,MAAAA,QAAQ,EAAE;AAZJ,KATW;;AAAA,UAwBnBC,YAxBmB,GAwBJ,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,CAACE,OAAN;;AACA,UAAID,MAAM,KAAK,QAAf,EAAyB;AACvB,cAAKE,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEE,KAAK,CAACI,MAAN,CAAaC;AAAzB,SAAd;;AACA;AACD;;AACD,YAAKF,QAAL,CAAc;AACZ,SAACH,KAAK,CAACI,MAAN,CAAahB,IAAd,GAAqBY,KAAK,CAACI,MAAN,CAAaE;AADtB,OAAd;AAGD,KAjCkB;;AAAA,UA0PnBC,iBA1PmB,GA0PC,YAAM;AACxB,YAAKJ,QAAL,CAAc;AACZT,QAAAA,yBAAyB,EAAE,KADf;AAEZC,QAAAA,4BAA4B,EAAE,KAFlB;AAGZC,QAAAA,2BAA2B,EAAE,KAHjB;AAIZC,QAAAA,yBAAyB,EAAE;AAJf,OAAd;AAMD,KAjQkB;;AAEjB,UAAKW,SAAL,GAAiBjE,KAAK,CAACkE,SAAN,EAAjB;AACA,UAAKC,UAAL,GAAkBnE,KAAK,CAACkE,SAAN,EAAlB;AACA,UAAKE,UAAL,GAAkBpE,KAAK,CAACkE,SAAN,EAAlB;AACA,UAAKG,UAAL,GAAkBrE,KAAK,CAACkE,SAAN,EAAlB;AACA,UAAKI,QAAL,GAAgBtE,KAAK,CAACkE,SAAN,EAAhB;AANiB;AAOlB;;;;yCA4BoB;AAAA;;AAAA,wBACe,KAAK5B,KADpB;AAAA,UACbiC,IADa,eACbA,IADa;AAAA,UACPC,WADO,eACPA,WADO;AAAA,UACM/B,IADN,eACMA,IADN;AAEnB,WAAKmB,QAAL,CAAcnB,IAAd,EAFmB,CAGnB;;AACAzB,MAAAA,iCAAiC,CAACyB,IAAI,CAACgC,EAAN,CAAjC,CAA2CC,IAA3C,CAAgD,UAACC,MAAD,EAAY;AAC1D,YAAIA,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACC,IAAP,IAAe,IAArC,EAA2C;AACzC,UAAA,MAAI,CAAChB,QAAL,CAAc;AACZV,YAAAA,UAAU,EAAEyB,MAAM,CAACC;AADP,WAAd,EAEG,YAAY;AAAA,gBACPC,SADO,GACmBpC,IADnB,CACPoC,SADO;AAAA,gBACI5B,UADJ,GACmBR,IADnB,CACIQ,UADJ;AAEbA,YAAAA,UAAU,GAAG,EAAb;;AACA,gBAAI4B,SAAS,IAAI,IAAb,IAAqBA,SAAS,CAACC,OAAV,IAAqB,IAA1C,IAAkDD,SAAS,CAACC,OAAV,CAAkBC,MAAlB,GAA2B,CAAjF,EAAoF;AAClFF,cAAAA,SAAS,CAACC,OAAV,CAAkBE,IAAlB,CAAuB,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAWD,CAAC,CAACE,WAAF,GAAgBD,CAAC,CAACC,WAAnB,GAAkC,CAAlC,GAAuCF,CAAC,CAACE,WAAF,KAAkBD,CAAC,CAACC,WAArB,GAAsCF,CAAC,CAACG,UAAF,CAAatC,IAAb,GAAoBoC,CAAC,CAACE,UAAF,CAAatC,IAAlC,GAA0C,CAA1C,GAA8C,CAAC,CAApF,GAAyF,CAAC,CAA1I;AAAA,eAAvB;AACA+B,cAAAA,SAAS,CAACC,OAAV,CAAkBO,OAAlB,CAA0B,UAAAC,eAAe,EAAI;AAC3C,oBAAIC,MAAM,GAAG,EAAb;AACAA,gBAAAA,MAAM,CAACd,EAAP,GAAYa,eAAe,CAACE,MAAhB,CAAuBf,EAAnC;AACAc,gBAAAA,MAAM,CAACzC,IAAP,GAAcwC,eAAe,CAACxC,IAA9B,CAH2C,CAI3C;AACA;AACA;;AACAG,gBAAAA,UAAU,CAACwC,IAAX,CAAgBF,MAAhB;AACD,eARD;AASA,mBAAK3B,QAAL,CAAc;AACZX,gBAAAA,UAAU,EAAEA;AADA,eAAd;AAGD;AACF,WApBD;AAqBD;AACF,OAxBD;AAyBD;;;sCAEiByC,I,EAAMC,I,EAAM;AAC5B,UAAIA,IAAI,IAAI,CAAZ,EAAe;AACb,eAAOD,IAAP;AACD,OAFD,MAEO,IAAIC,IAAI,IAAI,CAAZ,EAAe;AACpB,eAAOD,IAAP;AACD,OAFM,MAEA,IAAIC,IAAI,IAAI,CAAZ,EAAe;AACpB,eAAOD,IAAP;AACD,OAFM,MAEA,IAAIC,IAAI,IAAI,CAAZ,EAAe;AACpB,eAAOD,IAAP;AACD,OAFM,MAEA,IAAIC,IAAI,IAAI,CAAZ,EAAe;AACpB,eAAO,UAAP;AACD;AACF;;;uCAEkBlD,I,EAAM;AACvB,UAAIA,IAAI,CAACmD,OAAL,IAAgB,IAApB,EAA0B;AACxBnD,QAAAA,IAAI,CAACC,KAAL,GAAa,KAAKmD,iBAAL,CAAuBpD,IAAI,CAACmD,OAAL,CAAa/C,IAApC,EAA0CJ,IAAI,CAACqD,UAA/C,CAAb;AACD,OAFD,MAEO;AACLrD,QAAAA,IAAI,CAACC,KAAL,GAAa,KAAKmD,iBAAL,CAAuB,EAAvB,EAA2BpD,IAAI,CAACqD,UAAhC,CAAb;AACD,OALsB,CAMvB;;;AACA,aACE,KAAKC,eAAL,CAAqBtD,IAArB,CADF;AAGD;;;oCAEe;AAAA;;AAAA,yBACqC,KAAKH,KAD1C;AAAA,UACR0D,aADQ,gBACRA,aADQ;AAAA,UACOC,YADP,gBACOA,YADP;AAAA,UACqBC,WADrB,gBACqBA,WADrB;AAAA,UAERhD,UAFQ,GAEO,KAAKN,KAFZ,CAERM,UAFQ;AAGd,UAAIiD,SAAS,GAAG,IAAhB;;AACA,UAAIjD,UAAU,IAAI,IAAd,IAAsBA,UAAU,CAAC6B,MAAX,GAAoB,CAA9C,EAAiD;AAC/C7B,QAAAA,UAAU,CAACmC,OAAX,CAAmB,UAAA5C,IAAI,EAAI;AACzB,cAAI,CAAC0D,SAAL,EAAgB;AACdA,YAAAA,SAAS,gBAAG,oBAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAC5BC,gBAAAA,eAAe,EAAE,SADW;AAE5BC,gBAAAA,KAAK,EAAE,MAFqB;AAEbC,gBAAAA,SAAS,EAAE,MAFE;AAEMC,gBAAAA,aAAa,EAAE;AAFrB,eAAlB;AAGT,cAAA,GAAG,EAAEzE,OAAO,CAAC0E,QAAR,EAHI;AAGgB,cAAA,SAAS,EAAC,MAH1B;AAGiC,cAAA,KAAK,EAAC,MAHvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAIT,MAAI,CAACX,iBAAL,CAAuBpD,IAAI,CAACqD,UAA5B,CAJS,CAAZ;AAMD,WAPD,MAOO;AACLK,YAAAA,SAAS,iBAAI,oBAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAC7BC,gBAAAA,eAAe,EAAE,SADY;AAE7BC,gBAAAA,KAAK,EAAE,MAFsB;AAEdC,gBAAAA,SAAS,EAAE,MAFG;AAEKC,gBAAAA,aAAa,EAAE;AAFpB,eAAlB;AAGV,cAAA,GAAG,EAAEzE,OAAO,CAAC0E,QAAR,EAHK;AAGe,cAAA,SAAS,EAAC,MAHzB;AAGgC,cAAA,KAAK,EAAC,MAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAIV,MAAI,CAACX,iBAAL,CAAuBpD,IAAI,CAACqD,UAA5B,CAJU,CAAb;AAMD;AACF,SAhBD;AAiBD;;AAED,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG5C,UAAU,CAACuD,GAAX,CAAe,UAAChE,IAAD,EAAOiE,KAAP;AAAA,eAAiB,MAAI,CAACC,kBAAL,CAAwBlE,IAAxB,CAAjB;AAAA,OAAf,CADH,CADF;AAKD;;;oCAEeA,I,EAAM;AACpB,UAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBA,QAAAA,IAAI,GAAG,EAAP;AACD;;AACD,UAAI0D,SAAS,gBAAG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAChCC,UAAAA,eAAe,EAAE,SADe;AAEhCC,UAAAA,KAAK,EAAE,MAFyB;AAEjBC,UAAAA,SAAS,EAAE,MAFM;AAEEC,UAAAA,aAAa,EAAE;AAFjB,SAAlB;AAGb,QAAA,GAAG,EAAEzE,OAAO,CAAC0E,QAAR,EAHQ;AAGY,QAAA,SAAS,EAAC,MAHtB;AAG6B,QAAA,KAAK,EAAC,MAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIb/D,IAAI,CAACC,KAJQ,CAAhB;AAMA,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGyD,SADH,CADF;AAKD;;;gDAC2BS,kB,EAAoB;AAAA;;AAC9C,UAAIA,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,CAACC,YAAnB,IAAmC,IAAjE,IAAyED,kBAAkB,CAACC,YAAnB,CAAgCpC,EAAhC,IAAsC,IAAnH,EAAyH;AACvHxD,QAAAA,mBAAmB,CAAC2F,kBAAkB,CAACC,YAAnB,CAAgCpC,EAAjC,CAAnB,CAAwDC,IAAxD,CAA6D,UAACC,MAAD,EAAY;AACvE,cAAIlC,IAAI,GAAGkC,MAAM,CAACC,IAAlB;AACAnC,UAAAA,IAAI,CAACqE,MAAL,GAAc,IAAd;;AACA,UAAA,MAAI,CAAClD,QAAL,CAAc;AAAEnB,YAAAA,IAAI,EAAEA;AAAR,WAAd,EAA8B,YAAY;AACxC;AACA;AACA;AACA;AACA,gBAAIA,IAAI,CAACqD,UAAL,IAAmB,CAAvB,EAA0B;AACxB,mBAAKlC,QAAL,CAAc;AAAET,gBAAAA,yBAAyB,EAAE;AAA7B,eAAd;AACD,aAFD,MAEO,IAAIV,IAAI,CAACqD,UAAL,IAAmB,CAAvB,EAA0B;AAC/B,mBAAKlC,QAAL,CAAc;AAAER,gBAAAA,4BAA4B,EAAE;AAAhC,eAAd;AACD,aAFM,MAEA,IAAIX,IAAI,CAACqD,UAAL,IAAmB,CAAvB,EAA0B;AAC/B,mBAAKlC,QAAL,CAAc;AAAEP,gBAAAA,2BAA2B,EAAE;AAA/B,eAAd;AACD,aAFM,MAEA,IAAIZ,IAAI,CAACqD,UAAL,IAAmB,CAAvB,EAA0B;AAC/B,mBAAKlC,QAAL,CAAc;AAAEN,gBAAAA,yBAAyB,EAAE;AAA7B,eAAd;AACD;AACF,WAdD;AAeD,SAlBD;AAmBD;AACF;;;gCAEWb,I,EAAM;AAAA;;AAAA,yBACE,KAAKH,KADP;AAAA,UACVC,CADU,gBACVA,CADU;AAAA,UACPC,IADO,gBACPA,IADO;;AAEhB,UAAIC,IAAI,IAAI,IAAZ,EAAkB;AAChBA,QAAAA,IAAI,GAAG,EAAP;AACD;;AACD,UAAIsE,WAAW,gBAAG,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAEjF,OAAO,CAAC0E,QAAR,EAAhB;AAAoC,QAAA,SAAS,EAAC,MAA9C;AAAqD,QAAA,KAAK,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEd/D,IAAI,CAACkC,MAAL,IAAe,CAAf,gBACE;AAAO,QAAA,SAAS,EAAC,kDAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACqC,2BAAL,CAAiCvE,IAAjC,CAAN;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,CAAC,CAAC,iBAAD,CADJ,CADF,CADF,gBAOI;AAAO,QAAA,SAAS,EAAC,0CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACyE,2BAAL,CAAiCvE,IAAjC,CAAN;AAAA,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIA,IAAI,CAACkC,MAAL,IAAe,CAAC,CAAhB,GACEpC,CAAC,CAAC,aAAD,CADH,GAGIE,IAAI,CAACkC,MAAL,IAAe,CAAC,CAAhB,GACEpC,CAAC,CAAC,iBAAD,CADH,GAGIE,IAAI,CAACkC,MAAL,IAAe,CAAf,GACEpC,CAAC,CAAC,qBAAD,CADH,GAEKE,IAAI,CAACkC,MAAL,IAAe,CAAf,GACHpC,CAAC,CAAC,sCAAD,CADE,GAGD,EAbhB,CADF,CATU,CAAlB;AAiCA,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGwE,WADH,CADF;AAKD;;;iCAEYtE,I,EAAMiE,K,EAAO;AAAA;;AACxB,UAAIO,OAAO,gBAAG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEX,UAAAA,SAAS,EAAE,QAAb;AAAuBY,UAAAA,KAAK,EAAE;AAA9B,SAAlB;AAAyD,QAAA,SAAS,EAAC,EAAnE;AAAsE,QAAA,KAAK,EAAC,QAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACXR,KAAK,GAAG,CADG,CAAd;AAGA,UAAIP,SAAS,gBAAG,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAAEG,UAAAA,SAAS,EAAE;AAAb,SAAlB;AAAyC,QAAA,SAAS,EAAC,MAAnD;AAA0D,QAAA,KAAK,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACb7D,IAAI,GAAGA,IAAI,CAACK,IAAR,GAAe,EADN,CAAhB;AAJwB,UAQlBI,UARkB,GAQH,KAAKN,KARF,CAQlBM,UARkB;AASxB,UAAIiE,mBAAmB,GAAG,EAA1B;AACAjE,MAAAA,UAAU,CAACmC,OAAX,CAAmB,UAAAV,MAAM,EAAI;AAC3B,YAAIyC,OAAO,GAAG,IAAd;;AACA,YAAIzC,MAAM,IAAI,IAAV,IAAkBA,MAAM,CAACG,OAAP,IAAkB,IAApC,IAA4CH,MAAM,CAACG,OAAP,CAAeC,MAAf,GAAwB,CAApE,IAAyEtC,IAA7E,EAAmF;AACjFkC,UAAAA,MAAM,CAACG,OAAP,CAAeO,OAAf,CAAuB,UAAAgC,YAAY,EAAI;AACrC,gBAAIA,YAAY,CAACjC,UAAb,IAA2B,IAA3B,IAAmCiC,YAAY,CAACjC,UAAb,CAAwBkC,SAAxB,IAAqC,IAAxE,IACC7E,IAAI,CAACgC,EAAL,IAAW4C,YAAY,CAACjC,UAAb,CAAwBkC,SAAxB,CAAkC7C,EADlD,EACsD;AACpD2C,cAAAA,OAAO,GAAGC,YAAV;AACD;AACF,WALD;AAMD;;AACDF,QAAAA,mBAAmB,CAAC1B,IAApB,CAAyB2B,OAAzB;AACD,OAXD;AAaA,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,OADH,EAEGd,SAFH,EAGGgB,mBAAmB,CAACV,GAApB,CAAwB,UAACc,IAAD,EAAOb,KAAP;AAAA,eAAiB,MAAI,CAACc,WAAL,CAAiBD,IAAjB,CAAjB;AAAA,OAAxB,CAHH,CADF;AAOD;;;wCAEmB/B,M,EAAQkB,K,EAAO;AACjC,0BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKe,YAAL,CAAkBjC,MAAlB,EAA0BkB,KAA1B,CADH,CADF,CADF;AAOD;;;6BAWQ;AAAA;;AAAA,yBACiD,KAAKpE,KADtD;AAAA,UACDiC,IADC,gBACDA,IADC;AAAA,UACKC,WADL,gBACKA,WADL;AAAA,UACkBkD,iBADlB,gBACkBA,iBADlB;AAAA,UACqCnF,CADrC,gBACqCA,CADrC;AAAA,UACwCC,IADxC,gBACwCA,IADxC;AAEP,UAAMmF,SAAS,GAAG;AAChBC,QAAAA,QAAQ,EAAE,MADM;AAEhBC,QAAAA,UAAU,EAAE;AAFI,OAAlB;AAIA,UAAMC,UAAU,GAAG;AACjBF,QAAAA,QAAQ,EAAE;AADO,OAAnB;AANO,wBAqBH,KAAKhF,KArBF;AAAA,UAUL6B,EAVK,eAULA,EAVK;AAAA,UAWLsD,SAXK,eAWLA,SAXK;AAAA,UAYLC,KAZK,eAYLA,KAZK;AAAA,UAaLnD,SAbK,eAaLA,SAbK;AAAA,UAcL5B,UAdK,eAcLA,UAdK;AAAA,UAeLC,UAfK,eAeLA,UAfK;AAAA,UAgBLC,yBAhBK,eAgBLA,yBAhBK;AAAA,UAiBLC,4BAjBK,eAiBLA,4BAjBK;AAAA,UAkBLC,2BAlBK,eAkBLA,2BAlBK;AAAA,UAmBLC,yBAnBK,eAmBLA,yBAnBK;AAAA,UAoBLb,IApBK,eAoBLA,IApBK;AAsBP,0BACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE+B,WAAjB;AAA8B,QAAA,IAAI,EAAED,IAApC;AAA0C,QAAA,QAAQ,EAAE,IAApD;AAA0D,QAAA,SAAS,EAAE,IAArE;AAA2E,QAAA,oBAAoB,EAAE,IAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAE0D,UAAAA,MAAM,EAAE;AAAV,SAApB;AAAwC,QAAA,EAAE,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG1F,CAAC,CAAC,cAAD,CADJ,CADF,eAIE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAE2F,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,KAAK,EAAE,MAA/B;AAAuCC,UAAAA,GAAG,EAAE;AAA5C,SAAnB;AAAyE,QAAA,OAAO,EAAE;AAAA,iBAAM5D,WAAW,EAAjB;AAAA,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AACnG,QAAA,KAAK,EAAEjC,CAAC,CAAC,OAAD,CAD2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAvG,CAJF,CADF,eAWE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,KAAK,EAAE;AAAE8F,UAAAA,WAAW,EAAE;AAAf,SAAZ;AAAoC,QAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4D9F,CAAC,CAAC,8BAAD,CAA7D,qBAAgG;AAAM,QAAA,KAAK,EAAE;AAACsF,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCE,SAAS,CAAClF,IAA9C,QAAsDkF,SAAS,CAACjF,IAAhE,MAAhG,CADF,eAEE;AAAM,QAAA,KAAK,EAAE;AAAEuF,UAAAA,WAAW,EAAE;AAAf,SAAb;AAAqC,QAAA,SAAS,EAAC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6D9F,CAAC,CAAC,+BAAD,CAA9D,qBAAkG;AAAM,QAAA,KAAK,EAAE;AAACsF,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCG,KAAK,CAACM,WAAN,CAAkBzF,IAAtD,CAAlG,CAFF,eAIE;AAAM,QAAA,KAAK,EAAE;AAAE0F,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAoC,QAAA,SAAS,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4DhG,CAAC,CAAC,yBAAD,CAA7D,qBAA2F;AAAM,QAAA,KAAK,EAAE;AAACsF,UAAAA,UAAU,EAAE;AAAb,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCG,KAAK,CAACnF,IAA1C,CAA3F,CAJF,EAMGK,UAAU,CAAC6B,MAAX,GAAoB,CAApB,IAAyB9B,UAAzB,iBAAwC,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,SAAS,MAArC;AAAsC,QAAA,OAAO,EAAE,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACvC,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAE;AAAEuF,UAAAA,SAAS,EAAE;AAAb,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,YAAY,MAAnB;AAAoB,sBAAW,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAChBpC,UAAAA,eAAe,EAAE,SADD;AAEhBC,UAAAA,KAAK,EAAE,MAFS;AAEDC,UAAAA,SAAS,EAAE,QAFV;AAEoBY,UAAAA,KAAK,EAAE;AAF3B,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI3E,CAAC,CAAC,uBAAD,CAHL,CADF,eAKE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAChB6D,UAAAA,eAAe,EAAE,SADD;AAEhBC,UAAAA,KAAK,EAAE,MAFS;AAEDC,UAAAA,SAAS,EAAE,MAFV;AAEkBC,UAAAA,aAAa,EAAE;AAFjC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGIhE,CAAC,CAAC,uBAAD,CAHL,CALF,EAUKW,UAAU,IAAI,KAAKuF,aAAL,EAVnB,CADF,CADF,eAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEKxF,UAAU,IAAIA,UAAU,CAACwD,GAAX,CAAe,UAACjB,MAAD,EAASkB,KAAT;AAAA,eAAmB,MAAI,CAACgC,mBAAL,CAAyBlD,MAAzB,EAAiCkB,KAAjC,CAAnB;AAAA,OAAf,CAFnB,CAhBF,CADF,CADF,CADF,CADF,CADuC,CAN3C,EAuCGvD,yBAAyB,iBACxB,oBAAC,0BAAD;AAA4B,QAAA,CAAC,EAAEZ,CAA/B;AAAkC,QAAA,IAAI,EAAEC,IAAxC;AACE,QAAA,WAAW,EAAE,KAAKwB,iBADpB;AAEE,QAAA,IAAI,EAAEb,yBAFR;AAGE,QAAA,iBAAiB,EAAE,KAAKuE,iBAH1B;AAIE,QAAA,IAAI,EAAEjF,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxCJ,EA+CGW,4BAA4B,iBAC3B,oBAAC,mCAAD;AAAqC,QAAA,CAAC,EAAEb,CAAxC;AAA2C,QAAA,IAAI,EAAEC,IAAjD;AACE,QAAA,WAAW,EAAE,KAAKwB,iBADpB;AAEE,QAAA,IAAI,EAAEZ,4BAFR;AAGE,QAAA,iBAAiB,EAAE,KAAKsE,iBAH1B;AAIE,QAAA,IAAI,EAAEjF,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDJ,EAuDGY,2BAA2B,iBAC1B,oBAAC,4BAAD;AAA8B,QAAA,CAAC,EAAEd,CAAjC;AAAoC,QAAA,IAAI,EAAEC,IAA1C;AACE,QAAA,WAAW,EAAE,KAAKwB,iBADpB;AAEE,QAAA,IAAI,EAAEX,2BAFR;AAGE,QAAA,iBAAiB,EAAE,KAAKqE,iBAH1B;AAIE,QAAA,IAAI,EAAEjF,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAxDJ,EA+DGa,yBAAyB,iBACxB,oBAAC,gCAAD;AAAkC,QAAA,CAAC,EAAEf,CAArC;AAAwC,QAAA,IAAI,EAAEC,IAA9C;AACE,QAAA,WAAW,EAAE,KAAKwB,iBADpB;AAEE,QAAA,IAAI,EAAEV,yBAFR;AAGE,QAAA,iBAAiB,EAAE,KAAKoE,iBAH1B;AAIE,QAAA,IAAI,EAAEjF,IAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhEJ,CADF,CAXF,eAqFE,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE,CAAxB;AAA2B,QAAA,SAAS,EAAC,2BAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACH,KAAL,CAAWkC,WAAX,EAAN;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwFjC,CAAC,CAAC,QAAD,CAAzF,CADF,CArFF,CADF;AA2FD;;;;EArX6CtC,S;;AAwXhD,eAAe0C,iCAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Icon,\r\n  IconButton,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { getAllResultByHealthOrgEQARoundId, getResultReportById } from \"./ResultsOfTheUnitsService\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { getItemById } from \"./ResultsOfTheUnitsService\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport shortid from \"shortid\";\r\nimport moment from \"moment\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EQAResultReportElisaDialog from \"../EQAResultReportElisa/EQAResultReportElisaDialog\";\r\nimport EQAResultReportFastTestEditorDialog from \"../EQAResultReportFastTest/EQAResultReportFastTestEditorDialog\";\r\nimport EQAResultReportSerodiaDialog from \"../EQAResultReportSerodia/EQAResultReportSerodiaDialog\";\r\nimport EQAResultReportEcliaEditorDialog from \"../EQAResultReportEclia/EQAResultReportEcliaEditorDialog\";\r\n\r\nfunction MaterialButton(props) {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return (\r\n    <React.Fragment>\r\n      <TableCell className=\"px-0\" align=\"left\">\r\n        {item.title}\r\n      </TableCell>;\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nclass HealthOrgEQARoundViewDetailDialog extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.headerRef = React.createRef()\r\n    this.dateColRef = React.createRef()\r\n    this.timeColRef = React.createRef()\r\n    this.contentRef = React.createRef()\r\n    this.tbodyRef = React.createRef()\r\n  }\r\n\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    itemList: [],\r\n    item: {},\r\n    listSample: [],\r\n    listResult: [],\r\n    shouldOpenViewDialogElisa: false,\r\n    shouldOpenViewDialogFastTest: false,\r\n    shouldOpenViewDialogSerodia: false,\r\n    shouldOpenViewDialogEclia: false,\r\n    isActive: false\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState(item);\r\n    // console.log(item);\r\n    getAllResultByHealthOrgEQARoundId(item.id).then((result) => {\r\n      if (result != null && result.data != null) {\r\n        this.setState({\r\n          listResult: result.data\r\n        }, function () {\r\n          let { sampleSet, listSample } = item;\r\n          listSample = [];\r\n          if (sampleSet != null && sampleSet.details != null && sampleSet.details.length > 0) {\r\n            sampleSet.details.sort((a, b) => (a.orderNumber > b.orderNumber) ? 1 : (a.orderNumber === b.orderNumber) ? ((a.sampleTube.code > b.sampleTube.code) ? 1 : -1) : -1);\r\n            sampleSet.details.forEach(sampleSetDetail => {\r\n              let eQASet = {};\r\n              eQASet.id = sampleSetDetail.sample.id;\r\n              eQASet.code = sampleSetDetail.code;\r\n              // sampleSetDetail.sample = sampleSet.details.sample;\r\n              // sampleSetDetail.code = sampleSet.details.code;\r\n              //listSample.push(sampleSetDetail.sample);\r\n              listSample.push(eQASet);\r\n            });\r\n            this.setState({\r\n              listSample: listSample\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getTypeMethodName(text, type) {\r\n    if (type == 1) {\r\n      return text;\r\n    } else if (type == 2) {\r\n      return text;\r\n    } else if (type == 3) {\r\n      return text;\r\n    } else if (type == 4) {\r\n      return text;\r\n    } else if (type == 5) {\r\n      return 'KẾT LUẬN';\r\n    }\r\n  }\r\n\r\n  renderColHeadFirst(item) {\r\n    if (item.reagent != null) {\r\n      item.title = this.getTypeMethodName(item.reagent.name, item.typeMethod);\r\n    } else {\r\n      item.title = this.getTypeMethodName(\"\", item.typeMethod);\r\n    }\r\n    //item.title = this.getTypeMethodName(item.reagent.name,item.typeMethod);\r\n    return (\r\n      this.renderHeadCells(item)\r\n    )\r\n  }\r\n\r\n  renderRowHead() {\r\n    let { onSelectEvent, handleDelete, handleClick } = this.props;\r\n    let { listResult } = this.state;\r\n    let titleCell = null;\r\n    if (listResult != null && listResult.length > 0) {\r\n      listResult.forEach(item => {\r\n        if (!titleCell) {\r\n          titleCell = <TableCell style={{\r\n            backgroundColor: '#358600',\r\n            color: '#fff', textAlign: \"left\", textTransform: \"uppercase\"\r\n          }} key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n            {this.getTypeMethodName(item.typeMethod)}\r\n          </TableCell>\r\n        } else {\r\n          titleCell += <TableCell style={{\r\n            backgroundColor: '#358600',\r\n            color: '#fff', textAlign: \"left\", textTransform: \"uppercase\"\r\n          }} key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n            {this.getTypeMethodName(item.typeMethod)}\r\n          </TableCell>\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {listResult.map((item, index) => this.renderColHeadFirst(item))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderHeadCells(item) {\r\n    if (item == null) {\r\n      item = {};\r\n    }\r\n    let titleCell = <TableCell style={{\r\n      backgroundColor: '#358600',\r\n      color: '#fff', textAlign: \"left\", textTransform: \"uppercase\"\r\n    }} key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n      {item.title}\r\n    </TableCell>\r\n    return (\r\n      <React.Fragment>\r\n        {titleCell}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  openDialogDetailCellContent(resultReportDetail) {\r\n    if (resultReportDetail != null && resultReportDetail.resultReport != null && resultReportDetail.resultReport.id != null) {\r\n      getResultReportById(resultReportDetail.resultReport.id).then((result) => {\r\n        let item = result.data;\r\n        item.isView = true;\r\n        this.setState({ item: item }, function () {\r\n          //Elisa(1),//Kết Quả Xét Nghiệm Bằng Kỹ Thuật Elisa\r\n          //FastTest(2),//Kết Quả Xét Nghiệm Bằng Kỹ Thuật Xét Nghiệm Nhanh\r\n          //SERODIA(3)//Kết Quả Xét Nghiệm Bằng Kỹ Thuật SERODIA\r\n          //ECLIA(4)//KẾT QUẢ ĐIỆN/HÓA PHÁT QUANG\r\n          if (item.typeMethod == 1) {\r\n            this.setState({ shouldOpenViewDialogElisa: true });\r\n          } else if (item.typeMethod == 2) {\r\n            this.setState({ shouldOpenViewDialogFastTest: true });\r\n          } else if (item.typeMethod == 3) {\r\n            this.setState({ shouldOpenViewDialogSerodia: true });\r\n          } else if (item.typeMethod == 4) {\r\n            this.setState({ shouldOpenViewDialogEclia: true });\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  renderCells(item) {\r\n    let { t, i18n } = this.props;\r\n    if (item == null) {\r\n      item = {};\r\n    }\r\n    let contentCell = <TableCell key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n      {\r\n        item.result == 1 ? (\r\n          <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\r\n            <a href=\"#\" onClick={() => this.openDialogDetailCellContent(item)}>\r\n              {t('result.positive')}\r\n            </a>\r\n          </small>\r\n        ) : (\r\n            <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n              <a href=\"#\" onClick={() => this.openDialogDetailCellContent(item)}>\r\n                {\r\n                  item.result == -2 ? (\r\n                    t('result.none')\r\n                  ) : (\r\n                      item.result == -1 ? (\r\n                        t('result.negative')\r\n                      ) : (\r\n                          item.result == 0 ? (\r\n                            t('result.indertermine')\r\n                          ) : (item.result == 2 ? (\r\n                            t('EQAResultReportElisa.Result.confirms')\r\n                          ) : (\r\n                              ''\r\n                            ))\r\n                        )\r\n                    )\r\n                }\r\n              </a>\r\n            </small>\r\n          )\r\n      }\r\n    </TableCell>\r\n    return (\r\n      <React.Fragment>\r\n        {contentCell}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderSample(item, index) {\r\n    let sttCell = <TableCell style={{ textAlign: \"center\", width: \"15px\"}} className=\"\" align=\"center\">\r\n      {index + 1}\r\n    </TableCell>\r\n    let titleCell = <TableCell style={{ textAlign: \"left\" }} className=\"px-0\" align=\"left\">\r\n      {item ? item.code : ''}\r\n    </TableCell>\r\n\r\n    let { listResult } = this.state;\r\n    let cellContentByMethod = [];\r\n    listResult.forEach(result => {\r\n      let content = null;\r\n      if (result != null && result.details != null && result.details.length > 0 && item) {\r\n        result.details.forEach(resultDetail => {\r\n          if (resultDetail.sampleTube != null && resultDetail.sampleTube.eqaSample != null\r\n            && item.id == resultDetail.sampleTube.eqaSample.id) {\r\n            content = resultDetail;\r\n          }\r\n        });\r\n      }\r\n      cellContentByMethod.push(content);\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {sttCell}\r\n        {titleCell}\r\n        {cellContentByMethod.map((cell, index) => this.renderCells(cell))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderResultDetails(sample, index) {\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow>\r\n          {this.renderSample(sample, index)}\r\n        </TableRow>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenViewDialogElisa: false,\r\n      shouldOpenViewDialogFastTest: false,\r\n      shouldOpenViewDialogSerodia: false,\r\n      shouldOpenViewDialogEclia: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    const infoStyle = {\r\n      fontSize: '18px',\r\n      fontWeight: 'bold'\r\n    };\r\n    const titleStyle = {\r\n      fontSize: '18px',\r\n    };\r\n    let {\r\n      id,\r\n      healthOrg,\r\n      round,\r\n      sampleSet,\r\n      listSample,\r\n      listResult,\r\n      shouldOpenViewDialogElisa,\r\n      shouldOpenViewDialogFastTest,\r\n      shouldOpenViewDialogSerodia,\r\n      shouldOpenViewDialogEclia,\r\n      item\r\n    } = this.state;\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} maxWidth={'lg'} fullWidth={true} disableBackdropClick={true}>\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {t(\"result.title\")}\r\n          </span>\r\n          <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"\">\r\n            <div style={{ marginRight: \"10%\" }} className=\"mb-20 mr-5\">{t(\"ResultsOfTheUnits.laboratory\")}: <span style={{fontWeight: \"bold\"}}>{healthOrg.name} ({healthOrg.code})</span></div>\r\n            <span style={{ marginRight: \"10%\" }} className=\"mb-20 mr-5\">{t(\"ResultsOfTheUnits.eqaPlanning\")}: <span style={{fontWeight: \"bold\"}}>{round.eqaPlanning.name}</span></span>\r\n\r\n            <span style={{ marginLeft: \"10%\" }} className=\"mb-20 mr-5\">{t(\"ResultsOfTheUnits.round\")}: <span style={{fontWeight: \"bold\"}}>{round.name}</span></span>\r\n            {/*<div style={titleStyle} className=\"mb-20\">{t(\"ResultsOfTheUnits.set\")}: <span style={infoStyle}>{sampleSet.name}</span></div>*/}\r\n            {listResult.length > 0 && listSample && (<Grid className=\"mb-8 mt-8\" container spacing={4}>\r\n              <Grid item sm={12} xs={12}>\r\n                <div>\r\n                  <Paper>\r\n                    <TableContainer style={{ maxHeight: 1000 }}>\r\n                      <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell style={{\r\n                              backgroundColor: '#358600',\r\n                              color: '#fff', textAlign: \"center\", width: \"15px\"\r\n                            }}>{t('ResultsOfTheUnits.STT')}</TableCell>\r\n                            <TableCell style={{\r\n                              backgroundColor: '#358600',\r\n                              color: '#fff', textAlign: \"left\", textTransform: \"uppercase\"\r\n                            }}>{t('ResultsOfTheUnits.set')}</TableCell>\r\n                            {\r\n                              (listResult && this.renderRowHead())\r\n                            }\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {\r\n                            (listSample && listSample.map((sample, index) => this.renderResultDetails(sample, index)))\r\n                          }\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Paper>\r\n                </div>\r\n              </Grid>\r\n            </Grid>)}\r\n\r\n            {shouldOpenViewDialogElisa && (\r\n              <EQAResultReportElisaDialog t={t} i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={shouldOpenViewDialogElisa}\r\n                handleOKEditClose={this.handleOKEditClose}\r\n                item={item}\r\n              />\r\n            )}\r\n            {shouldOpenViewDialogFastTest && (\r\n              <EQAResultReportFastTestEditorDialog t={t} i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={shouldOpenViewDialogFastTest}\r\n                handleOKEditClose={this.handleOKEditClose}\r\n                item={item}\r\n              />\r\n            )}\r\n            {shouldOpenViewDialogSerodia && (\r\n              <EQAResultReportSerodiaDialog t={t} i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={shouldOpenViewDialogSerodia}\r\n                handleOKEditClose={this.handleOKEditClose}\r\n                item={item}\r\n              />\r\n            )}\r\n            {shouldOpenViewDialogEclia && (\r\n              <EQAResultReportEcliaEditorDialog t={t} i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={shouldOpenViewDialogEclia}\r\n                handleOKEditClose={this.handleOKEditClose}\r\n                item={item}\r\n              />\r\n            )}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n          <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.handleClose()}>{t('Cancel')}</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HealthOrgEQARoundViewDetailDialog;\r\n"]},"metadata":{},"sourceType":"module"}