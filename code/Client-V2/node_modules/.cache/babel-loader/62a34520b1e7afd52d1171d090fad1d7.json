{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrg\\\\EQAHealthOrg.jsx\";\nimport { Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getByPage, deleteItem, saveItem, getItemById, searchByPage } from \"./EQAHealthOrgService\";\nimport { getCurrentUser } from \"../User/UserService\";\nimport EQAHealthOrgEditorDialog from \"./EQAHealthOrgEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nvar EQAHealthOrg = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQAHealthOrg, _React$Component);\n\n  var _super = _createSuper(EQAHealthOrg);\n\n  function EQAHealthOrg(props) {\n    var _this;\n\n    _classCallCheck(this, EQAHealthOrg);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      keyword: '',\n      isHealthOrg: false\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.keyword = '';\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      deleteItem(_this.state.id).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      //alert(this.data.length);\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EQAHealthOrg, [{\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      var _this2 = this;\n\n      var searchObject = {};\n      searchObject.text = this.state.keyword;\n      searchObject.pageIndex = this.state.page;\n      searchObject.pageSize = this.state.rowsPerPage;\n      searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"handleDeleteList\",\n    value: function () {\n      var _handleDeleteList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(list) {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < list.length)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return deleteItem(list[i].id);\n\n              case 4:\n                i++;\n                _context.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function handleDeleteList(_x) {\n        return _handleDeleteList.apply(this, arguments);\n      }\n\n      return handleDeleteList;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var keyword = this.state.keyword;\n      var columns = [{\n        title: t(\"EQAHealthOrg.Name\"),\n        field: \"name\",\n        width: \"150\"\n      }, {\n        title: t(\"EQAHealthOrg.Code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"EQAHealthOrg.HealthOrgType\"),\n        field: \"healthOrgType.name\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"EQAHealthOrg.ContactName\"),\n        field: \"contactName\",\n        width: \"150\"\n      }, {\n        title: t(\"EQAHealthOrg.ContactPhone\"),\n        field: \"contactPhone\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"EQAHealthOrg.Address\"),\n        field: \"address\",\n        align: \"left\",\n        width: \"150\"\n      }, // { title: t(\"EQAHealthOrg.Description\"), field: \"description\", align: \"left\", width: \"150\" },\n      // { title: t(\"EQAHealthOrg.AdministrativeUnit\"), field: \"description\", align: \"left\", width: \"150\" },\n      {\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref3) {\n                  var data = _ref3.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this3.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this3.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"EQAHealthOrg.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, t('Add')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.setState({\n            shouldOpenConfirmationDeleteAllDialog: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, t('Delete')), this.state.shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: this.state.shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t('DeleteAllConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        label: t('EnterSearch'),\n        className: \"mb-16 mr-10\",\n        type: \"text\",\n        name: \"keyword\",\n        value: keyword,\n        onChange: this.handleTextChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 12\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.search(keyword);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, t('Search')))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, this.state.shouldOpenEditorDialog && /*#__PURE__*/React.createElement(EQAHealthOrgEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }), this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: this.state.itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: true,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows; // this.setState({selectedItems:rows});\n        },\n        actions: [{\n          tooltip: 'Remove All Selected Users',\n          icon: 'delete',\n          onClick: function onClick(evt, data) {\n            _this3.handleDeleteAll(data);\n\n            alert('You want to delete ' + data.length + ' rows');\n          }\n        }],\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref4) {\n          var from = _ref4.from,\n              to = _ref4.to,\n              count = _ref4.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return EQAHealthOrg;\n}(React.Component);\n\nexport default EQAHealthOrg;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrg/EQAHealthOrg.jsx"],"names":["Grid","TextField","IconButton","Icon","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","createMuiTheme","React","Component","ValidatorForm","TextValidator","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getByPage","deleteItem","saveItem","getItemById","searchByPage","getCurrentUser","EQAHealthOrgEditorDialog","Breadcrumb","ConfirmationDialog","MaterialButton","props","t","i18n","item","onSelect","EQAHealthOrg","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","keyword","isHealthOrg","updatePageData","searchObject","pageIndex","pageSize","then","setState","content","setPage","setRowsPerPage","event","target","value","handleChangePage","newPage","handleOKEditClose","handleDelete","id","handleDialogClose","handleConfirmationResponse","handleEditItem","handleDeleteAll","handleDeleteList","handleTextChange","bind","text","list","i","length","columns","title","field","width","align","render","rowData","method","parent","alert","name","startDate","Date","endDate","search","row","rows","find","a","parentId","selection","actionsColumnIndex","paging","Toolbar","tooltip","icon","onClick","evt","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import { Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { getByPage, deleteItem, saveItem, getItemById, searchByPage } from \"./EQAHealthOrgService\";\r\nimport { getCurrentUser } from \"../User/UserService\"\r\nimport EQAHealthOrgEditorDialog from \"./EQAHealthOrgEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item, 0)}>\r\n      <Icon color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\nclass EQAHealthOrg extends React.Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    keyword: '',\r\n    isHealthOrg: false,\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n  }\r\n  handleTextChange(event) {\r\n    this.setState({ keyword: event.target.value });\r\n  }\r\n  search() {\r\n    var searchObject = {};\r\n    searchObject.text = this.state.keyword;\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    }\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.keyword = '';\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    }\r\n    );\r\n  };\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    deleteItem(this.state.id).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose()\r\n    });\r\n  };\r\n  handleEditItem = item => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true\r\n    });\r\n  };\r\n  async handleDeleteList(list) {\r\n    for (var i = 0; i < list.length; i++) {\r\n      await deleteItem(list[i].id);\r\n    }\r\n  }\r\n  handleDeleteAll = (event) => {\r\n    //alert(this.data.length);\r\n    this.handleDeleteList(this.data).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n    }\r\n    );\r\n  };\r\n  \r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let { keyword } = this.state;\r\n\r\n    let columns = [\r\n      { title: t(\"EQAHealthOrg.Name\"), field: \"name\", width: \"150\" },\r\n      { title: t(\"EQAHealthOrg.Code\"), field: \"code\", align: \"left\", width: \"150\" },\r\n      { title: t(\"EQAHealthOrg.HealthOrgType\"), field: \"healthOrgType.name\", align: \"left\", width: \"150\" },\r\n      { title: t(\"EQAHealthOrg.ContactName\"), field: \"contactName\", width: \"150\" },\r\n      { title: t(\"EQAHealthOrg.ContactPhone\"), field: \"contactPhone\", align: \"left\", width: \"150\" },\r\n      { title: t(\"EQAHealthOrg.Address\"), field: \"address\", align: \"left\", width: \"150\" },\r\n      // { title: t(\"EQAHealthOrg.Description\"), field: \"description\", align: \"left\", width: \"150\" },\r\n      // { title: t(\"EQAHealthOrg.AdministrativeUnit\"), field: \"description\", align: \"left\", width: \"150\" },\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.id).then(({ data }) => {\r\n                if (data.parent === null) {\r\n                  data.parent = {};\r\n                }\r\n                this.setState({\r\n                  item: data,\r\n                  shouldOpenEditorDialog: true\r\n                });\r\n              })\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"EQAHealthOrg.title\") }]} />\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date() });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            <Button className=\"mb-16 mr-16 align-bottom\" variant=\"contained\" color=\"primary\"\r\n              onClick={() => this.setState({ shouldOpenConfirmationDeleteAllDialog: true })}>\r\n              {t('Delete')}\r\n            </Button>\r\n\r\n            {this.state.shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={this.state.shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )}\r\n            \r\n           <TextField\r\n              label={t('EnterSearch')}\r\n              className=\"mb-16 mr-10\"\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onChange={this.handleTextChange} />\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"   onClick={() => this.search(keyword)}>\r\n              {t('Search')}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {this.state.shouldOpenEditorDialog && (\r\n                <EQAHealthOrgEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={this.state.shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={this.state.item}\r\n                />\r\n              )}\r\n\r\n              {this.state.shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={this.state.shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={this.state.itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              options={{\r\n                selection: true,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              actions={[\r\n                {\r\n                  tooltip: 'Remove All Selected Users',\r\n                  icon: 'delete',\r\n                  onClick: (evt, data) => {\r\n                    this.handleDeleteAll(data);\r\n                    alert('You want to delete ' + data.length + ' rows');\r\n                  }\r\n                },\r\n              ]}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={this.state.totalElements}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default EQAHealthOrg;"]},"metadata":{},"sourceType":"module"}