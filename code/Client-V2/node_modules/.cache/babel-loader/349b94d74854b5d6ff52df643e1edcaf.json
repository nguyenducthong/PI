{"ast":null,"code":"import _slicedToArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQARound\\\\EQARoundTabs.jsx\";\nimport ConstantList from \"../../appConfig\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport moment from \"moment\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Helmet } from 'react-helmet';\nimport Fab from \"@material-ui/core/Fab\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Typography, Tabs, Box, Tab, AppBar, TextField, Checkbox, FormLabel, Button, Grid, FormControlLabel, IconButton, Icon, FormControl, RadioGroup, Radio, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport QRCode from 'qrcode.react';\nimport { MuiPickersUtilsProvider, DateTimePicker, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport AsynchronousAutocomplete from '../utilities/AsynchronousAutocomplete';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport NumberFormat from 'react-number-format';\nimport Card from \"@material-ui/core/Card\";\nimport EQARoundInformation from \"./EQARoundInformation\";\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: '-10px',\n      left: '-25px',\n      width: '120px'\n    }\n  };\n})(Tooltip);\n\nfunction NumberFormatCustom(props) {\n  var inputRef = props.inputRef,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: function onValueChange(values) {\n      props.onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    name: props.name,\n    value: props.value,\n    thousandSeparator: true,\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-force-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-force-tab-\".concat(index)\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, children))));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-force-tab-\".concat(index),\n    'aria-controls': \"scrollable-force-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      width: '100%',\n      minHeight: \"500px\",\n      maxHeight: \"500px\",\n      backgroundColor: theme.palette.background.paper\n    } // textHeader: { fontSize: '0.75rem', }\n\n  };\n});\nexport default function CreateStaff(props) {\n  var t = props.t;\n  var i18n = props.i18n;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      item = _React$useState4[0],\n      setItem = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      v = _React$useState6[0],\n      setValueD = _React$useState6[1];\n\n  var handleChangeValue = function handleChangeValue(event, newValue) {\n    setValue(newValue);\n  };\n\n  var searchObject = {\n    pageIndex: 1,\n    pageSize: 1000000\n  };\n  var isEmpty = true;\n\n  if (props.item != null && props.item.files != null) {\n    isEmpty = props.item.files.length === 0;\n\n    if (props.item.logoPath) {\n      isEmpty = false;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EQARoundInformation, {\n    t: t,\n    useStyles: useStyles,\n    item: props.item ? props.item : {},\n    listPersonnel: props.listPersonnel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQARound/EQARoundTabs.jsx"],"names":["ConstantList","React","PropTypes","makeStyles","PhoneIcon","FavoriteIcon","PersonPinIcon","HelpIcon","ShoppingBasket","ThumbDown","ThumbUp","moment","Breadcrumb","ConfirmationDialog","Helmet","Fab","Autocomplete","Typography","Tabs","Box","Tab","AppBar","TextField","Checkbox","FormLabel","Button","Grid","FormControlLabel","IconButton","Icon","FormControl","RadioGroup","Radio","InputLabel","MenuItem","Select","QRCode","MuiPickersUtilsProvider","DateTimePicker","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","ValidatorForm","TextValidator","AsynchronousAutocomplete","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","withStyles","Tooltip","NumberFormat","Card","EQARoundInformation","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","width","NumberFormatCustom","props","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","TabPanel","children","index","node","any","a11yProps","id","useStyles","root","flexGrow","minHeight","maxHeight","background","paper","CreateStaff","t","i18n","classes","useState","setValue","item","setItem","v","setValueD","handleChangeValue","event","newValue","searchObject","pageIndex","pageSize","isEmpty","files","length","logoPath","listPersonnel"],"mappings":"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","sourcesContent":["import ConstantList from \"../../appConfig\";\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket'\r\nimport ThumbDown from '@material-ui/icons/ThumbDown'\r\nimport ThumbUp from '@material-ui/icons/ThumbUp'\r\nimport moment from \"moment\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Helmet } from 'react-helmet';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport {\r\n  Typography,\r\n  Tabs,\r\n  Box,\r\n  Tab,\r\n  AppBar,\r\n  TextField,\r\n  Checkbox,\r\n  FormLabel,\r\n  Button,\r\n  Grid,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Icon,\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport QRCode from 'qrcode.react'\r\nimport {\r\n  MuiPickersUtilsProvider, DateTimePicker,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport AsynchronousAutocomplete from '../utilities/AsynchronousAutocomplete'\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport NumberFormat from 'react-number-format';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport EQARoundInformation from \"./EQARoundInformation\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n    position: \"absolute\",\r\n    top: '-10px',\r\n    left: '-25px',\r\n    width: '120px'\r\n  }\r\n}))(Tooltip);\r\n\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        props.onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n\r\n          },\r\n        });\r\n      }}\r\n      name={props.name}\r\n      value={props.value}\r\n      thousandSeparator\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-force-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-force-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    minHeight:\"500px\",\r\n    maxHeight: \"500px\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  // textHeader: { fontSize: '0.75rem', }\r\n}))\r\n\r\nexport default function CreateStaff(props) {\r\n  const t = props.t\r\n  const i18n = props.i18n\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  const [item, setItem] = React.useState({})\r\n  const [v, setValueD] = React.useState('')\r\n  const handleChangeValue = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  const searchObject = { pageIndex: 1, pageSize: 1000000 }\r\n\r\n  let isEmpty = true;\r\n  if (props.item != null && props.item.files != null) {\r\n    isEmpty = props.item.files.length === 0;\r\n    if (props.item.logoPath) {\r\n      isEmpty = false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} value={value} index={0} >\r\n      {/* <AppBar position=\"static\" color=\"#ffffff\">\r\n        <Tabs orientation=\"horizontal\"\r\n          value={value}\r\n          onChange={handleChangeValue}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab label={t('EQARound.information')} />\r\n          <Tab label={t('EQARound.preparationThePanel')} />\r\n          <Tab label={t('EQARound.samplePackageAnDelivery')} />\r\n          <Tab label={t('EQARound.analysisReporting')} />\r\n        </Tabs>\r\n      </AppBar> */}\r\n      {/* <TabPanel value={value} index={0} color=\"#ffffff\"> */}\r\n        <EQARoundInformation t={t}\r\n          useStyles={useStyles}\r\n          item={props.item ? props.item : {}}\r\n          listPersonnel = {props.listPersonnel}\r\n        />\r\n      {/* </TabPanel> */}\r\n      {/* <TabPanel value={value} index={1} color=\"#ffffff\">\r\n        <EQAPreparationThePanel t={t}\r\n          useStyles={useStyles}\r\n          item={props.item ? props.item : {}} \r\n          listPersonnel = {props.listPersonnel}\r\n          />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2} color=\"#ffffff\">\r\n        <EQASamplePackageAndDelivery t={t}\r\n          useStyles={useStyles}\r\n          item={props.item ? props.item : {}}\r\n          listPersonnel = {props.listPersonnel} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3} color=\"#ffffff\">\r\n        <EQARoundAnalysisReporting t={t}\r\n          useStyles={useStyles}\r\n          item={props.item ? props.item : {}}\r\n          listPersonnel = {props.listPersonnel} />\r\n      </TabPanel> */}\r\n      \r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}