{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\page-layouts\\\\UploadForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport { Fab, Icon, Card, Grid, Divider, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport FileSaver from 'file-saver';\n\nvar UploadForm = /*#__PURE__*/function (_Component) {\n  _inherits(UploadForm, _Component);\n\n  var _super = _createSuper(UploadForm);\n\n  function UploadForm() {\n    var _this;\n\n    _classCallCheck(this, UploadForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dragClass: \"\",\n      files: [],\n      statusList: [],\n      queProgress: 0\n    };\n\n    _this.handleFileUploadOnSelect = function (e) {\n      // let files = event.target.files;\n      // this.fileUpload(files[0]).then(res => {\n      //   alert(\"File uploaded successfully.\")\n      // });\n      if (e.target.files && e.target.files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    };\n\n    _this.handleFileSelect = function (event) {\n      var files = event.target.files;\n      var list = [];\n\n      var _iterator = _createForOfIteratorHelper(files),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var iterator = _step.value;\n          list.push({\n            file: iterator,\n            uploading: false,\n            error: false,\n            progress: 0\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      _this.setState({\n        files: [].concat(list)\n      });\n    };\n\n    _this.handleDragOver = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.persist();\n      var files = event.dataTransfer.files; // let list = [];\n      // for (const iterator of files) {\n      //   list.push({\n      //     file: iterator,\n      //     uploading: false,\n      //     error: false,\n      //     progress: 0\n      //   });\n      // }\n      // this.setState({\n      //   dragClass: \"\",\n      //   files: [...list]\n      // });\n\n      alert('Drop');\n\n      if (files && files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(files[0]);\n      }\n\n      return false;\n    };\n\n    _this.handleDragStart = function (event) {\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleSingleRemove = function (index) {\n      var files = _toConsumableArray(_this.state.files);\n\n      files.splice(index, 1);\n\n      _this.setState({\n        files: _toConsumableArray(files)\n      });\n    };\n\n    _this.handleAllRemove = function () {\n      _this.setState({\n        files: []\n      });\n    };\n\n    _this.uploadSingleFile = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n\n      _this.fileUpload(file.file).then(function (res) {\n        alert(\"File uploaded successfully.\");\n      });\n\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: true,\n        error: false\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.uploadAllFile = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: true,\n          error: false\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 35\n      });\n    };\n\n    _this.handleSingleCancel = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: false,\n        error: true\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.handleCancelAll = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: false,\n          error: true\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 0\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadForm, [{\n    key: \"fileUpload\",\n    value: function fileUpload(file) {\n      var url = ConstantList.API_ENPOINT + \"/api/fileUpload/importAsset\";\n      var formData = new FormData();\n      formData.append('uploadfile', file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    }\n  }, {\n    key: \"makeClientCrop\",\n    value: function () {\n      var _makeClientCrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(crop) {\n        var croppedImageUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.imageRef && crop.width && crop.height)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.getCroppedImg(this.imageRef, crop, 'newFile.jpeg');\n\n              case 3:\n                croppedImageUrl = _context.sent;\n                this.setState({\n                  croppedImageUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function makeClientCrop(_x) {\n        return _makeClientCrop.apply(this, arguments);\n      }\n\n      return makeClientCrop;\n    }()\n  }, {\n    key: \"getCroppedImg\",\n    value: function getCroppedImg(image, crop, fileName) {\n      var _this2 = this;\n\n      var canvas = document.createElement('canvas');\n      var scaleX = image.naturalWidth / image.width;\n      var scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n      return new Promise(function (resolve, reject) {\n        canvas.toBlob(function (blob) {\n          if (!blob) {\n            //reject(new Error('Canvas is empty'));\n            console.error('Canvas is empty');\n            return;\n          }\n\n          blob.name = fileName;\n          window.URL.revokeObjectURL(_this2.fileUrl);\n          _this2.fileUrl = window.URL.createObjectURL(blob);\n\n          _this2.setState({\n            blobValue: blob\n          });\n\n          resolve(_this2.fileUrl);\n        }, 'image/jpeg');\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          dragClass = _this$state.dragClass,\n          files = _this$state.files,\n          queProgress = _this$state.queProgress;\n      var _this$state2 = this.state,\n          crop = _this$state2.crop,\n          croppedImageUrl = _this$state2.croppedImageUrl,\n          src = _this$state2.src;\n      var isEmpty = files.length === 0;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-form m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: \"Others\",\n          path: \"/\"\n        }, {\n          name: \"Upload\"\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(SimpleCard, {\n        title: \"File Upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap mb-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-single-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        className: \"capitalize\",\n        color: \"primary\",\n        component: \"span\",\n        variant: \"extended\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 19\n        }\n      }, \"Single File\")))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-single-file\",\n        type: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-single-file-on-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        className: \"capitalize\",\n        color: \"primary\",\n        component: \"span\",\n        variant: \"extended\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 19\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 19\n        }\n      }, \"Upload File On Select\")))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileUploadOnSelect,\n        id: \"upload-single-file-on-select\",\n        type: \"file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"px-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-multiple-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Fab, {\n        className: \"capitalize\",\n        color: \"primary\",\n        component: \"span\",\n        variant: \"extended\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 19\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 19\n        }\n      }, \"Multiple File\")))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-multiple-file\",\n        type: \"file\",\n        multiple: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(dragClass, \" upload-drop-box mb-24 flex flex-center flex-middle\"),\n        onDragEnter: this.handleDragStart,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }\n      }, isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }\n      }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }\n      }, files.length, \" file\", files.length > 1 ? \"s\" : \"\", \" selected...\")), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }\n      }, croppedImageUrl && /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"Crop\",\n        style: {\n          maxWidth: '100%'\n        },\n        src: croppedImageUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Card, {\n        className: \"mb-24\",\n        elevation: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        justify: \"center\",\n        alignItems: \"center\",\n        direction: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 17\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 1,\n        md: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }, \"Size\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 17\n        }\n      }, \"Progress\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 1,\n        md: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }, \"Status\"), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }, \"Actions\"))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }\n      }), isEmpty && /*#__PURE__*/React.createElement(\"p\", {\n        className: \"px-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 25\n        }\n      }, \"Que is empty\"), files.map(function (item, index) {\n        var file = item.file,\n            uploading = item.uploading,\n            error = item.error,\n            progress = item.progress;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"px-16 py-16\",\n          key: file.name,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          spacing: 2,\n          justify: \"center\",\n          alignItems: \"center\",\n          direction: \"row\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 4,\n          md: 4,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 21\n          }\n        }, file.name), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 1,\n          md: 1,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 21\n          }\n        }, (file.size / 1024 / 1024).toFixed(1), \" MB\"), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 2,\n          md: 2,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n          value: progress,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 1,\n          md: 1,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 21\n          }\n        }, error && /*#__PURE__*/React.createElement(Icon, {\n          color: \"error\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 33\n          }\n        }, \"error\")), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          lg: 4,\n          md: 4,\n          sm: 12,\n          xs: 12,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: uploading,\n          onClick: function onClick() {\n            return _this3.uploadSingleFile(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }\n        }, \"Upload\"), /*#__PURE__*/React.createElement(Button, {\n          className: \"mx-8\",\n          variant: \"contained\",\n          disabled: !uploading,\n          color: \"secondary\",\n          onClick: function onClick() {\n            return _this3.handleSingleCancel(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 25\n          }\n        }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          className: \"bg-error\",\n          onClick: function onClick() {\n            return _this3.handleSingleRemove(index);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 25\n          }\n        }, \"Remove\")))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, \"Queue progress:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"py-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EgretProgressBar, {\n        value: queProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        disabled: isEmpty,\n        onClick: this.uploadAllFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 15\n        }\n      }, \"Upload All\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"mx-8\",\n        variant: \"contained\",\n        color: \"secondary\",\n        disabled: isEmpty,\n        onClick: this.handleCancelAll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 15\n        }\n      }, \"Cancel All\"), !isEmpty && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"bg-error\",\n        onClick: this.handleAllRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 17\n        }\n      }, \"Remove All\")))));\n    }\n  }]);\n\n  return UploadForm;\n}(Component);\n\nexport default UploadForm;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/page-layouts/UploadForm.jsx"],"names":["React","Component","Breadcrumb","SimpleCard","EgretProgressBar","Fab","Icon","Card","Grid","Divider","Button","axios","ConstantList","ReactCrop","FileSaver","UploadForm","state","dragClass","files","statusList","queProgress","handleFileUploadOnSelect","e","target","length","reader","FileReader","addEventListener","setState","src","result","readAsDataURL","handleFileSelect","event","list","iterator","push","file","uploading","error","progress","handleDragOver","preventDefault","handleDrop","persist","dataTransfer","alert","handleDragStart","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","allFiles","fileUpload","then","res","uploadAllFile","map","item","handleSingleCancel","handleCancelAll","url","API_ENPOINT","formData","FormData","append","config","headers","post","crop","imageRef","width","height","getCroppedImg","croppedImageUrl","image","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","console","name","window","URL","revokeObjectURL","fileUrl","createObjectURL","blobValue","isEmpty","path","maxWidth","size","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport { Fab, Icon, Card, Grid, Divider, Button } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport FileSaver from 'file-saver';\n\nclass UploadForm extends Component {\n  state = {\n    dragClass: \"\",\n    files: [],\n    statusList: [],\n    queProgress: 0\n  };\n  handleFileUploadOnSelect = e => {\n    // let files = event.target.files;\n    // this.fileUpload(files[0]).then(res => {\n    //   alert(\"File uploaded successfully.\")\n    // });\n    if (e.target.files && e.target.files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () =>\n        this.setState({ src: reader.result })\n      );\n      reader.readAsDataURL(e.target.files[0]);\n    }     \n  }\n  handleFileSelect = event => {\n    let files = event.target.files;\n    let list = [];\n\n    for (const iterator of files) {\n      list.push({\n        file: iterator,\n        uploading: false,\n        error: false,\n        progress: 0\n      });\n    }\n\n    this.setState({\n      files: [...list]\n    });\n  };\n\n  handleDragOver = event => {\n    event.preventDefault();\n    this.setState({ dragClass: \"drag-shadow\" });\n  };\n\n  handleDrop = event => {\n    event.preventDefault();\n    event.persist();\n\n    let files = event.dataTransfer.files;\n    // let list = [];\n\n    // for (const iterator of files) {\n    //   list.push({\n    //     file: iterator,\n    //     uploading: false,\n    //     error: false,\n    //     progress: 0\n    //   });\n    // }\n\n    // this.setState({\n    //   dragClass: \"\",\n    //   files: [...list]\n    // });\n    alert('Drop');\n    if (files && files.length > 0) {\n      const reader = new FileReader();\n      reader.addEventListener('load', () =>\n        this.setState({ src: reader.result })\n      );\n      reader.readAsDataURL(files[0]);\n    }     \n    return false;\n  };\n\n  handleDragStart = event => {\n    this.setState({ dragClass: \"drag-shadow\" });\n  };\n\n  handleSingleRemove = index => {\n    let files = [...this.state.files];\n    files.splice(index, 1);\n    this.setState({\n      files: [...files]\n    });\n  };\n\n  handleAllRemove = () => {\n    this.setState({ files: [] });\n  };\n  fileUpload(file){\n    const url =ConstantList.API_ENPOINT+\"/api/fileUpload/importAsset\";\n    let formData = new FormData();\n    formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n    const config = {\n        headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n    }\n    return  axios.post(url, formData,config)\n  }\n\n  uploadSingleFile = index => {\n    let allFiles = [...this.state.files];\n    let file = this.state.files[index];\n    this.fileUpload(file.file).then(res => {\n        alert(\"File uploaded successfully.\")\n      })\n\n    allFiles[index] = { ...file, uploading: true, error: false };\n\n    this.setState({\n      files: [...allFiles]\n    });\n  };\n\n  uploadAllFile = () => {\n    let allFiles = [];\n\n    this.state.files.map(item => {\n      allFiles.push({\n        ...item,\n        uploading: true,\n        error: false\n      });\n\n      return item;\n    });\n\n    this.setState({\n      files: [...allFiles],\n      queProgress: 35\n    });\n  };\n\n  handleSingleCancel = index => {\n    let allFiles = [...this.state.files];\n    let file = this.state.files[index];\n\n    allFiles[index] = { ...file, uploading: false, error: true };\n\n    this.setState({\n      files: [...allFiles]\n    });\n  };\n\n  handleCancelAll = () => {\n    let allFiles = [];\n\n    this.state.files.map(item => {\n      allFiles.push({\n        ...item,\n        uploading: false,\n        error: true\n      });\n\n      return item;\n    });\n\n    this.setState({\n      files: [...allFiles],\n      queProgress: 0\n    });\n  };\n  async makeClientCrop(crop) {\n    if (this.imageRef && crop.width && crop.height) {\n      const croppedImageUrl = await this.getCroppedImg(\n        this.imageRef,\n        crop,\n        'newFile.jpeg'\n      );\n      this.setState({ croppedImageUrl });\n    }\n  }\n\n  getCroppedImg(image, crop, fileName) {\n    const canvas = document.createElement('canvas');\n    const scaleX = image.naturalWidth / image.width;\n    const scaleY = image.naturalHeight / image.height;\n    canvas.width = crop.width;\n    canvas.height = crop.height;\n    const ctx = canvas.getContext('2d');\n\n    ctx.drawImage(\n      image,\n      crop.x * scaleX,\n      crop.y * scaleY,\n      crop.width * scaleX,\n      crop.height * scaleY,\n      0,\n      0,\n      crop.width,\n      crop.height\n    );\n\n    return new Promise((resolve, reject) => {\n      canvas.toBlob(blob => {\n        if (!blob) {\n          //reject(new Error('Canvas is empty'));\n          console.error('Canvas is empty');\n          return;\n        }\n        blob.name = fileName;\n        window.URL.revokeObjectURL(this.fileUrl);\n        this.fileUrl = window.URL.createObjectURL(blob);\n        this.setState({blobValue:blob});\n        resolve(this.fileUrl);\n      }, 'image/jpeg');\n    });\n  }\n  render() {\n    let { dragClass, files, queProgress } = this.state;\n    const { crop, croppedImageUrl, src } = this.state;\n    let isEmpty = files.length === 0;\n\n    return (\n      <div className=\"upload-form m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Breadcrumb\n            routeSegments={[{ name: \"Others\", path: \"/\" }, { name: \"Upload\" }]}\n          />\n        </div>\n        <SimpleCard title=\"File Upload\">\n          <div className=\"flex flex-wrap mb-24\">\n            <label htmlFor=\"upload-single-file\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Single File</span>\n                </div>\n              </Fab>\n            </label>\n            <input\n              className=\"display-none\"\n              onChange={this.handleFileSelect}\n              id=\"upload-single-file\"\n              type=\"file\"\n            />\n            <div className=\"px-16\"></div>\n            <label htmlFor=\"upload-single-file-on-select\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Upload File On Select</span>\n                </div>\n              </Fab>\n            </label>            \n            <input\n              className=\"display-none\"\n              onChange={this.handleFileUploadOnSelect}\n              id=\"upload-single-file-on-select\"\n              type=\"file\"\n            />            \n            <div className=\"px-16\"></div>\n            <label htmlFor=\"upload-multiple-file\">\n              <Fab\n                className=\"capitalize\"\n                color=\"primary\"\n                component=\"span\"\n                variant=\"extended\"\n              >\n                <div className=\"flex flex-middle\">\n                  <Icon className=\"pr-8\">cloud_upload</Icon>\n                  <span>Multiple File</span>\n                </div>\n              </Fab>\n            </label>\n            <input\n              className=\"display-none\"\n              onChange={this.handleFileSelect}\n              id=\"upload-multiple-file\"\n              type=\"file\"\n              multiple\n            />\n          </div>\n\n          <div\n            className={`${dragClass} upload-drop-box mb-24 flex flex-center flex-middle`}\n            onDragEnter={this.handleDragStart}\n            onDragOver={this.handleDragOver}\n            onDrop={this.handleDrop}\n          >\n            {isEmpty ? (\n              <span>Drop your files here</span>\n            ) : (\n              <h5 className=\"m-0\">\n                {files.length} file{files.length > 1 ? \"s\" : \"\"} selected...\n              </h5>\n            )}\n          </div>\n          <div>\n              {croppedImageUrl && (\n                <img alt=\"Crop\" style={{ maxWidth: '100%' }} src={croppedImageUrl} />\n              )}\n          </div>\n          <Card className=\"mb-24\" elevation={2}>\n            <div className=\"p-16\">\n              <Grid\n                container\n                spacing={2}\n                justify=\"center\"\n                alignItems=\"center\"\n                direction=\"row\"\n              >\n                <Grid item lg={4} md={4}>\n                  Name\n                </Grid>\n                <Grid item lg={1} md={1}>\n                  Size\n                </Grid>\n                <Grid item lg={2} md={2}>\n                  Progress\n                </Grid>\n                <Grid item lg={1} md={1}>\n                  Status\n                </Grid>\n                <Grid item lg={4} md={4}>\n                  Actions\n                </Grid>\n              </Grid>\n            </div>\n            <Divider></Divider>\n\n            {isEmpty && <p className=\"px-16\">Que is empty</p>}\n\n            {files.map((item, index) => {\n              let { file, uploading, error, progress } = item;\n              return (\n                <div className=\"px-16 py-16\" key={file.name}>\n                  <Grid\n                    container\n                    spacing={2}\n                    justify=\"center\"\n                    alignItems=\"center\"\n                    direction=\"row\"\n                  >\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                      {file.name}\n                    </Grid>\n                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                      {(file.size / 1024 / 1024).toFixed(1)} MB\n                    </Grid>\n                    <Grid item lg={2} md={2} sm={12} xs={12}>\n                      <EgretProgressBar value={progress}></EgretProgressBar>\n                    </Grid>\n                    <Grid item lg={1} md={1} sm={12} xs={12}>\n                      {error && <Icon color=\"error\">error</Icon>}\n                      {/* {uploading && <Icon className=\"text-green\">done</Icon>} */}\n                    </Grid>\n                    <Grid item lg={4} md={4} sm={12} xs={12}>\n                      <div className=\"flex\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={uploading}\n                          onClick={() => this.uploadSingleFile(index)}\n                        >\n                          Upload\n                        </Button>\n                        <Button\n                          className=\"mx-8\"\n                          variant=\"contained\"\n                          disabled={!uploading}\n                          color=\"secondary\"\n                          onClick={() => this.handleSingleCancel(index)}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          variant=\"contained\"\n                          className=\"bg-error\"\n                          onClick={() => this.handleSingleRemove(index)}\n                        >\n                          Remove\n                        </Button>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              );\n            })}\n          </Card>\n\n          <div>\n            <p className=\"m-0\">Queue progress:</p>\n            <div className=\"py-16\">\n              <EgretProgressBar value={queProgress}></EgretProgressBar>\n            </div>\n            <div className=\"flex\">\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isEmpty}\n                onClick={this.uploadAllFile}\n              >\n                Upload All\n              </Button>\n              <Button\n                className=\"mx-8\"\n                variant=\"contained\"\n                color=\"secondary\"\n                disabled={isEmpty}\n                onClick={this.handleCancelAll}\n              >\n                Cancel All\n              </Button>\n              {!isEmpty && (\n                <Button\n                  variant=\"contained\"\n                  className=\"bg-error\"\n                  onClick={this.handleAllRemove}\n                >\n                  Remove All\n                </Button>\n              )}\n            </div>\n          </div>\n        </SimpleCard>\n      </div>\n    );\n  }\n}\n\nexport default UploadForm;\n"]},"metadata":{},"sourceType":"module"}