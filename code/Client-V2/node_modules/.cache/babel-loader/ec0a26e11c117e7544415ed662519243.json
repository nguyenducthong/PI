{"ast":null,"code":"import _objectDestructuringEmpty from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportSerodia\\\\EQAResultReportSerodiaFileAttachment.jsx\";\nimport { Grid, DialogActions, MuiThemeProvider, TextField, Button, Tooltip, Icon, Checkbox, TablePagination, IconButton, Dialog, FormControl, FormControlLabel } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FileSaver from \"file-saver\"; // import FormControl from \"@material-ui/core/FormControl\";\n\nimport ConstantList from \"../../appConfig\";\nimport axios from \"axios\";\nimport Select from \"@material-ui/core/Select\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { width } from \"dom-helpers\";\nimport { MuiPickersUtilsProvider, DateTimePicker, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport EQAResultReportSerodiaFilePopup from \"./EQAResultReportSerodiaFilePopup\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3 //etc you get the idea\n\n});\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: \"rgba(0, 0, 0, 0.87)\",\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: \"-15px\",\n      left: \"-30px\",\n      width: \"80px\"\n    }\n  };\n})(Tooltip);\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar EQAResultReportElisaFileAttachment = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQAResultReportElisaFileAttachment, _React$Component);\n\n  var _super = _createSuper(EQAResultReportElisaFileAttachment);\n\n  function EQAResultReportElisaFileAttachment(props) {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportElisaFileAttachment);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectedItem: {},\n      keyword: \"\",\n      shouldOpenNotificationPopup: false,\n      shouldOpenSelectBuildingPopup: false,\n      shouldOpenSelectSourcePopup: false,\n      roles: [],\n      listRole: [],\n      selectFor: 2,\n      displayName: \"\",\n      lastName: \"\",\n      firstName: \"\",\n      fullAddress: \"\",\n      codeOwner: \"\",\n      owner: null,\n      documents: [],\n      shouldOpenSelectOwnerPopup: false\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleClick = function (event, item) {\n      //alert(item);\n      if (item.id != null) {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: item\n        });\n      } else {\n        _this.setState({\n          selectedValue: item.id,\n          selectedItem: null\n        });\n      }\n    };\n\n    _this.handleChangeValue = function (event, source) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var item = _this.state.item;\n      item[name] = value;\n\n      _this.setState({\n        item: item\n      }, function () {\n        _this.state.item[name] = value; // this.state.item['displayName']= fillName;\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenNotificationPopup: false,\n        shouldOpenSelectBuildingPopup: false,\n        shouldOpenSelectSourcePopup: false,\n        shouldOpenSelectOwnerPopup: false\n      });\n    };\n\n    _this.handleAddRealStateFileItem = function () {\n      _this.setState({\n        shouldOpenPopupFile: true\n      });\n    };\n\n    _this.handleFilePopupClose = function () {\n      _this.setState({\n        shouldOpenPopupFile: false\n      });\n    };\n\n    _this.handleSelectFile = function (items) {\n      var item = _this.state.item;\n      var isCheck = false;\n      var listItem = item[\"documents\"];\n\n      if (listItem == null) {\n        listItem = [];\n        listItem = items;\n      } else {\n        if (listItem != null && listItem.length > 0) {\n          items.forEach(function (e) {\n            listItem.push(e);\n          });\n        }\n      }\n\n      item[\"documents\"] = listItem;\n\n      _this.setState({\n        item: item\n      }, function () {\n        _this.handleFilePopupClose();\n      });\n    };\n\n    _this.handleRowDataCellDownloadFile = function (rowData) {\n      var file = rowData.file;\n      var contentType = rowData.file.contentType;\n      var fileName = rowData.file.name;\n      var url = ConstantList.API_ENPOINT + \"/api/fileDownload/document/\" + rowData.file.id;\n      axios.get(url, {\n        responseType: 'arraybuffer'\n      }).then(function (successResponse) {\n        var document = successResponse.data;\n        var file = new Blob([document], {\n          type: contentType\n        });\n        return FileSaver.saveAs(file, fileName);\n      });\n    };\n\n    _this.handleRowDataCellDeleteFile = function (rowData) {\n      var item = _this.state.item;\n      var documents = item.documents;\n\n      for (var index = 0; index < documents.length; index++) {\n        var _item = documents[index];\n\n        if (rowData && _item && rowData.id === _item.id) {\n          documents.splice(index, 1);\n          _item[\"documents\"] = documents;\n\n          _this.setState({\n            item: _item\n          });\n\n          break;\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportElisaFileAttachment, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var item = this.props.item;\n      var _this$state = this.state,\n          displayName = _this$state.displayName,\n          lastName = _this$state.lastName;\n      this.setState({\n        item: item\n      }, function () {\n        _this2.state.item = item;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open,\n          item = _this$props.item;\n      var searchOwnerType = {\n        pageIndex: 1,\n        pageSize: 1000000\n      };\n\n      _objectDestructuringEmpty(this.state);\n\n      var selectForValue = {\n        select: 1,\n        add: 2\n      };\n      var columnsAssetFile = [{\n        title: t('general.stt'),\n        field: 'code',\n        width: '50px',\n        align: 'center',\n        headerStyle: {\n          paddingLeft: '10px',\n          paddingRight: '10px'\n        },\n        render: function render(rowData) {\n          return rowData.tableData.id + 1;\n        }\n      }, {\n        title: t(\"file.name\"),\n        field: \"file.name\",\n        align: \"left\",\n        width: \"250px\"\n      }, {\n        title: t(\"general.action\"),\n        field: \"valueText\",\n        width: \"150px\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"none_wrap\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(LightTooltip, {\n            title: t('general.download'),\n            placement: \"top\",\n            enterDelay: 300,\n            leaveDelay: 200,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this3.handleRowDataCellDownloadFile(rowData);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            color: \"primary\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }\n          }, \"download\"))), !isRoleAdmin && /*#__PURE__*/React.createElement(LightTooltip, {\n            title: t('general.deleteIcon'),\n            placement: \"top\",\n            enterDelay: 300,\n            leaveDelay: 200,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(IconButton, {\n            size: \"small\",\n            onClick: function onClick() {\n              return _this3.handleRowDataCellDeleteFile(rowData);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(Icon, {\n            fontSize: \"small\",\n            color: \"error\",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 19\n            }\n          }, \"delete\"))));\n        }\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 9\n        }\n      }, !isRoleAdmin && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleAddRealStateFileItem,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }\n      }, t('file.addFile')), this.state.shouldOpenPopupFile && /*#__PURE__*/React.createElement(EQAResultReportSerodiaFilePopup, {\n        open: this.state.shouldOpenPopupFile,\n        handleClose: this.handleFilePopupClose,\n        handleSelect: this.handleSelectFile,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        className: \"mt-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        data: this.state.item.documents ? this.state.item.documents : [],\n        columns: columnsAssetFile,\n        options: {\n          toolbar: false,\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          padding: 'dense',\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          maxBodyHeight: '290px',\n          minBodyHeight: '290px'\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                width: \"100%\"\n              },\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }\n            })));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return EQAResultReportElisaFileAttachment;\n}(React.Component);\n\nexport default EQAResultReportElisaFileAttachment;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportSerodia/EQAResultReportSerodiaFileAttachment.jsx"],"names":["Grid","DialogActions","MuiThemeProvider","TextField","Button","Tooltip","Icon","Checkbox","TablePagination","IconButton","Dialog","FormControl","FormControlLabel","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","withStyles","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FileSaver","ConstantList","axios","Select","AsynchronousAutocomplete","Draggable","Paper","NotificationPopup","Autocomplete","width","MuiPickersUtilsProvider","DateTimePicker","KeyboardTimePicker","KeyboardDatePicker","EQAResultReportSerodiaFilePopup","toast","configure","autoClose","draggable","limit","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","PaperComponent","props","EQAResultReportElisaFileAttachment","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectedItem","keyword","shouldOpenNotificationPopup","shouldOpenSelectBuildingPopup","shouldOpenSelectSourcePopup","roles","listRole","selectFor","displayName","lastName","firstName","fullAddress","codeOwner","owner","documents","shouldOpenSelectOwnerPopup","setPage","setState","updatePageData","setRowsPerPage","event","target","value","handleChangePage","newPage","handleClick","item","id","selectedValue","handleChangeValue","source","name","handleDialogClose","handleAddRealStateFileItem","shouldOpenPopupFile","handleFilePopupClose","handleSelectFile","items","isCheck","listItem","length","forEach","e","push","handleRowDataCellDownloadFile","rowData","file","contentType","fileName","url","API_ENPOINT","get","responseType","then","successResponse","document","Blob","type","saveAs","handleRowDataCellDeleteFile","index","splice","t","i18n","isRoleAdmin","handleClose","handleSelect","open","searchOwnerType","pageIndex","pageSize","selectForValue","select","add","columnsAssetFile","title","field","align","headerStyle","paddingLeft","paddingRight","render","tableData","toolbar","selection","actionsColumnIndex","paging","search","padding","rowStyle","maxBodyHeight","minBodyHeight","Toolbar","rows"],"mappings":"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","sourcesContent":["import {\r\n    Grid,\r\n    DialogActions,\r\n    MuiThemeProvider,\r\n    TextField,\r\n    Button,\r\n    Tooltip,\r\n    Icon,\r\n    Checkbox,\r\n    TablePagination,\r\n    IconButton,\r\n    Dialog,FormControl,FormControlLabel\r\n  } from \"@material-ui/core\";\r\n  import { createMuiTheme } from \"@material-ui/core/styles\";\r\n  import React, { Component } from \"react\";\r\n  import ReactDOM from \"react-dom\";\r\n  import MaterialTable, {\r\n    MTableToolbar,\r\n    Chip,\r\n    MTableBody,\r\n    MTableHeader,\r\n  } from \"material-table\";\r\n  import { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\n  import { withStyles } from \"@material-ui/core/styles\";\r\n  import DateFnsUtils from \"@date-io/date-fns\";\r\n  import { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n  import DialogContent from \"@material-ui/core/DialogContent\";\r\n  import DialogTitle from \"@material-ui/core/DialogTitle\";\r\n  import Input from \"@material-ui/core/Input\";\r\n  import InputLabel from \"@material-ui/core/InputLabel\";\r\n  import MenuItem from \"@material-ui/core/MenuItem\";\r\n  import  FileSaver  from \"file-saver\";\r\n  // import FormControl from \"@material-ui/core/FormControl\";\r\n  import ConstantList from \"../../appConfig\";\r\n  import axios from \"axios\";\r\n  import Select from \"@material-ui/core/Select\";\r\n  import AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\n  import Draggable from \"react-draggable\";\r\n  import Paper from \"@material-ui/core/Paper\";\r\n  import NotificationPopup from \"../Component/NotificationPopup/NotificationPopup\";\r\n  import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n  import { width } from \"dom-helpers\";\r\n  import {\r\n    MuiPickersUtilsProvider,\r\n    DateTimePicker,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n  } from \"@material-ui/pickers\";\r\n  import EQAResultReportSerodiaFilePopup from \"./EQAResultReportSerodiaFilePopup\";\r\n  import { toast } from 'react-toastify';\r\n  import 'react-toastify/dist/ReactToastify.css';\r\n  toast.configure({\r\n    autoClose: 2000,\r\n    draggable: false,\r\n    limit:3\r\n    //etc you get the idea\r\n  });\r\n\r\n  const LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.white,\r\n      color: \"rgba(0, 0, 0, 0.87)\",\r\n      boxShadow: theme.shadows[1],\r\n      fontSize: 11,\r\n      position: \"absolute\",\r\n      top: \"-15px\",\r\n      left: \"-30px\",\r\n      width: \"80px\",\r\n    },\r\n  }))(Tooltip);\r\n  function PaperComponent(props) {\r\n    return (\r\n      <Draggable\r\n        handle=\"#draggable-dialog-title\"\r\n        cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n      >\r\n        <Paper {...props} />\r\n      </Draggable>\r\n    );\r\n  }\r\n  class EQAResultReportElisaFileAttachment extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n    }\r\n    state = {\r\n      rowsPerPage: 5,\r\n      page: 0,\r\n      data: [],\r\n      totalElements: 0,\r\n      itemList: [],\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      selectedItem: {},\r\n      keyword: \"\",\r\n      shouldOpenNotificationPopup: false,\r\n      shouldOpenSelectBuildingPopup: false,\r\n      shouldOpenSelectSourcePopup: false,\r\n      roles: [],\r\n      listRole: [],\r\n      selectFor:2,\r\n      displayName:\"\",\r\n      lastName:\"\",\r\n      firstName:\"\",\r\n      fullAddress:\"\",\r\n      codeOwner:\"\",\r\n      owner:null,\r\n      documents:[],\r\n      shouldOpenSelectOwnerPopup:false\r\n    };\r\n    setPage = (page) => {\r\n      this.setState({ page }, function () {\r\n        this.updatePageData();\r\n      });\r\n    };\r\n    \r\n  \r\n    setRowsPerPage = (event) => {\r\n      this.setState({ rowsPerPage: event.target.value, page: 0 });\r\n      this.updatePageData();\r\n    };\r\n  \r\n    handleChangePage = (event, newPage) => {\r\n      this.setPage(newPage);\r\n    };\r\n  \r\n    componentDidMount() {\r\n      \r\n    }\r\n  \r\n    handleClick = (event, item) => {\r\n      //alert(item);\r\n      if (item.id != null) {\r\n        this.setState({ selectedValue: item.id, selectedItem: item });\r\n      } else {\r\n        this.setState({ selectedValue: item.id, selectedItem: null });\r\n      }\r\n    };\r\n    handleChangeValue = (event, source) => {\r\n      const name = event.target.name;\r\n      const value = event.target.value;\r\n      let {item} = this.state\r\n      item[name]=value\r\n      this.setState({item:item},()=>{\r\n        this.state.item[name] = value\r\n        // this.state.item['displayName']= fillName;\r\n      });\r\n    }\r\n    componentWillMount() {\r\n      let { item } = this.props;\r\n     \r\n      let {displayName,lastName} = this.state\r\n      this.setState({ item: item,},()=>{\r\n        this.state.item = item\r\n      });    \r\n    }  \r\n    handleDialogClose = () => {\r\n      this.setState({\r\n        shouldOpenNotificationPopup: false,\r\n        shouldOpenSelectBuildingPopup: false,\r\n        shouldOpenSelectSourcePopup: false,\r\n        shouldOpenSelectOwnerPopup:false,\r\n      });\r\n    };\r\n    handleAddRealStateFileItem =()=>{\r\n        this.setState({shouldOpenPopupFile: true})\r\n    }\r\n    handleFilePopupClose =()=>{\r\n        this.setState({shouldOpenPopupFile: false})\r\n    }\r\n    handleSelectFile = (items)=>{\r\n        let {item} = this.state\r\n        let isCheck = false\r\n        let listItem = item[\"documents\"]\r\n        if(listItem == null){\r\n          listItem = []\r\n          listItem = items\r\n        }else{\r\n          if(listItem != null && listItem.length >0){\r\n            items.forEach(e =>{             \r\n                listItem.push(e)\r\n            })\r\n            \r\n          }\r\n        }\r\n        \r\n        \r\n        item[\"documents\"] = listItem\r\n        this.setState({item:item},()=>{\r\n            this.handleFilePopupClose()\r\n        })\r\n    }\r\n    handleRowDataCellDownloadFile = (rowData) => {\r\n      let file = rowData.file;\r\n      let contentType = rowData.file.contentType;\r\n      let fileName = rowData.file.name;\r\n      const url = ConstantList.API_ENPOINT + \"/api/fileDownload/document/\" + rowData.file.id;\r\n      axios.get(url, { responseType: 'arraybuffer' }).then((successResponse) => {\r\n        let document = successResponse.data;\r\n        let file = new Blob([document], { type: contentType });\r\n        return FileSaver.saveAs(file, fileName);\r\n      });\r\n    }\r\n    handleRowDataCellDeleteFile =(rowData)=>{\r\n        let {item} = this.state\r\n\r\n        let documents = item.documents;\r\n        for (let index = 0; index < documents.length; index++) {\r\n            const item = documents[index]\r\n            if (\r\n              rowData &&\r\n              item &&\r\n              rowData.id === item.id\r\n            ) {\r\n                documents.splice(index, 1)\r\n                item[\"documents\"] = documents\r\n              this.setState({ item:item })\r\n              break\r\n            }\r\n          }\r\n    }\r\n    render() {\r\n      const {\r\n        t,\r\n        i18n,\r\n        isRoleAdmin,\r\n        handleClose,\r\n        handleSelect,\r\n        selectedItem,\r\n        open,\r\n        item,\r\n      } = this.props;\r\n      let searchOwnerType ={pageIndex:1,pageSize:1000000}\r\n      let {\r\n  \r\n      } = this.state;\r\n      const selectForValue = { select: 1, add: 2 };\r\n      let columnsAssetFile = [\r\n        {\r\n          title: t('general.stt'),\r\n          field: 'code',\r\n          width: '50px',\r\n          align: 'center',\r\n          headerStyle: {\r\n            paddingLeft: '10px',\r\n            paddingRight: '10px',\r\n          },\r\n          render: (rowData) => rowData.tableData.id + 1,\r\n        },\r\n        { title: t(\"file.name\"), field: \"file.name\", align: \"left\", width: \"250px\" },    \r\n        {\r\n          title: t(\"general.action\"),\r\n          field: \"valueText\",\r\n          width: \"150px\",\r\n          render: rowData =>\r\n            <div className=\"none_wrap\">\r\n              <LightTooltip title={t('general.download')} placement=\"top\" enterDelay={300} leaveDelay={200}>\r\n                <IconButton size=\"small\" onClick={() => this.handleRowDataCellDownloadFile(rowData)}>\r\n                  <Icon fontSize=\"small\" color=\"primary\">download</Icon>\r\n                </IconButton>\r\n              </LightTooltip>\r\n              {!isRoleAdmin && (<LightTooltip title={t('general.deleteIcon')} placement=\"top\" enterDelay={300} leaveDelay={200}>\r\n                <IconButton size=\"small\" onClick={() => this.handleRowDataCellDeleteFile(rowData)}>\r\n                  <Icon fontSize=\"small\" color=\"error\">delete</Icon>\r\n                </IconButton>\r\n              </LightTooltip>)}\r\n            </div>\r\n        },\r\n      ];\r\n      return (\r\n        <React.Fragment>\r\n              {!isRoleAdmin && (<Grid item md={12} sm={12} xs={12}>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={\r\n                this.handleAddRealStateFileItem\r\n              }\r\n            >\r\n              {t('file.addFile')}\r\n            </Button>\r\n            {this.state.shouldOpenPopupFile && (\r\n              <EQAResultReportSerodiaFilePopup\r\n                open={this.state.shouldOpenPopupFile}                \r\n                handleClose={this.handleFilePopupClose}\r\n                handleSelect = {this.handleSelectFile}\r\n                t={t}\r\n                i18n={i18n}\r\n              />)\r\n            }\r\n          </Grid>)}\r\n          <Grid item md={12} sm={12} xs={12} className=\"mt-16\">           \r\n            <MaterialTable\r\n              data={this.state.item.documents ? this.state.item.documents:[]}\r\n              columns={columnsAssetFile}\r\n              options={{\r\n                toolbar: false,\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                padding: 'dense',\r\n                rowStyle: rowData => ({\r\n                  backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                }),\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                maxBodyHeight: '290px',\r\n                minBodyHeight: '290px',\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <div style={{ width: \"100%\" }}>\r\n                    <MTableToolbar {...props} />\r\n                  </div>\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n              }}\r\n            />\r\n          </Grid>\r\n    </React.Fragment>\r\n           \r\n      );\r\n    }\r\n  }\r\n  export default EQAResultReportElisaFileAttachment;\r\n  "]},"metadata":{},"sourceType":"module"}