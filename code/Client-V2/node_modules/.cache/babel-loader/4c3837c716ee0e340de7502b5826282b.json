{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar react_dom_1 = require(\"react-dom\"); // import { parse, format } from 'date-fns';\n\n\nvar DateEditorUtils_1 = require(\"./DateEditorUtils\");\n\nvar DEFAULT_DATE_INPUT_FORMAT = 'YYYY-MM-DD'; // date-fns 'yyyy-MM-dd';\n\nvar inputCss = {\n  width: '100%',\n  height: '100%',\n  fontSize: '1em',\n  fontFamily: 'inherit'\n};\n\nvar Editor =\n/** @class */\nfunction (_super) {\n  __extends(Editor, _super);\n\n  function Editor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      value: ''\n    };\n    _this.ref = null; // date-fns format 'MM/dd/yyyy'\n\n    _this.format = _this.props.editorParams.format || 'MM/DD/YYYY'; // TODO: detect from user locale & set default.\n\n    _this.setValueOnSuccess = function (value) {\n      if (value === void 0) {\n        value = _this.state.value;\n      }\n\n      var success = _this.props.success;\n\n      if (!value) {\n        // user deleted value in the cell => set to ''\n        // const result = format(new Date(), this.format);\n        success('');\n        return;\n      }\n\n      var result = value;\n\n      try {\n        if (result.indexOf('-') > 0) {\n          // value is \"yyyy-MM-dd\" => parse it\n          var valueDate = DateEditorUtils_1.parse(value, 'YYYY-MM-DD');\n          result = DateEditorUtils_1.format(valueDate, _this.format);\n        }\n      } catch (err) {\n        console.error('ERROR', err);\n        result = DateEditorUtils_1.format(new Date(), DEFAULT_DATE_INPUT_FORMAT);\n      }\n\n      success(result);\n    };\n\n    _this.onChange = function (ev) {\n      var value = ev.target.value;\n\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.onKeyPress = function (ev) {\n      var cancel = _this.props.cancel;\n\n      if (ev.keyCode === 13) {\n        // Enter pressed. If value is '' => set to today:\n        var today = DateEditorUtils_1.format(new Date(), DEFAULT_DATE_INPUT_FORMAT);\n        var value = _this.state.value || today;\n\n        _this.setValueOnSuccess(value);\n      } else if (ev.keyCode === 27) {\n        cancel();\n      }\n    };\n\n    _this.onBlur = function () {\n      _this.setValueOnSuccess();\n    };\n\n    return _this;\n  }\n\n  Editor.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.props.onRendered(function () {\n      var value = _this.props.cell.getValue();\n\n      _this.setState({\n        value: value\n      });\n\n      _this.ref.focus();\n    });\n  };\n\n  Editor.prototype.render = function () {\n    var _this = this;\n\n    var cell = this.props.cell;\n    var valueDt = DateEditorUtils_1.parse(cell.getValue(), this.format); // console.log('this.format', this.format);\n    // console.log('cell.getValue()', cell.getValue());\n    // console.log('valueDt', valueDt);\n\n    var value = DateEditorUtils_1.format(new Date(), DEFAULT_DATE_INPUT_FORMAT);\n\n    try {\n      value = DateEditorUtils_1.format(valueDt, DEFAULT_DATE_INPUT_FORMAT);\n    } catch (err) {}\n\n    return React.createElement(\"input\", {\n      type: \"date\",\n      ref: function ref(r) {\n        return _this.ref = r;\n      },\n      defaultValue: value,\n      // value={value}\n      onBlur: this.onBlur,\n      onChange: this.onChange,\n      onKeyUp: this.onKeyPress,\n      style: inputCss\n    });\n  };\n\n  return Editor;\n}(React.Component);\n\nfunction default_1(cell, onRendered, success, cancel, editorParams) {\n  var container = document.createElement('div');\n  container.style.height = '100%';\n  react_dom_1.render(React.createElement(Editor, {\n    cell: cell,\n    onRendered: onRendered,\n    success: success,\n    cancel: cancel,\n    editorParams: editorParams\n  }), container);\n  return container;\n}\n\nexports[\"default\"] = default_1;","map":null,"metadata":{},"sourceType":"script"}