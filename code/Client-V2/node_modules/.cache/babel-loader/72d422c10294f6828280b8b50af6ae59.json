{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrgSampleTransferStatus\\\\SampleTransferStatusEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, FormControl, MenuItem, Select, InputLabel, DialogActions, DialogTitle, DialogContent } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { saveItem } from \"../EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterService\";\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\nimport \"date-fns\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport NumberFormat from \"react-number-format\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar SampleTransferStatusEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(SampleTransferStatusEditorDialog, _Component);\n\n  var _super = _createSuper(SampleTransferStatusEditorDialog);\n\n  function SampleTransferStatusEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, SampleTransferStatusEditorDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      shippingUnit: \"\",\n      deliveryDate: null,\n      deliveryDateRef: null,\n      sampleTransferStatusRef: 3,\n      isActive: false\n    };\n\n    _this.handleStartDateChange = function (event, source) {\n      if (source === \"deliveryDateRef\") {\n        _this.setState({\n          deliveryDateRef: event\n        });\n      } // if(source === \"sampleReceivingDateRef\"){\n      //   this.setState({ sampleReceivingDateRef: event });\n      // }\n\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      }, function () {});\n    };\n\n    _this.handleFormSubmit = function () {\n      var _this$state = _this.state,\n          id = _this$state.id,\n          code = _this$state.code;\n      var t = _this.props.t;\n      saveItem(_objectSpread({}, _this.state)).then(function (respone) {\n        if (respone.data.isDuplicateHealthOrg) {\n          toast.warning(t(\"EQAHealthOrgRoundRegister.notify.duplicatedHealthOrg\"));\n        } else if (!respone.data.isDuplicateHealthOrg && respone.status == 200) {\n          toast.info(t(\"EQAHealthOrgRoundRegister.notify.updateSuccess\"));\n\n          _this.props.handleOKEditClose();\n        } else {\n          toast.error(t(\"EQAHealthOrgRoundRegister.notify.addFail\"));\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SampleTransferStatusEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n\n      if (!item.sampleTransferStatus) {\n        item.sampleTransferStatusRef = 3;\n      }\n\n      this.setState(item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var _this$state2 = this.state,\n          billOfLadingCodeRef = _this$state2.billOfLadingCodeRef,\n          shippingUnitRef = _this$state2.shippingUnitRef,\n          sampleRef = _this$state2.sampleRef,\n          deliveryDateRef = _this$state2.deliveryDateRef,\n          sampleTransferStatusRes = _this$state2.sampleTransferStatusRes;\n      var _this$props3 = this.props,\n          open = _this$props3.open,\n          handleClose = _this$props3.handleClose;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, \" \", t(\"confirm\"), \" \")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"ml-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }\n      }, t(\"EQAHealthOrgSampleTransferStatus.confirm_update_status\")), sampleRef != null && sampleRef == true && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        className: \"mb-16\",\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        className: \"w-100 mb-16\",\n        label: t(\"EQAHealthOrgSampleTransferStatus.billOfLadingCodeRef\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"billOfLadingCodeRef\",\n        value: billOfLadingCodeRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DatePicker, {\n        className: \"w-100 mb-16\",\n        margin: \"none\",\n        name: \"deliveryDateRef\",\n        id: \"mui-pickers-date\",\n        label: t(\"EQAHealthOrgSampleTransferStatus.delivered_date_ref\"),\n        inputVariant: \"standard\",\n        type: \"text\",\n        autoOk: true,\n        format: \"dd/MM/yyyy\",\n        value: deliveryDateRef,\n        onChange: function onChange(event) {\n          return _this2.handleStartDateChange(event, \"deliveryDateRef\");\n        },\n        validators: sampleTransferStatusRes && sampleTransferStatusRes > 0 ? [\"required\"] : \"\",\n        errorMessages: sampleTransferStatusRes && sampleTransferStatusRes > 0 ? [\"this field is required\"] : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 23\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"EQAHealthOrgSampleTransferStatus.shipping_unit\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"shippingUnitRef\",\n        value: shippingUnitRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }\n      }))))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, t(\"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }\n      }, t(\"confirm\")))));\n    }\n  }]);\n\n  return SampleTransferStatusEditorDialog;\n}(Component);\n\nexport default SampleTransferStatusEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrgSampleTransferStatus/SampleTransferStatusEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","FormControl","MenuItem","Select","InputLabel","DialogActions","DialogTitle","DialogContent","ValidatorForm","TextValidator","saveItem","MuiPickersUtilsProvider","DatePicker","DateFnsUtils","Draggable","Paper","NumberFormat","PropTypes","toast","configure","autoClose","draggable","limit","PaperComponent","props","SampleTransferStatusEditorDialog","state","shippingUnit","deliveryDate","deliveryDateRef","sampleTransferStatusRef","isActive","handleStartDateChange","event","source","setState","handleChange","persist","target","checked","name","value","handleFormSubmit","id","code","t","then","respone","data","isDuplicateHealthOrg","warning","status","info","handleOKEditClose","error","open","handleClose","item","sampleTransferStatus","i18n","billOfLadingCodeRef","shippingUnitRef","sampleRef","sampleTransferStatusRes","cursor","overflowY","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { saveItem } from \"../EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterService\";\r\nimport { MuiPickersUtilsProvider, DatePicker } from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport PropTypes from \"prop-types\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass SampleTransferStatusEditorDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    shippingUnit: \"\",\r\n    deliveryDate: null,\r\n    deliveryDateRef: null,\r\n    sampleTransferStatusRef: 3,\r\n    isActive: false,\r\n  };\r\n\r\n  handleStartDateChange = (event, source) => {\r\n    if(source === \"deliveryDateRef\"){\r\n      this.setState({ deliveryDateRef: event });\r\n    }\r\n    // if(source === \"sampleReceivingDateRef\"){\r\n    //   this.setState({ sampleReceivingDateRef: event });\r\n    // }\r\n  };\r\n\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    \r\n    this.setState(\r\n      {\r\n        [event.target.name]: event.target.value\r\n      },\r\n      function() {\r\n      }\r\n    );\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id, code } = this.state;\r\n    let { t } = this.props;\r\n    saveItem({ ...this.state }).then(respone => {\r\n      if (respone.data.isDuplicateHealthOrg) {\r\n        toast.warning(\r\n          t(\"EQAHealthOrgRoundRegister.notify.duplicatedHealthOrg\")\r\n        );\r\n      } else if (!respone.data.isDuplicateHealthOrg && respone.status == 200) {\r\n        toast.info(t(\"EQAHealthOrgRoundRegister.notify.updateSuccess\"));\r\n        this.props.handleOKEditClose();\r\n      } else {\r\n        toast.error(t(\"EQAHealthOrgRoundRegister.notify.addFail\"));\r\n      }\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    if (!item.sampleTransferStatus) {\r\n      item.sampleTransferStatusRef = 3;\r\n    }\r\n    this.setState(item);\r\n  }\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      billOfLadingCodeRef,\r\n      shippingUnitRef,\r\n      sampleRef,\r\n      deliveryDateRef,\r\n      sampleTransferStatusRes\r\n    } = this.state;\r\n    let { open, handleClose } = this.props;\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"sm\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20\">\r\n            {\" \"}\r\n            {t(\"confirm\")}{\" \"}\r\n          </span>\r\n        </DialogTitle>\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-16\" container spacing={4}>\r\n            <h5 className=\"ml-16\">{t(\"EQAHealthOrgSampleTransferStatus.confirm_update_status\")}</h5>\r\n              {(sampleRef!=null && sampleRef == true) && \r\n                  <Grid item  className=\"mb-16\" container spacing={1}>\r\n                    <Grid item sm={12} xs={12}>\r\n                      <TextValidator\r\n                        size=\"small\"\r\n                        className=\"w-100 mb-16\"\r\n                        label={t(\"EQAHealthOrgSampleTransferStatus.billOfLadingCodeRef\")}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        name=\"billOfLadingCodeRef\"\r\n                        value={billOfLadingCodeRef}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                      <DatePicker\r\n                        className=\"w-100 mb-16\"\r\n                        margin=\"none\"\r\n                        name = \"deliveryDateRef\"\r\n                        id=\"mui-pickers-date\"\r\n                        label={t(\"EQAHealthOrgSampleTransferStatus.delivered_date_ref\")}\r\n                        inputVariant=\"standard\"\r\n                        type=\"text\"\r\n                        autoOk={true}\r\n                        format=\"dd/MM/yyyy\"\r\n                        value={deliveryDateRef}\r\n                        onChange={event => this.handleStartDateChange(event, \"deliveryDateRef\")}\r\n                        validators={\r\n                          sampleTransferStatusRes && sampleTransferStatusRes > 0\r\n                            ? [\"required\"]\r\n                            : \"\"\r\n                        }\r\n                        errorMessages={\r\n                          sampleTransferStatusRes && sampleTransferStatusRes > 0\r\n                            ? [\"this field is required\"]\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </MuiPickersUtilsProvider>\r\n                  </Grid>\r\n                    <Grid item sm={12} xs={12}>\r\n                      <TextValidator\r\n                        className=\"w-100 mb-16\"\r\n                        label={t(\"EQAHealthOrgSampleTransferStatus.shipping_unit\")}\r\n                        onChange={this.handleChange}\r\n                        type=\"text\"\r\n                        name=\"shippingUnitRef\"\r\n                        value={shippingUnitRef}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n              }\r\n            </Grid>\r\n          </DialogContent>\r\n\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => this.props.handleClose()}\r\n            >\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {t(\"confirm\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SampleTransferStatusEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}