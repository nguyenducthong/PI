{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\Role\\\\Role.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, IconButton, Icon, TablePagination, Button, TextField } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { searchByPage } from \"./RoleService\";\nimport RoleEditorDialog from \"./RoleEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { saveAs } from 'file-saver';\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"edit\")));\n}\n\nvar Role = /*#__PURE__*/function (_Component) {\n  _inherits(Role, _Component);\n\n  var _super = _createSuper(Role);\n\n  function Role() {\n    var _this;\n\n    _classCallCheck(this, Role);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      keyword: '',\n      rowsPerPage: 10,\n      page: 0,\n      eQAHealthOrgType: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject.pageIndex, searchObject.pageSize).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteRole = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      //alert(this.data.length);\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Role, [{\n    key: \"componentDidMount\",\n    // handleConfirmationResponse = () => {\n    //   deleteItem(this.state.id).then(() => {\n    //     this.updatePageData();\n    //     this.handleDialogClose();\n    //   });\n    // };\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      var columns = [{\n        title: t(\"role.name\"),\n        field: \"name\",\n        width: \"150\"\n      }, {\n        title: t(\"role.authority\"),\n        field: \"authority\",\n        width: \"150\"\n      }, {\n        title: t(\"role.createdBy\"),\n        field: \"createdBy\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t('role.title')\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(RoleEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        agree: t('general.agree'),\n        cancel: t('general.cancel'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows; // this.setState({selectedItems:rows});\n        },\n        actions: [{\n          hidden: true,\n          isFreeAction: true,\n          tooltip: 'Remove All Selected Roles',\n          icon: 'delete',\n          onClick: function onClick(evt, data) {\n            _this2.handleDeleteAll(data);\n\n            alert('You want to delete ' + data.length + ' rows');\n          }\n        }],\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref2) {\n          var from = _ref2.from,\n              to = _ref2.to,\n              count = _ref2.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Role;\n}(Component);\n\nexport default Role;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/Role/Role.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","TextField","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","searchByPage","RoleEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","saveAs","MaterialButton","props","t","i18n","item","onSelect","Role","state","keyword","rowsPerPage","page","eQAHealthOrgType","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","numSelected","rowCount","handleTextChange","event","setState","target","value","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","searchObject","pageIndex","pageSize","then","data","itemList","content","handleDownload","blob","Blob","type","handleDialogClose","handleOKEditClose","handleDeleteRole","id","handleEditItem","handleDelete","handleDeleteAll","handleDeleteList","columns","title","field","width","align","name","path","handleConfirmationResponse","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","search","rowStyle","rowData","index","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","Toolbar","hidden","isFreeAction","tooltip","icon","onClick","evt","alert","length","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  Button,\r\n  TextField\r\n} from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { searchByPage } from \"./RoleService\";\r\nimport RoleEditorDialog from \"./RoleEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item, 0)}>\r\n      <Icon color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    {/* <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton> */}\r\n  </div>;\r\n}\r\n\r\nclass Role extends Component {\r\n  state = {\r\n    keyword: '',\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    eQAHealthOrgType: [],\r\n    item: {},\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false\r\n  };\r\n  numSelected = 0;\r\n  rowCount = 0;\r\n\r\n  handleTextChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject.pageIndex, searchObject.pageSize).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n  };\r\n\r\n  handleDownload = () => {\r\n    var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, \"hello world.txt\");\r\n  }\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteRole = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  // handleConfirmationResponse = () => {\r\n  //   deleteItem(this.state.id).then(() => {\r\n  //     this.updatePageData();\r\n  //     this.handleDialogClose();\r\n  //   });\r\n  // };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  handleEditItem = item => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true\r\n    });\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  // async handleDeleteList(list) {\r\n  //   for (var i = 0; i < list.length; i++) {\r\n  //     await deleteItem(list[i].id);\r\n  //   }\r\n  // }\r\n\r\n  handleDeleteAll = (event) => {\r\n    //alert(this.data.length);\r\n    this.handleDeleteList(this.data).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n    }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      keyword,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      item,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      shouldOpenConfirmationDeleteAllDialog\r\n    } = this.state;\r\n\r\n    let columns = [\r\n      { title: t(\"role.name\"), field: \"name\", width: \"150\" },\r\n      { title: t(\"role.authority\"), field: \"authority\", width: \"150\" },\r\n      { title: t(\"role.createdBy\"), field: \"createdBy\", align: \"left\", width: \"150\" }\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },{ name: t('role.title') }]} />\r\n        </div>\r\n\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date(), isAddNew: true });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )}\r\n            <TextField\r\n              label={t('EnterSearch')}\r\n              className=\"mb-16 mr-10\"\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              onChange={this.handleTextChange} />\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\" onClick={() => this.search(keyword)}>\r\n              {t('Search')}\r\n            </Button>\r\n          </Grid> */}\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {shouldOpenEditorDialog && (\r\n                <RoleEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={item}\r\n                />\r\n              )}\r\n\r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                  agree={t('general.agree')}\r\n                  cancel={t('general.cancel')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              options={{\r\n                  selection: false,\r\n                  actionsColumnIndex: -1,\r\n                  paging: false,\r\n                  search: false,\r\n                  rowStyle: (rowData, index) => ({\r\n                    backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                  }), \r\n                  maxBodyHeight: '450px',\r\n                  minBodyHeight: '370px',\r\n                  headerStyle: {\r\n                    backgroundColor: '#358600',\r\n                    color:'#fff',\r\n                  },\r\n                  padding: 'dense',\r\n                  toolbar: false\r\n                }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              actions={[\r\n                {\r\n                  hidden: true,\r\n                  isFreeAction:true,\r\n                  tooltip: 'Remove All Selected Roles',\r\n                  icon: 'delete',\r\n                  onClick: (evt, data) => {\r\n                    this.handleDeleteAll(data);\r\n                    alert('You want to delete ' + data.length + ' rows');\r\n                  }\r\n                },\r\n              ]}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Role;\r\n"]},"metadata":{},"sourceType":"module"}