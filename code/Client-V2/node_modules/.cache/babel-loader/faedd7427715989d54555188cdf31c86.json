{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\CheckPoint\\\\CheckPointDialog.jsx\";\nimport { FormControl, Input, Radio, DialogTitle, InputAdornment, DialogActions, Grid, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination, Dialog, DialogContent } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getListCheckScores } from \"./CheckPointService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport { Helmet } from 'react-helmet';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })));\n}\n\nvar CheckPointDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(CheckPointDialog, _React$Component);\n\n  var _super = _createSuper(CheckPointDialog);\n\n  function CheckPointDialog(props) {\n    var _this;\n\n    _classCallCheck(this, CheckPointDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      listEQARound: [],\n      keyword: '',\n      round: null,\n      shouldOpenConfirmationEditDialog: false,\n      shouldOpenDialog: false\n    };\n\n    _this.handleTextSearchChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationEditDialog: false,\n        shouldOpenDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenConfirmationEditDialog: false,\n        shouldOpenDialog: false\n      });\n    };\n\n    _this.handleTextSearchChange = _this.handleTextSearchChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CheckPointDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var item = this.props.item;\n      getListCheckScores(this.props.healthOrgRoundId).then(function (res) {\n        _this2.setState({\n          itemList: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      // const { t, i18n } = this.props;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          listEQARound = _this$state.listEQARound,\n          round = _this$state.round;\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          handleOKEditClose = _this$props.handleOKEditClose,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var columns = [{\n        title: t(\"checkPoint.errorName\"),\n        field: \"errorName\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"checkPoint.errorNumber\"),\n        field: \"errorNumber\",\n        width: \"150\"\n      }, {\n        title: t(\"checkPoint.minusPoint\"),\n        field: \"minusPoint\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"checkPoint.note\"),\n        field: \"note\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: 'lg',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, this.props.item.healthOrg.name), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 112\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('CheckPointDialog.list'),\n        data: this.state.itemList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          // maxBodyHeight: '450px',\n          // minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, \" \", t('Cancel')))));\n    }\n  }]);\n\n  return CheckPointDialog;\n}(React.Component);\n\nexport default CheckPointDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/CheckPoint/CheckPointDialog.jsx"],"names":["FormControl","Input","Radio","DialogTitle","InputAdornment","DialogActions","Grid","MuiThemeProvider","IconButton","Icon","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","Dialog","DialogContent","moment","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getListCheckScores","Breadcrumb","ConfirmationDialog","Draggable","Paper","Link","SearchIcon","Autocomplete","searchByPage","searchByPageEQARound","getCurrentUser","getListHealthOrgByUser","Helmet","toast","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","PaperComponent","CheckPointDialog","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","listEQARound","keyword","round","shouldOpenConfirmationEditDialog","shouldOpenDialog","handleTextSearchChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","handleOKEditClose","handleDelete","id","handleDialogClose","bind","healthOrgRoundId","then","res","open","handleClose","columns","title","field","align","width","cursor","healthOrg","name","position","right","top","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","rowData","backgroundColor","tableData","headerStyle","color","padding","toolbar","Toolbar","body","emptyDataSourceMessage"],"mappings":"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","sourcesContent":["import { FormControl, Input,Radio,DialogTitle,\r\n     InputAdornment,DialogActions, Grid, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination,Dialog,DialogContent } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { getListCheckScores } from \"./CheckPointService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\nimport {getCurrentUser,getListHealthOrgByUser} from \"../User/UserService\"\r\nimport { Helmet } from 'react-helmet';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n      <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\r\n      <Icon fontSize=\"small\" color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\nclass CheckPointDialog extends React.Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    listEQARound: [],\r\n    keyword: '',\r\n    round: null,\r\n    shouldOpenConfirmationEditDialog:false,\r\n    shouldOpenDialog:false\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTextSearchChange = this.handleTextSearchChange.bind(this);\r\n  }\r\n\r\n  handleTextSearchChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n  handleKeyDownEnterSearch = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.search()\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationEditDialog:false,\r\n      shouldOpenDialog:false\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false,\r\n      shouldOpenConfirmationEditDialog:false,\r\n      shouldOpenDialog:false\r\n    });\r\n  };\r\n\r\n  componentWillMount(){\r\n      let {item} = this.props\r\n    getListCheckScores(this.props.healthOrgRoundId).then(res=>{\r\n        \r\n        this.setState({itemList:res.data})\r\n    })\r\n  }\r\n  render() {\r\n    // const { t, i18n } = this.props;\r\n    let { keyword, listEQARound, round } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n\r\n    let columns = [\r\n      { title: t(\"checkPoint.errorName\"), field: \"errorName\", align: \"left\", width: \"150\",\r\n        },\r\n      { title: t(\"checkPoint.errorNumber\"), field: \"errorNumber\", width: \"150\",\r\n       },\r\n      {\r\n        title: t(\"checkPoint.minusPoint\"), field: \"minusPoint\", align: \"left\", width: \"150\", \r\n      },\r\n      { title: t(\"checkPoint.note\"), field: \"note\", align: \"left\", width: \"150\",\r\n      },\r\n      \r\n    ];\r\n    return (\r\n        <Dialog onClose={handleClose} open={open} PaperComponent={PaperComponent} maxWidth={'lg'} fullWidth={true} >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n        <span className=\"mb-20\">{this.props.item.healthOrg.name}</span>\r\n        <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n      </DialogTitle>\r\n        <DialogContent>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <MaterialTable\r\n              title={t('CheckPointDialog.list')}\r\n              data={this.state.itemList}\r\n              columns={columns}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: rowData => ({\r\n                  backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                // maxBodyHeight: '450px',\r\n                // minBodyHeight: '370px',\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            {/* <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={this.state.totalElements}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            /> */}\r\n          </Grid>\r\n        </Grid>\r\n      <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n        <Button variant=\"contained\" className=\"\" color=\"secondary\" onClick={() => handleClose()}> {t('Cancel')}</Button>\r\n      </DialogActions>\r\n      </DialogContent>\r\n    </Dialog>\r\n    )\r\n  }\r\n}\r\nexport default CheckPointDialog;"]},"metadata":{},"sourceType":"module"}