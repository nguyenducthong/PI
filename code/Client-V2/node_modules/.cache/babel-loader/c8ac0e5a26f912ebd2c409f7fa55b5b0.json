{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\Reagent\\\\ReagentEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, DialogActions, Grid, Checkbox, FormControlLabel, DialogTitle, TextField, DialogContent, FormControl, MenuItem, Select, InputLabel, FormHelperText, Icon, IconButton } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { checkCode, addNewReagent, updateReagent } from \"./ReagentService\";\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocalConstants from \"./Constants\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_style.scss';\nimport TabsReagent from \"./Tabs\";\ntoast.configure();\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar ReagentEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(ReagentEditorDialog, _Component);\n\n  var _super = _createSuper(ReagentEditorDialog);\n\n  function ReagentEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, ReagentEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      registrationNumber: \"\",\n      //Số đăng ký\n      dateOfIssue: new Date(),\n      //Ngày cấp\n      expirationDate: new Date(),\n      //Ngày hết hạn\n      activeIngredients: \"\",\n      //Hoạt chất\n      dosageForms: \"\",\n      //Dạng bào chế\n      packing: \"\",\n      //Quy cách đóng gói\n      registeredFacilityName: \"\",\n      //Tên cơ sở đăng ký\n      productionFacilityName: \"\",\n      //Tên cơ sở sản xuất\n      healthDepartmentDirectory: true,\n      //thuộc bộ y tế\n      testType: null,\n      //Thuộc phương pháp xét nghiệm nào\n      isActive: false,\n      isView: false,\n      hasTestType: false\n    };\n\n    _this.saveRegant = function () {\n      var _this$state = _this.state,\n          id = _this$state.id,\n          code = _this$state.code,\n          testType = _this$state.testType,\n          item = _this$state.item;\n      var t = _this.props.t;\n\n      if (item.testType == null) {\n        item[\"hasTestType\"] = true;\n\n        _this.setState({\n          item: item\n        });\n      } else {\n        // this.setState({ isView: true });\n        checkCode(id, item.code).then(function (result) {\n          //Nếu trả về true là code đã được sử dụng\n          if (result.data) {\n            toast.warning(t('mess_code'));\n\n            _this.setState({\n              isView: false\n            });\n          } else {\n            //Nếu trả về false là code chưa sử dụng có thể dùng\n            if (id) {\n              updateReagent(_objectSpread({}, _this.state.item)).then(function () {\n                toast.success(t('mess_edit'));\n\n                _this.setState({\n                  isView: false\n                });\n              });\n            } else {\n              addNewReagent(_objectSpread({}, _this.state.item)).then(function (response) {\n                if (response.data != null && response.status == 200) {\n                  _this.state.item.id = response.data.id;\n\n                  _this.setState(_objectSpread(_objectSpread({}, _this.state.item), {}, {\n                    isView: false\n                  }));\n\n                  toast.success(t('mess_add'));\n                }\n              });\n            }\n          }\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ReagentEditorDialog, [{\n    key: \"list\",\n    value: function list() {\n      var listMethod = [{\n        value: LocalConstants.EQAResultReportTypeMethod.Elisa,\n        name: \"Elisa\"\n      }, {\n        value: LocalConstants.EQAResultReportTypeMethod.FastTest,\n        name: \"Test nhanh\"\n      }, {\n        value: LocalConstants.EQAResultReportTypeMethod.ECL,\n        name: \"Điện hóa phát quang\"\n      }, {\n        value: LocalConstants.EQAResultReportTypeMethod.SERODIA,\n        name: \"Serodia\"\n      }];\n      this.setState({\n        listMethod: listMethod\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n\n      if (item == null) {\n        item = {};\n        item[\"dateOfIssue\"] = new Date();\n        item[\"expirationDate\"] = new Date();\n      }\n\n      item[\"hasTestType\"] = false;\n\n      if (item != null && item.healthDepartmentDirectory == null) {\n        item[\"healthDepartmentDirectory\"] = true;\n      }\n\n      this.setState({\n        item: item\n      }, function () {// console.log(this.state.item)\n      });\n      this.list();\n      this.setState(_objectSpread({}, item)); // ValidatorForm.addValidationRule('checkMaxLength', (value) => {\n      //   if (value.length > 1020) {\n      //     return false;\n      //   }\n      //   return true;\n      // });\n      // ValidatorForm.addValidationRule('checkBox', (value) => {\n      //   if (this.state.healthDepartmentDirectory == true) {\n      //     if (value.length == 0) {\n      //       return false;\n      //     }\n      //   }\n      //   return true;\n      // });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          name = _this$state2.name,\n          code = _this$state2.code,\n          isView = _this$state2.isView,\n          registrationNumber = _this$state2.registrationNumber,\n          dateOfIssue = _this$state2.dateOfIssue,\n          expirationDate = _this$state2.expirationDate,\n          activeIngredients = _this$state2.activeIngredients,\n          dosageForms = _this$state2.dosageForms,\n          packing = _this$state2.packing,\n          registeredFacilityName = _this$state2.registeredFacilityName,\n          productionFacilityName = _this$state2.productionFacilityName,\n          healthDepartmentDirectory = _this$state2.healthDepartmentDirectory,\n          testType = _this$state2.testType,\n          listMethod = _this$state2.listMethod,\n          description = _this$state2.description,\n          hasTestType = _this$state2.hasTestType;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: 'lg',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 7\n        }\n      }, \" \", (id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"ReagentTable.title\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 110\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TabsReagent, {\n        t: t,\n        i18n: i18n,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-16\",\n        color: \"secondary\",\n        type: \"button\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }\n      }, \" \", t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n        disabled: isView,\n        onClick: this.saveRegant,\n        variant: \"contained\",\n        color: \"primary\",\n        className: \" mr-16 align-bottom\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, t('Save')))));\n    }\n  }]);\n\n  return ReagentEditorDialog;\n}(Component);\n\nexport default ReagentEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/Reagent/ReagentEditorDialog.jsx"],"names":["React","Component","Dialog","Button","DialogActions","Grid","Checkbox","FormControlLabel","DialogTitle","TextField","DialogContent","FormControl","MenuItem","Select","InputLabel","FormHelperText","Icon","IconButton","ValidatorForm","TextValidator","checkCode","addNewReagent","updateReagent","MuiPickersUtilsProvider","DateTimePicker","Autocomplete","LocalConstants","DateFnsUtils","Draggable","Paper","toast","TabsReagent","configure","PaperComponent","props","ReagentEditorDialog","state","name","code","description","registrationNumber","dateOfIssue","Date","expirationDate","activeIngredients","dosageForms","packing","registeredFacilityName","productionFacilityName","healthDepartmentDirectory","testType","isActive","isView","hasTestType","saveRegant","id","item","t","setState","then","result","data","warning","success","response","status","listMethod","value","EQAResultReportTypeMethod","Elisa","FastTest","ECL","SERODIA","open","handleClose","list","handleOKEditClose","i18n","cursor","position","right","top","overflowY","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  DialogActions,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  DialogTitle,\r\n  TextField,\r\n  DialogContent,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText, Icon, IconButton\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { checkCode, addNewReagent, updateReagent } from \"./ReagentService\";\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocalConstants from \"./Constants\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../styles/views/_style.scss';\r\nimport TabsReagent from \"./Tabs\";\r\n\r\ntoast.configure();\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass ReagentEditorDialog extends Component {\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    registrationNumber: \"\",//Số đăng ký\r\n    dateOfIssue: new Date(), //Ngày cấp\r\n    expirationDate: new Date(), //Ngày hết hạn\r\n    activeIngredients: \"\", //Hoạt chất\r\n    dosageForms: \"\", //Dạng bào chế\r\n    packing: \"\", //Quy cách đóng gói\r\n    registeredFacilityName: \"\", //Tên cơ sở đăng ký\r\n    productionFacilityName: \"\", //Tên cơ sở sản xuất\r\n    healthDepartmentDirectory: true, //thuộc bộ y tế\r\n    testType: null, //Thuộc phương pháp xét nghiệm nào\r\n    isActive: false,\r\n    isView: false,\r\n    hasTestType: false\r\n  };\r\n\r\n  list() {\r\n    let listMethod = [\r\n      { value: LocalConstants.EQAResultReportTypeMethod.Elisa, name: \"Elisa\" },\r\n      { value: LocalConstants.EQAResultReportTypeMethod.FastTest, name: \"Test nhanh\" },\r\n      { value: LocalConstants.EQAResultReportTypeMethod.ECL, name: \"Điện hóa phát quang\" },\r\n      { value: LocalConstants.EQAResultReportTypeMethod.SERODIA, name: \"Serodia\" },\r\n    ]\r\n    this.setState({ listMethod: listMethod });\r\n  }\r\n  saveRegant = () => {\r\n    let { id, code, testType,item } = this.state;\r\n    let { t } = this.props;\r\n    if (item.testType == null) {\r\n      item[\"hasTestType\"]=true\r\n      this.setState({ item: item });\r\n    } else {\r\n      // this.setState({ isView: true });\r\n      checkCode(id, item.code).then((result) => {\r\n        //Nếu trả về true là code đã được sử dụng\r\n        if (result.data) {\r\n          toast.warning(t('mess_code'));\r\n          this.setState({ isView: false });\r\n        } else {\r\n          //Nếu trả về false là code chưa sử dụng có thể dùng\r\n          if (id) {\r\n            updateReagent({\r\n              ...this.state.item\r\n            }).then(() => {\r\n              toast.success(t('mess_edit'));\r\n              this.setState({ isView: false });\r\n            });\r\n          } else {\r\n            addNewReagent({\r\n              ...this.state.item\r\n            }).then((response) => {\r\n              if(response.data != null && response.status == 200){\r\n                this.state.item.id = response.data.id\r\n                this.setState({...this.state.item, isView: false})\r\n                toast.success(t('mess_add'));\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose, item } = this.props;\r\n    if(item == null){\r\n      item = {}\r\n    \r\n      item[\"dateOfIssue\"]= new Date()\r\n      item[\"expirationDate\"]= new Date()\r\n    }\r\n    item[\"hasTestType\"]= false\r\n    if(item != null && item.healthDepartmentDirectory == null){\r\n      item[\"healthDepartmentDirectory\"]= true\r\n    }\r\n \r\n    this.setState({item:item},()=>{\r\n      // console.log(this.state.item)\r\n    });\r\n    this.list();\r\n    \r\n    this.setState({\r\n      ...item\r\n  }); \r\n    // ValidatorForm.addValidationRule('checkMaxLength', (value) => {\r\n    //   if (value.length > 1020) {\r\n    //     return false;\r\n    //   }\r\n    //   return true;\r\n    // });\r\n\r\n    // ValidatorForm.addValidationRule('checkBox', (value) => {\r\n    //   if (this.state.healthDepartmentDirectory == true) {\r\n    //     if (value.length == 0) {\r\n    //       return false;\r\n    //     }\r\n    //   }\r\n    //   return true;\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      isView,\r\n      registrationNumber,//Số đăng ký\r\n      dateOfIssue, //Ngày cấp\r\n      expirationDate, //Ngày hết hạn\r\n      activeIngredients, //Hoạt chất\r\n      dosageForms, //Dạng bào chế\r\n      packing, //Quy cách đóng gói\r\n      registeredFacilityName, //Tên cơ sở đăng ký\r\n      productionFacilityName, //Tên cơ sở sản xuất\r\n      healthDepartmentDirectory,\r\n      testType,\r\n      listMethod,\r\n      description,\r\n      hasTestType\r\n    } = this.state;\r\n\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog open={open} PaperComponent={PaperComponent} maxWidth={'lg'} fullWidth={true}>\r\n      <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n      <span className=\"mb-20 styleColor\"> {(id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"ReagentTable.title\")} </span>\r\n      <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n      </DialogTitle>\r\n      <ValidatorForm ref=\"form\" style={{\r\n          overflowY: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n      }}>\r\n          <DialogContent dividers>\r\n              <Grid item  xs={12}>\r\n                  <TabsReagent \r\n                      t={t} i18n={i18n} \r\n                      item={this.state.item} \r\n                  />\r\n              </Grid>\r\n          </DialogContent>\r\n              \r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n              <Button \r\n                  variant=\"contained\" \r\n                  className=\"mr-16\" \r\n                  color=\"secondary\" \r\n                  type=\"button\" onClick={() => handleClose()}> {t('Cancel')}</Button>\r\n              <Button \r\n                  disabled = {isView}\r\n                  onClick={this.saveRegant}\r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  className=\" mr-16 align-bottom\" \r\n                  type=\"submit\">\r\n                  {t('Save')}\r\n              </Button>\r\n          </DialogActions>\r\n      </ValidatorForm>\r\n  </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReagentEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}