{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\TestMethod\\\\TestMethod.jsx\";\nimport { Grid, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { deleteItem, getItemById, searchByPage } from \"./TestMethodService\";\nimport TestMethodEditorDialog from \"./TestMethodEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Helmet } from 'react-helmet';\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nvar TestMethod = /*#__PURE__*/function (_React$Component) {\n  _inherits(TestMethod, _React$Component);\n\n  var _super = _createSuper(TestMethod);\n\n  function TestMethod(props) {\n    var _this;\n\n    _classCallCheck(this, TestMethod);\n\n    _this = _super.call(this, props); //this.state = {keyword: ''};\n\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      //selectedItems:[],\n      keyword: ''\n    };\n\n    _this.handleTextSearchChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.setPage(0);\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.keyword;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      deleteItem(_this.state.id).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      //alert(this.data.length);\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TestMethod, [{\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      this.setPage(0);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"handleDeleteList\",\n    value: function () {\n      var _handleDeleteList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(list) {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < list.length)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return deleteItem(list[i].id);\n\n              case 4:\n                i++;\n                _context.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function handleDeleteList(_x) {\n        return _handleDeleteList.apply(this, arguments);\n      }\n\n      return handleDeleteList;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var columns = [{\n        title: t(\"Code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"Name\"),\n        field: \"name\",\n        width: \"150\"\n      }, {\n        title: t(\"Description\"),\n        field: \"description\",\n        width: \"250\"\n      }, // { title: t(\"EQARound.title\"), field: \"eqaRound.name\", align: \"left\", width: \"150\" },\n      {\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref2) {\n                  var data = _ref2.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this2.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this2.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, t(\"TestMethod.title\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"category\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t(\"TestMethod.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this2.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }, t('Add')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenConfirmationDeleteAllDialog: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, t('Delete')), this.state.shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: this.state.shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t('DeleteAllConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(TextField, {\n        className: \"mb-16 mr-10 stylePlaceholder\",\n        placeholder: t('EnterSearch'),\n        type: \"text\",\n        value: this.state.keyword,\n        onChange: this.handleTextSearchChange,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.search();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, t('Search'))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, this.state.shouldOpenEditorDialog && /*#__PURE__*/React.createElement(TestMethodEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }), this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: this.state.itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: true,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows; // this.setState({selectedItems:rows});\n        },\n        actions: [{\n          tooltip: 'Remove All Selected Users',\n          icon: 'delete',\n          onClick: function onClick(evt, data) {\n            _this2.handleDeleteAll(data);\n\n            alert('You want to delete ' + data.length + ' rows');\n          }\n        }],\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref3) {\n          var from = _ref3.from,\n              to = _ref3.to,\n              count = _ref3.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return TestMethod;\n}(React.Component);\n\nexport default TestMethod;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/TestMethod/TestMethod.jsx"],"names":["Grid","MuiThemeProvider","IconButton","Icon","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","deleteItem","getItemById","searchByPage","TestMethodEditorDialog","Breadcrumb","ConfirmationDialog","Helmet","MaterialButton","props","t","i18n","item","onSelect","TestMethod","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","keyword","handleTextSearchChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","setPage","updatePageData","searchObject","text","pageIndex","pageSize","then","content","setRowsPerPage","handleChangePage","newPage","handleOKEditClose","handleDelete","id","handleDialogClose","handleConfirmationResponse","handleEditItem","handleDeleteAll","handleDeleteList","handleTextChange","bind","list","i","length","columns","title","field","align","width","render","rowData","method","parent","alert","name","path","startDate","Date","endDate","search","row","rows","find","a","parentId","selection","actionsColumnIndex","paging","Toolbar","tooltip","icon","onClick","evt","body","emptyDataSourceMessage","from","to","count"],"mappings":";;;;;;;;;AAAA,SAASA,IAAT,EAAeC,gBAAf,EAAiCC,UAAjC,EAA6CC,IAA7C,EAAmDC,SAAnD,EAA8DC,MAA9D,EAAsEC,SAAtE,EAAiFC,SAAjF,EAA4FC,QAA5F,EAAsGC,QAAtG,EAAgHC,eAAhH,QAAuI,mBAAvI;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,IAAwBC,aAAxB,EAAuCC,IAAvC,EAA6CC,UAA7C,EAAyDC,YAAzD,QAA6E,gBAA7E;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,YAAlC,QAAsD,qBAAtD;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,SAASC,UAAT,EAAqBC,kBAArB,QAA+C,OAA/C;AACA,SAASC,MAAT,QAAuB,cAAvB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA,wBACTX,cAAc,EADL;AAAA,MACrBY,CADqB,mBACrBA,CADqB;AAAA,MAClBC,IADkB,mBAClBA,IADkB;;AAE7B,MAAMC,IAAI,GAAGH,KAAK,CAACG,IAAnB;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACI,QAAN,CAAeD,IAAf,EAAqB,CAArB,CAAN;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADK,eAIL,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMH,KAAK,CAACI,QAAN,CAAeD,IAAf,EAAqB,CAArB,CAAN;AAAA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAJK,CAAP;AAQD;;IACKE,U;;;;;AAaJ,sBAAYL,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN,EADiB,CAEjB;;AAFiB,UAZnBM,KAYmB,GAZX;AACNC,MAAAA,WAAW,EAAE,CADP;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,aAAa,EAAE,CAJT;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,sBAAsB,EAAE,KANlB;AAONC,MAAAA,4BAA4B,EAAE,KAPxB;AAQNC,MAAAA,qCAAqC,EAAE,KARjC;AASN;AACAC,MAAAA,OAAO,EAAE;AAVH,KAYW;;AAAA,UAUnBC,sBAVmB,GAUM,UAAAC,KAAK,EAAI;AAChC,YAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAAxB,OAAd,EAA+C,YAAY,CAC1D,CADD;AAED,KAbkB;;AAAA,UAenBC,wBAfmB,GAeQ,UAAAC,CAAC,EAAI;AAC9B,UAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;AACrB,cAAKC,OAAL,CAAa,CAAb;AACD;AACF,KAnBkB;;AAAA,UAiCnBC,cAjCmB,GAiCF,YAAM;AACrB,UAAIC,YAAY,GAAG,EAAnB;AACAA,MAAAA,YAAY,CAACC,IAAb,GAAoB,MAAKrB,KAAL,CAAWS,OAA/B;AACAW,MAAAA,YAAY,CAACE,SAAb,GAAyB,MAAKtB,KAAL,CAAWE,IAAX,GAAkB,CAA3C;AACAkB,MAAAA,YAAY,CAACG,QAAb,GAAwB,MAAKvB,KAAL,CAAWC,WAAnC;AACAb,MAAAA,YAAY,CAACgC,YAAD,EAAe,MAAKpB,KAAL,CAAWE,IAA1B,EAAgC,MAAKF,KAAL,CAAWC,WAA3C,CAAZ,CAAoEuB,IAApE,CAAyE,gBAAc;AAAA,YAAXrB,IAAW,QAAXA,IAAW;;AACrF,cAAKS,QAAL,CAAc;AAAEP,UAAAA,QAAQ,qBAAMF,IAAI,CAACsB,OAAX,CAAV;AAA+BrB,UAAAA,aAAa,EAAED,IAAI,CAACC;AAAnD,SAAd;AACD,OAFD;AAID,KA1CkB;;AAAA,UA4CnBc,OA5CmB,GA4CT,UAAAhB,IAAI,EAAI;AAChB,YAAKU,QAAL,CAAc;AAAEV,QAAAA;AAAF,OAAd,EAAwB,YAAY;AAClC,aAAKiB,cAAL;AACD,OAFD;AAGD,KAhDkB;;AAAA,UAkDnBO,cAlDmB,GAkDF,UAAAf,KAAK,EAAI;AACxB,YAAKC,QAAL,CAAc;AAAEX,QAAAA,WAAW,EAAEU,KAAK,CAACE,MAAN,CAAaC,KAA5B;AAAmCZ,QAAAA,IAAI,EAAE;AAAzC,OAAd,EAA4D,YAAY;AACtE,aAAKiB,cAAL;AACD,OAFD;AAGD,KAtDkB;;AAAA,UAwDnBQ,gBAxDmB,GAwDA,UAAChB,KAAD,EAAQiB,OAAR,EAAoB;AACrC,YAAKV,OAAL,CAAaU,OAAb;AACD,KA1DkB;;AAAA,UA4DnBC,iBA5DmB,GA4DC,YAAM;AACxB,YAAKjB,QAAL,CAAc;AACZN,QAAAA,sBAAsB,EAAE,KADZ;AAEZC,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;;AAIA,YAAKW,OAAL,CAAa,CAAb;AACD,KAlEkB;;AAAA,UAoEnBY,YApEmB,GAoEJ,UAAAC,EAAE,EAAI;AACnB,YAAKnB,QAAL,CAAc;AACZmB,QAAAA,EADY;AAEZxB,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KAzEkB;;AAAA,UA2EnByB,iBA3EmB,GA2EC,YAAM;AACxB,YAAKpB,QAAL,CAAc;AACZN,QAAAA,sBAAsB,EAAE,KADZ;AAEZC,QAAAA,4BAA4B,EAAE,KAFlB;AAGZC,QAAAA,qCAAqC,EAAE;AAH3B,OAAd;AAKD,KAjFkB;;AAAA,UAmFnBqB,iBAnFmB,GAmFC,YAAM;AACxB,YAAKjB,QAAL,CAAc;AACZN,QAAAA,sBAAsB,EAAE,KADZ;AAEZC,QAAAA,4BAA4B,EAAE,KAFlB;AAGZC,QAAAA,qCAAqC,EAAE;AAH3B,OAAd;;AAKA,YAAKU,OAAL,CAAa,CAAb;AACD,KA1FkB;;AAAA,UA4FnBY,YA5FmB,GA4FJ,UAAAC,EAAE,EAAI;AACnB,YAAKnB,QAAL,CAAc;AACZmB,QAAAA,EADY;AAEZxB,QAAAA,4BAA4B,EAAE;AAFlB,OAAd;AAID,KAjGkB;;AAAA,UAmGnB0B,0BAnGmB,GAmGU,YAAM;AACjC/C,MAAAA,UAAU,CAAC,MAAKc,KAAL,CAAW+B,EAAZ,CAAV,CAA0BP,IAA1B,CAA+B,YAAM;AACnC,cAAKL,cAAL;;AACA,cAAKa,iBAAL;AACD,OAHD;AAID,KAxGkB;;AAAA,UA0GnBE,cA1GmB,GA0GF,UAAArC,IAAI,EAAI;AACvB,YAAKe,QAAL,CAAc;AACZf,QAAAA,IAAI,EAAEA,IADM;AAEZS,QAAAA,sBAAsB,EAAE;AAFZ,OAAd;AAID,KA/GkB;;AAAA,UA0HnB6B,eA1HmB,GA0HD,UAACxB,KAAD,EAAW;AAC3B;AACA,YAAKyB,gBAAL,CAAsB,MAAKjC,IAA3B,EAAiCqB,IAAjC,CAAsC,YAAM;AAC1C,cAAKL,cAAL;;AACA,cAAKa,iBAAL;AACD,OAHD;AAKD,KAjIkB;;AAGjB,UAAKK,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BAAxB;AAHiB;AAIlB;;;;qCAEgB3B,K,EAAO;AACtB,WAAKC,QAAL,CAAc;AAAEE,QAAAA,KAAK,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACD;;;iCAaYH,K,EAAO;AAClB,WAAKC,QAAL,CAAc;AAAEE,QAAAA,KAAK,EAAEH,KAAK,CAACE,MAAN,CAAaC;AAAtB,OAAd;AACD;;;wCAEmB;AAClB,WAAKK,cAAL;AACD;;;6BAEQ;AACP,WAAKD,OAAL,CAAa,CAAb;AACD;;;wCAkFmB;AAClB,WAAKC,cAAL;AACD;;;;wGACsBoB,I;;;;;;AACZC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,GAAGD,IAAI,CAACE,M;;;;;;uBACjBvD,UAAU,CAACqD,IAAI,CAACC,CAAD,CAAJ,CAAQT,EAAT,C;;;AADeS,gBAAAA,CAAC,E;;;;;;;;;;;;;;;;;;;;6BAc3B;AAAA;;AAAA,wBACa,KAAK9C,KADlB;AAAA,UACCC,CADD,eACCA,CADD;AAAA,UACIC,IADJ,eACIA,IADJ;AAEP,UAAI8C,OAAO,GAAG,CACZ;AAAEC,QAAAA,KAAK,EAAEhD,CAAC,CAAC,MAAD,CAAV;AAAoBiD,QAAAA,KAAK,EAAE,MAA3B;AAAmCC,QAAAA,KAAK,EAAE,MAA1C;AAAkDC,QAAAA,KAAK,EAAE;AAAzD,OADY,EAEZ;AAAEH,QAAAA,KAAK,EAAEhD,CAAC,CAAC,MAAD,CAAV;AAAoBiD,QAAAA,KAAK,EAAE,MAA3B;AAAmCE,QAAAA,KAAK,EAAE;AAA1C,OAFY,EAGZ;AAAEH,QAAAA,KAAK,EAAEhD,CAAC,CAAC,aAAD,CAAV;AAA2BiD,QAAAA,KAAK,EAAE,aAAlC;AAAiDE,QAAAA,KAAK,EAAE;AAAxD,OAHY,EAIZ;AACA;AACEH,QAAAA,KAAK,EAAEhD,CAAC,CAAC,QAAD,CADV;AAEEiD,QAAAA,KAAK,EAAE,QAFT;AAGEC,QAAAA,KAAK,EAAE,MAHT;AAIEC,QAAAA,KAAK,EAAE,KAJT;AAKEC,QAAAA,MAAM,EAAE,gBAAAC,OAAO;AAAA,8BAAI,oBAAC,cAAD;AAAgB,YAAA,IAAI,EAAEA,OAAtB;AACjB,YAAA,QAAQ,EAAE,kBAACA,OAAD,EAAUC,MAAV,EAAqB;AAC7B,kBAAIA,MAAM,KAAK,CAAf,EAAkB;AAChB9D,gBAAAA,WAAW,CAAC6D,OAAO,CAACjB,EAAT,CAAX,CAAwBP,IAAxB,CAA6B,iBAAc;AAAA,sBAAXrB,IAAW,SAAXA,IAAW;;AACzC,sBAAIA,IAAI,CAAC+C,MAAL,KAAgB,IAApB,EAA0B;AACxB/C,oBAAAA,IAAI,CAAC+C,MAAL,GAAc,EAAd;AACD;;AACD,kBAAA,MAAI,CAACtC,QAAL,CAAc;AACZf,oBAAAA,IAAI,EAAEM,IADM;AAEZG,oBAAAA,sBAAsB,EAAE;AAFZ,mBAAd;AAID,iBARD;AASD,eAVD,MAUO,IAAI2C,MAAM,KAAK,CAAf,EAAkB;AACvB,gBAAA,MAAI,CAACnB,YAAL,CAAkBkB,OAAO,CAACjB,EAA1B;AACD,eAFM,MAEA;AACLoB,gBAAAA,KAAK,CAAC,wBAAwBH,OAAO,CAACjB,EAAjC,CAAL;AACD;AACF,aAjBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAJ;AAAA;AALjB,OALY,CAAd;AA+BA,0BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQpC,CAAC,CAAC,kBAAD,CAAT,SAAkCA,CAAC,CAAC,UAAD,CAAnC,CADF,CADF,eAIE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAE,CAAC;AAAEyD,UAAAA,IAAI,EAAEzD,CAAC,CAAC,UAAD,CAAT;AAAuB0D,UAAAA,IAAI,EAAE;AAA7B,SAAD,EAAuD;AAAED,UAAAA,IAAI,EAAEzD,CAAC,CAAC,kBAAD;AAAT,SAAvD,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,eAOE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACuC,cAAL,CAAoB;AAAEoB,YAAAA,SAAS,EAAE,IAAIC,IAAJ,EAAb;AAAyBC,YAAAA,OAAO,EAAE,IAAID,IAAJ;AAAlC,WAApB;AACD,SANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASG5D,CAAC,CAAC,KAAD,CATJ,CADF,eAYE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAC,WAAxC;AAAoD,QAAA,KAAK,EAAC,SAA1D;AACE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACiB,QAAL,CAAc;AAAEJ,YAAAA,qCAAqC,EAAE;AAAzC,WAAd,CAAN;AAAA,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGb,CAAC,CAAC,QAAD,CAFJ,CAZF,EAiBG,KAAKK,KAAL,CAAWQ,qCAAX,iBACC,oBAAC,kBAAD;AACE,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,qCADnB;AAEE,QAAA,oBAAoB,EAAE,KAAKwB,iBAF7B;AAGE,QAAA,UAAU,EAAE,KAAKG,eAHnB;AAIE,QAAA,IAAI,EAAExC,CAAC,CAAC,kBAAD,CAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBJ,eAyBE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,8BAArB;AAAoD,QAAA,WAAW,EAAEA,CAAC,CAAC,aAAD,CAAlE;AAAmF,QAAA,IAAI,EAAC,MAAxF;AAA+F,QAAA,KAAK,EAAE,KAAKK,KAAL,CAAWS,OAAjH;AAA0H,QAAA,QAAQ,EAAE,KAAKC,sBAAzI;AAAiK,QAAA,SAAS,EAAE,KAAKK,wBAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBF,eA0BE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAC,WAAxC;AAAoD,QAAA,KAAK,EAAC,SAA1D;AAAoE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAAC0C,MAAL,EAAN;AAAA,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmG9D,CAAC,CAAC,QAAD,CAApG,CA1BF,CADF,eA6BE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKK,KAAL,CAAWM,sBAAX,iBACC,oBAAC,sBAAD;AAAwB,QAAA,CAAC,EAAEX,CAA3B;AAA8B,QAAA,IAAI,EAAEC,IAApC;AACE,QAAA,WAAW,EAAE,KAAKoC,iBADpB;AAEE,QAAA,IAAI,EAAE,KAAKhC,KAAL,CAAWM,sBAFnB;AAGE,QAAA,iBAAiB,EAAE,KAAKuB,iBAH1B;AAIE,QAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWH,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAUG,KAAKG,KAAL,CAAWO,4BAAX,iBACC,oBAAC,kBAAD;AACE,QAAA,KAAK,EAAEZ,CAAC,CAAC,SAAD,CADV;AAEE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWO,4BAFnB;AAGE,QAAA,oBAAoB,EAAE,KAAKyB,iBAH7B;AAIE,QAAA,UAAU,EAAE,KAAKC,0BAJnB;AAKE,QAAA,IAAI,EAAEtC,CAAC,CAAC,eAAD,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXJ,CADF,eAqBE,oBAAC,aAAD;AACE,QAAA,KAAK,EAAEA,CAAC,CAAC,MAAD,CADV;AAEE,QAAA,IAAI,EAAE,KAAKK,KAAL,CAAWK,QAFnB;AAGE,QAAA,OAAO,EAAEqC,OAHX,CAIE;AAJF;AAKE,QAAA,eAAe,EAAE,yBAACgB,GAAD,EAAMC,IAAN,EAAe;AAC9B,cAAIpB,IAAI,GAAGoB,IAAI,CAACC,IAAL,CAAU,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC9B,EAAF,KAAS2B,GAAG,CAACI,QAAjB;AAAA,WAAX,CAAX;AACA,iBAAOvB,IAAP;AACD,SARH;AASE,QAAA,OAAO,EAAE;AACPwB,UAAAA,SAAS,EAAE,IADJ;AAEPC,UAAAA,kBAAkB,EAAE,CAAC,CAFd;AAGPC,UAAAA,MAAM,EAAE,KAHD;AAIPR,UAAAA,MAAM,EAAE;AAJD,SATX;AAeE,QAAA,UAAU,EAAE;AACVS,UAAAA,OAAO,EAAE,iBAAAxE,KAAK;AAAA,gCACZ,oBAAC,aAAD,oBAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADY;AAAA;AADJ,SAfd;AAoBE,QAAA,iBAAiB,EAAE,2BAACiE,IAAD,EAAU;AAC3B,UAAA,MAAI,CAACxD,IAAL,GAAYwD,IAAZ,CAD2B,CAE3B;AACD,SAvBH;AAwBE,QAAA,OAAO,EAAE,CACP;AACEQ,UAAAA,OAAO,EAAE,2BADX;AAEEC,UAAAA,IAAI,EAAE,QAFR;AAGEC,UAAAA,OAAO,EAAE,iBAACC,GAAD,EAAMnE,IAAN,EAAe;AACtB,YAAA,MAAI,CAACgC,eAAL,CAAqBhC,IAArB;;AACAgD,YAAAA,KAAK,CAAC,wBAAwBhD,IAAI,CAACsC,MAA7B,GAAsC,OAAvC,CAAL;AACD;AANH,SADO,CAxBX;AAkCE,QAAA,YAAY,EAAE;AACZ8B,UAAAA,IAAI,EAAE;AACJC,YAAAA,sBAAsB,YAAK7E,CAAC,CAC1B,+BAD0B,CAAN;AADlB;AADM,SAlChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,eA+DE,oBAAC,eAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,CAHtB;AAIE,QAAA,SAAS,EAAC,KAJZ;AAKE,QAAA,gBAAgB,EAAEA,CAAC,CAAC,uBAAD,CALrB;AAME,QAAA,kBAAkB,EAAG;AAAA,cAAG8E,IAAH,SAAGA,IAAH;AAAA,cAASC,EAAT,SAASA,EAAT;AAAA,cAAaC,KAAb,SAAaA,KAAb;AAAA,2BAA4BF,IAA5B,cAAoCC,EAApC,cAA0C/E,CAAC,CAAC,YAAD,CAA3C,cAA6DgF,KAAK,KAAK,CAAC,CAAX,GAAeA,KAAf,uBAAoCD,EAApC,CAA7D;AAAA,SANvB;AAOE,QAAA,KAAK,EAAE,KAAK1E,KAAL,CAAWI,aAPpB;AAQE,QAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWC,WAR1B;AASE,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,IATnB;AAUE,QAAA,mBAAmB,EAAE;AACnB,wBAAc;AADK,SAVvB;AAaE,QAAA,mBAAmB,EAAE;AACnB,wBAAc;AADK,SAbvB;AAgBE,QAAA,YAAY,EAAE,KAAKyB,gBAhBrB;AAiBE,QAAA,mBAAmB,EAAE,KAAKD,cAjB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/DF,CA7BF,CAPF,CADF;AA4HD;;;;EA7SsBnD,KAAK,CAACC,S;;AA+S/B,eAAeuB,UAAf","sourcesContent":["import { Grid, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { deleteItem, getItemById, searchByPage } from \"./TestMethodService\";\r\nimport TestMethodEditorDialog from \"./TestMethodEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Helmet } from 'react-helmet';\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item, 0)}>\r\n      <Icon color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\nclass TestMethod extends React.Component {\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    //selectedItems:[],\r\n    keyword: ''\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    //this.state = {keyword: ''};\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n  }\r\n\r\n  handleTextChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  handleTextSearchChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === 'Enter') {\r\n      this.setPage(0);\r\n    }\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  search() {\r\n    this.setPage(0);\r\n  }\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.text = this.state.keyword;\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    }\r\n    );\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    deleteItem(this.state.id).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose()\r\n    });\r\n  };\r\n\r\n  handleEditItem = item => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n  async handleDeleteList(list) {\r\n    for (var i = 0; i < list.length; i++) {\r\n      await deleteItem(list[i].id);\r\n    }\r\n  }\r\n\r\n  handleDeleteAll = (event) => {\r\n    //alert(this.data.length);\r\n    this.handleDeleteList(this.data).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n    }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let columns = [\r\n      { title: t(\"Code\"), field: \"code\", align: \"left\", width: \"150\" },\r\n      { title: t(\"Name\"), field: \"name\", width: \"150\" },\r\n      { title: t(\"Description\"), field: \"description\", width: \"250\" },\r\n      // { title: t(\"EQARound.title\"), field: \"eqaRound.name\", align: \"left\", width: \"150\" },\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.id).then(({ data }) => {\r\n                if (data.parent === null) {\r\n                  data.parent = {};\r\n                }\r\n                this.setState({\r\n                  item: data,\r\n                  shouldOpenEditorDialog: true\r\n                });\r\n              })\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <Helmet>\r\n          <title>{t(\"TestMethod.title\")} | {t(\"web_site\")}</title>\r\n        </Helmet>\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"category\"), path: \"/directory/apartment\" },{ name: t(\"TestMethod.title\") }]} />\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date() });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            <Button className=\"mb-16 mr-36\" variant=\"contained\" color=\"primary\"\r\n              onClick={() => this.setState({ shouldOpenConfirmationDeleteAllDialog: true })}>\r\n              {t('Delete')}\r\n            </Button>\r\n\r\n            {this.state.shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={this.state.shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )}\r\n            <TextField className=\"mb-16 mr-10 stylePlaceholder\" placeholder={t('EnterSearch')} type=\"text\" value={this.state.keyword} onChange={this.handleTextSearchChange} onKeyDown={this.handleKeyDownEnterSearch} />\r\n            <Button className=\"mb-16 mr-16\" variant=\"contained\" color=\"primary\" onClick={() => this.search()}>{t('Search')}</Button>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {this.state.shouldOpenEditorDialog && (\r\n                <TestMethodEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={this.state.shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={this.state.item}\r\n                />\r\n              )}\r\n\r\n              {this.state.shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={this.state.shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={this.state.itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              options={{\r\n                selection: true,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              actions={[\r\n                {\r\n                  tooltip: 'Remove All Selected Users',\r\n                  icon: 'delete',\r\n                  onClick: (evt, data) => {\r\n                    this.handleDeleteAll(data);\r\n                    alert('You want to delete ' + data.length + ' rows');\r\n                  }\r\n                },\r\n              ]}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={this.state.totalElements}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default TestMethod;"]},"metadata":{},"sourceType":"module"}