{"ast":null,"code":"// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  className: PropTypes.string,\n  circlesTotal: PropTypes.number,\n  endSize: PropTypes.number,\n  endTitle: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  height: PropTypes.number,\n  startSize: PropTypes.number,\n  startTitle: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  width: PropTypes.number\n};\nvar defaultProps = {\n  circlesTotal: 10,\n  className: '',\n  endSize: 20,\n  startSize: 2\n};\n\nfunction ContinuousSizeLegend(_ref) {\n  var startTitle = _ref.startTitle,\n      endTitle = _ref.endTitle,\n      startSize = _ref.startSize,\n      endSize = _ref.endSize,\n      circlesTotal = _ref.circlesTotal,\n      height = _ref.height,\n      width = _ref.width,\n      className = _ref.className;\n  var circles = [];\n  var step = (endSize - startSize) / (circlesTotal - 1);\n\n  for (var i = 0; i < circlesTotal; i++) {\n    var size = step * i + startSize;\n    circles.push(React.createElement('div', {\n      key: i,\n      className: 'rv-bubble',\n      style: {\n        width: size,\n        height: size,\n        borderRadius: size / 2\n      }\n    })); // Add the separator in order to justify the content (otherwise the tags\n    // will be stacked together without any margins around).\n\n    circles.push(' ');\n  }\n\n  return React.createElement('div', {\n    className: 'rv-continuous-size-legend ' + className,\n    style: {\n      width: width,\n      height: height\n    }\n  }, React.createElement('div', {\n    className: 'rv-bubbles',\n    style: {\n      height: endSize\n    }\n  }, circles, React.createElement('div', {\n    className: 'rv-spacer'\n  })), React.createElement('div', {\n    className: 'rv-legend-titles'\n  }, React.createElement('span', {\n    className: 'rv-legend-titles__left'\n  }, startTitle), React.createElement('span', {\n    className: 'rv-legend-titles__right'\n  }, endTitle)));\n}\n\nContinuousSizeLegend.displayName = 'ContinuousSizeLegend';\nContinuousSizeLegend.propTypes = propTypes;\nContinuousSizeLegend.defaultProps = defaultProps;\nexport default ContinuousSizeLegend;","map":null,"metadata":{},"sourceType":"module"}