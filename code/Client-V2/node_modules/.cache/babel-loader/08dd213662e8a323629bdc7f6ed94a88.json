{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\CheckPoint\\\\HealthOrgCheckPoint.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Grid, Icon, TableCell, TableBody, TableRow, TableHead, Paper, FormControl, MenuItem, Select, FormHelperText, InputLabel, Input, InputAdornment, TableContainer, Table, TablePagination, Button } from \"@material-ui/core\";\nimport shortid from \"shortid\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { searchByDto, getItemById, search as searchPlanning, getEQARoundsByPlanning, getListCheckScoresByRoundId, getListGroupCheckScoresByRoundId, exportToExcel, updateStatusSentResults } from \"./CheckPointService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { saveAs } from 'file-saver';\nimport { Link } from \"react-router-dom\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport CheckPointDialog from \"./CheckPointDialog\";\nimport { Helmet } from 'react-helmet';\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport { toast } from \"react-toastify\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3 //etc you get the idea\n\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"send\")));\n}\n\nvar HealthOrgCheckPoint = /*#__PURE__*/function (_Component) {\n  _inherits(HealthOrgCheckPoint, _Component);\n\n  var _super = _createSuper(HealthOrgCheckPoint);\n\n  function HealthOrgCheckPoint() {\n    var _this;\n\n    _classCallCheck(this, HealthOrgCheckPoint);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      qualificationList: [],\n      item: {},\n      roundId: '',\n      listYear: [],\n      listEQARound: [],\n      listPlanning: [],\n      currentYear: new Date().getFullYear(),\n      shouldOpenViewDetailDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      keyword: ''\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"PlanningId\") {\n        _this.getEQARoundsByPlanning(event.target.value);\n\n        return;\n      }\n\n      if (source === \"roundId\") {\n        _this.handleChangeEQARound(event.target.value);\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.sentResults = function () {\n      var t = _this.props.t;\n\n      if (_this.state.roundId == null || _this.state.roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      }\n\n      var healthOrg = \"00000000-0000-0000-0000-000000000000\";\n      updateStatusSentResults(healthOrg, _this.state.roundId).then(function (res) {\n        // window.location.reload();\n        toast.warn(t(\"Gửi thành công\"));\n\n        _this.updatePageData();\n      });\n    };\n\n    _this.sentResultsHealthOrg = function (idHealthOrg) {\n      var t = _this.props.t;\n\n      if (_this.state.roundId == null || _this.state.roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      }\n\n      updateStatusSentResults(idHealthOrg, _this.state.roundId).then(function (res) {\n        toast.success(t(\"Gửi thành công\"));\n\n        _this.updatePageData();\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.clearKeyword = function () {\n      _this.search();\n\n      _this.setState({\n        keyword: ''\n      }, function () {});\n    };\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.isCheckPoint = true;\n      searchObject.text = _this.state.keyword;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchObject.roundId = _this.state.roundId;\n      searchByDto(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleChangeEQARound = function (eQARoundIdSelected) {\n      if (eQARoundIdSelected != null && eQARoundIdSelected != '') {\n        getListGroupCheckScoresByRoundId(eQARoundIdSelected).then(function (res) {\n          _this.setState({\n            listError: res.data\n          });\n        });\n        getListCheckScoresByRoundId(eQARoundIdSelected).then(function (res) {\n          _this.setState({\n            listResults: res.data\n          }, function () {// console.log(res.data)\n          });\n        });\n\n        _this.setState({\n          roundId: eQARoundIdSelected,\n          itemList: []\n        }, function () {\n          this.search();\n        });\n      }\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenViewDetailDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenViewDetailDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteResultsOfTheUnits = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditResultsOfTheUnits = function (item) {\n      getItemById(item.id).then(function (result) {\n        _this.setState({\n          item: result.data,\n          shouldOpenViewDetailDialog: true\n        });\n      });\n    };\n\n    _this.getEQARoundsByPlanning = function (PlanningId) {\n      _this.setState({\n        PlanningId: PlanningId,\n        listEQARound: [],\n        itemList: []\n      }, function () {\n        var _this2 = this;\n\n        getEQARoundsByPlanning(PlanningId).then(function (_ref2) {\n          var data = _ref2.data;\n\n          if (data != null && data.length > 0) {\n            _this2.setState({\n              listEQARound: _toConsumableArray(data),\n              roundId: data[0].id\n            }, function () {\n              this.handleChangeEQARound(data[0].id);\n            });\n          }\n        });\n      });\n    };\n\n    _this.exportToExcel = function () {\n      var t = _this.props.t;\n      var searchObject = {};\n      searchObject.isCheckPoint = true;\n      searchObject.text = _this.state.keyword;\n      searchObject.pageIndex = 1;\n      searchObject.pageSize = 100000;\n      searchObject.roundId = _this.state.roundId;\n\n      if (_this.state.roundId == null || _this.state.roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      }\n\n      exportToExcel(searchObject).then(function (res) {\n        toast.info(_this.props.t('general.successExport'));\n        var blob = new Blob([res.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n        saveAs(blob, \"SummaryResults.xlsx\");\n      }).catch(function (err) {// console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(HealthOrgCheckPoint, [{\n    key: \"search\",\n    value: function search() {\n      this.setState({\n        page: 0\n      }, function () {\n        var _this3 = this;\n\n        var searchObject = {};\n        searchObject.isCheckPoint = true;\n        searchObject.text = this.state.keyword;\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n        searchObject.roundId = this.state.roundId;\n        searchByDto(searchObject, this.state.page, this.state.rowsPerPage).then(function (_ref3) {\n          var data = _ref3.data;\n\n          _this3.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      var searchObject = {\n        pageIndex: 1,\n        pageSize: 100\n      };\n      searchPlanning(searchObject).then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this4.setState({\n          listPlanning: _toConsumableArray(data.content)\n        });\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this5 = this;\n\n      getCurrentUser().then(function (res) {\n        var checkRoleAdmin = false;\n        res.data.roles.forEach(function (el) {\n          if (el.name == \"ROLE_ADMIN\" || el.authority == \"ROLE_ADMIN\") {\n            checkRoleAdmin = true;\n          }\n\n          if (el.name == \"ROLE_HEALTH_ORG\" || el.authority == \"ROLE_HEALTH_ORG\") {\n            _this5.setState({\n              statusSentResults: true\n            }, function () {\n              _this5.search();\n            });\n          } else {\n            _this5.search();\n          }\n\n          if (checkRoleAdmin) {\n            _this5.setState({\n              isRoleAdmin: true,\n              isView: true\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"renderRowHead\",\n    value: function renderRowHead() {\n      var _this6 = this;\n\n      var _this$props = this.props,\n          onSelectEvent = _this$props.onSelectEvent,\n          handleDelete = _this$props.handleDelete,\n          handleClick = _this$props.handleClick;\n      var listError = this.state.listError;\n      var titleCell = null;\n\n      if (listError != null && listError.length > 0) {\n        listError.forEach(function (item) {\n          if (!titleCell) {\n            titleCell = /*#__PURE__*/React.createElement(TableCell, {\n              key: shortid.generate(),\n              className: \"px-0\",\n              align: \"left\",\n              __self: _this6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 23\n              }\n            }, item.errorName);\n          } else {\n            titleCell += /*#__PURE__*/React.createElement(TableCell, {\n              key: shortid.generate(),\n              className: \"px-0\",\n              align: \"left\",\n              __self: _this6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 24\n              }\n            }, item.errorName);\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }, listError.map(function (item, index) {\n        return _this6.renderColHead(item);\n      }));\n    }\n  }, {\n    key: \"renderColHead\",\n    value: function renderColHead(item) {\n      if (item.reagent != null) {\n        item.title = item.errorName;\n      } else {\n        item.title = item.errorName;\n      } //item.title = this.getTypeMethodName(item.reagent.name,item.typeMethod);\n\n\n      return this.renderHeadCells(item);\n    }\n  }, {\n    key: \"renderHeadCells\",\n    value: function renderHeadCells(item) {\n      if (item == null) {\n        item = {};\n      }\n\n      var titleCell = /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff'\n        },\n        key: shortid.generate(),\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }\n      }, item.title);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 7\n        }\n      }, titleCell);\n    }\n  }, {\n    key: \"renderResultDetails\",\n    value: function renderResultDetails(item, index) {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }\n      }, this.renderHealthOrg(item, index)));\n    }\n  }, {\n    key: \"renderHealthOrg\",\n    value: function renderHealthOrg(item, index) {\n      var _this7 = this;\n\n      var isRoleAdmin = this.state.isRoleAdmin;\n      var sttCell = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 19\n        }\n      }, index + 1);\n      var titleCell = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, item ? item.healthOrg.code : '');\n      var _this$state = this.state,\n          listResults = _this$state.listResults,\n          listError = _this$state.listError;\n      var cellContentByMethod = [];\n      var listData = []; // let note =\"\"\n\n      var result;\n      var statusSent;\n      var isCheck = false;\n\n      if (item.point >= 80) {\n        result = \"Đạt\";\n      } else {\n        result = \"Không đạt\";\n      }\n\n      if (item.statusSentResults == true) {\n        statusSent = \"Đã gửi\";\n      } else {\n        statusSent = \"Chưa gửi\";\n      }\n\n      listResults.forEach(function (result) {\n        var content = null;\n\n        if (result.healthOrgRound != null && item.id == result.healthOrgRound.id) {\n          content = result; // note += result.note +\"\\n\"\n\n          cellContentByMethod.push(content);\n        }\n      });\n\n      if (cellContentByMethod.length < listError.length) {\n        listError.forEach(function (e) {\n          var p = null;\n          cellContentByMethod.forEach(function (el) {\n            if (e.errorName == el.errorName) {\n              p = el;\n            }\n          });\n          listData.push(p);\n        });\n      }\n\n      if (cellContentByMethod.length == listError.length) {\n        listData = cellContentByMethod;\n      } // let titleCellNote = <TableCell className=\"px-0\" align=\"center\">\n      // { note}\n      // </TableCell>\n\n\n      var titleCellPoint = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 26\n        }\n      }, item.point);\n      var titleCellResult = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 27\n        }\n      }, result);\n      var titleCellStatusSent = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 31\n        }\n      }, statusSent);\n      var sentResults = /*#__PURE__*/React.createElement(TableCell, {\n        className: \"px-0\",\n        align: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(MaterialButton, {\n        item: item,\n        onSelect: function onSelect(item, method) {\n          if (method === 0) {\n            var _item$healthOrg;\n\n            // this.setState({healthOrg})\n            _this7.sentResultsHealthOrg(item === null || item === void 0 ? void 0 : (_item$healthOrg = item.healthOrg) === null || _item$healthOrg === void 0 ? void 0 : _item$healthOrg.id);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }\n      }));\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 7\n        }\n      }, sttCell, titleCell, listData.map(function (cell, index) {\n        return _this7.renderCells(cell);\n      }), titleCellPoint, titleCellResult, this.state.isRoleAdmin ? titleCellStatusSent : null, this.state.isRoleAdmin ? sentResults : null);\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells(item) {\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n\n      if (item == null) {\n        item = {};\n      }\n\n      var contentCell = /*#__PURE__*/React.createElement(TableCell, {\n        key: shortid.generate(),\n        className: \"px-0\",\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 23\n        }\n      }, item.errorNumber ? /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }\n      }, item.errorNumber) : \"\");\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 7\n        }\n      }, contentCell);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n\n      var _this$props3 = this.props,\n          t = _this$props3.t,\n          i18n = _this$props3.i18n;\n      var _this$state2 = this.state,\n          hasErrorCurrentYear = _this$state2.hasErrorCurrentYear,\n          hasErrorRound = _this$state2.hasErrorRound,\n          listPlanning = _this$state2.listPlanning,\n          rowsPerPage = _this$state2.rowsPerPage,\n          page = _this$state2.page,\n          totalElements = _this$state2.totalElements,\n          itemList = _this$state2.itemList,\n          listEQARound = _this$state2.listEQARound,\n          PlanningId = _this$state2.PlanningId,\n          roundId = _this$state2.roundId,\n          keyword = _this$state2.keyword,\n          item = _this$state2.item,\n          listError = _this$state2.listError,\n          listResults = _this$state2.listResults,\n          isRoleAdmin = _this$state2.isRoleAdmin;\n      var title = t('ResultsOfTheUnits.list_unit') + \" (\" + totalElements + \" \" + t('ResultsOfTheUnits.unit') + \")\";\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 9\n        }\n      }, this.state.isRoleAdmin && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.exportToExcel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }\n      }, t('general.exportToExcel')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 ml-8 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.sentResults,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 13\n        }\n      }, t('Gửi điểm'))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        error: hasErrorCurrentYear,\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"planning-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 15\n        }\n      }, t('ResultsOfTheUnits.eqaPlanning')), /*#__PURE__*/React.createElement(Select, {\n        label: t('ResultsOfTheUnits.eqaPlanning'),\n        value: PlanningId,\n        onChange: function onChange(PlanningId) {\n          return _this8.handleChange(PlanningId, 'PlanningId');\n        },\n        required: true,\n        inputProps: {\n          name: \"planning\",\n          id: \"planning-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 15\n        }\n      }, listPlanning.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 26\n          }\n        }, item.name);\n      })), hasErrorCurrentYear && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 39\n        }\n      }, t(\"general.errorMessages_required\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        error: hasErrorRound,\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"round-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }\n      }, t('ResultsOfTheUnits.round')), /*#__PURE__*/React.createElement(Select, {\n        label: t('ResultsOfTheUnits.round'),\n        value: roundId,\n        onChange: function onChange(roundId) {\n          return _this8.handleChange(roundId, 'roundId');\n        },\n        required: true,\n        inputProps: {\n          name: \"round\",\n          id: \"round-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }\n      }, listEQARound.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 26\n          }\n        }, item.code);\n      })), hasErrorRound && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 33\n        }\n      }, t(\"general.errorMessages_required\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"standard-adornment-amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        label: t('EnterSearch'),\n        type: \"text\",\n        name: \"keyword\",\n        className: \"mt-8 stylePlaceholder\",\n        id: \"standard-adornment-amount\",\n        value: keyword,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        onChange: this.handleTextChange,\n        placeholder: t(\"general.enterSearch\"),\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this8.search(keyword);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 15\n        }\n      }))), listResults && listResults.length > 0 && this.state.itemList && this.state.itemList.length != 0 && /*#__PURE__*/React.createElement(Paper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 114\n        }\n      }, /*#__PURE__*/React.createElement(TableContainer, {\n        style: {\n          maxHeight: 1000\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff'\n        },\n        rowSpan: 2,\n        width: \"50px\",\n        align: \"center\",\n        className: \"p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 21\n        }\n      }, t('ResultsOfTheUnits.STT')), /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff'\n        },\n        rowSpan: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 21\n        }\n      }, t('ResultsOfUnitsByReagentGroup.countHealthOrg')), listError && this.renderRowHead(), /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff'\n        },\n        rowSpan: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 21\n        }\n      }, t('checkPoint.totalPoints')), /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff',\n          textAlign: \"center\"\n        },\n        rowSpan: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 21\n        }\n      }, t('checkPoint.conclude')), this.state.isRoleAdmin && /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff',\n          textAlign: \"center\"\n        },\n        rowSpan: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 48\n        }\n      }, t('Trạng thái')), this.state.isRoleAdmin && /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          backgroundColor: '#358600',\n          color: '#fff',\n          textAlign: \"center\"\n        },\n        rowSpan: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 48\n        }\n      }, t('Gửi điểm')))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 17\n        }\n      }, listResults && itemList && itemList.map(function (item, index) {\n        return _this8.renderResultDetails(item, index);\n      })))), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref5) {\n          var from = _ref5.from,\n              to = _ref5.to,\n              count = _ref5.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return HealthOrgCheckPoint;\n}(Component);\n\nexport default HealthOrgCheckPoint;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/CheckPoint/HealthOrgCheckPoint.jsx"],"names":["React","Component","IconButton","Grid","Icon","TableCell","TableBody","TableRow","TableHead","Paper","FormControl","MenuItem","Select","FormHelperText","InputLabel","Input","InputAdornment","TableContainer","Table","TablePagination","Button","shortid","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","searchByDto","getItemById","search","searchPlanning","getEQARoundsByPlanning","getListCheckScoresByRoundId","getListGroupCheckScoresByRoundId","exportToExcel","updateStatusSentResults","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","SearchIcon","CloseIcon","saveAs","Link","VisibilityIcon","CheckPointDialog","Helmet","getCurrentUser","getListHealthOrgByUser","toast","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","HealthOrgCheckPoint","state","rowsPerPage","page","qualificationList","roundId","listYear","listEQARound","listPlanning","currentYear","Date","getFullYear","shouldOpenViewDetailDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","keyword","numSelected","rowCount","handleChange","event","source","persist","target","value","handleChangeEQARound","setState","name","sentResults","warn","healthOrg","then","res","updatePageData","sentResultsHealthOrg","idHealthOrg","success","setPage","clearKeyword","handleTextChange","handleKeyDownEnterSearch","e","key","setRowsPerPage","searchObject","isCheckPoint","text","pageIndex","pageSize","data","itemList","content","handleChangePage","newPage","eQARoundIdSelected","listError","listResults","handleDownload","blob","Blob","type","handleDialogClose","handleOKEditClose","handleDeleteResultsOfTheUnits","id","handleEditResultsOfTheUnits","result","PlanningId","length","info","catch","err","checkRoleAdmin","roles","forEach","el","authority","statusSentResults","isRoleAdmin","isView","onSelectEvent","handleDelete","handleClick","titleCell","generate","errorName","map","index","renderColHead","reagent","title","renderHeadCells","backgroundColor","color","renderHealthOrg","sttCell","code","cellContentByMethod","listData","statusSent","isCheck","point","healthOrgRound","push","p","titleCellPoint","titleCellResult","titleCellStatusSent","method","cell","renderCells","contentCell","errorNumber","hasErrorCurrentYear","hasErrorRound","position","top","right","maxHeight","renderRowHead","textAlign","renderResultDetails","from","to","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Icon,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  Paper,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  FormHelperText,\r\n  InputLabel,\r\n  Input,\r\n  InputAdornment,\r\n  TableContainer,\r\n  Table,\r\n  TablePagination,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport shortid from \"shortid\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { searchByDto, getItemById, search as searchPlanning, getEQARoundsByPlanning, getListCheckScoresByRoundId, getListGroupCheckScoresByRoundId, exportToExcel, updateStatusSentResults } from \"./CheckPointService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { saveAs } from 'file-saver';\r\nimport { Link } from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport CheckPointDialog from \"./CheckPointDialog\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\"\r\nimport { toast } from \"react-toastify\";\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit: 3\r\n  //etc you get the idea\r\n});\r\nfunction MaterialButton(props) {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item, 0)}>\r\n      <Icon color=\"primary\">send</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\n\r\nclass HealthOrgCheckPoint extends Component {\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    qualificationList: [],\r\n    item: {},\r\n    roundId: '',\r\n    listYear: [],\r\n    listEQARound: [],\r\n    listPlanning: [],\r\n    currentYear: new Date().getFullYear(),\r\n    shouldOpenViewDetailDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    keyword: ''\r\n  };\r\n  numSelected = 0;\r\n  rowCount = 0;\r\n\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"PlanningId\") {\r\n      this.getEQARoundsByPlanning(event.target.value);\r\n      return;\r\n    }\r\n    if (source === \"roundId\") {\r\n      this.handleChangeEQARound(event.target.value);\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  sentResults = () => {\r\n    let { t } = this.props;\r\n    if (this.state.roundId == null || this.state.roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    }\r\n    let healthOrg = \"00000000-0000-0000-0000-000000000000\";\r\n    updateStatusSentResults(healthOrg, this.state.roundId).then(res => {\r\n      // window.location.reload();\r\n      toast.warn(t(\"Gửi thành công\"));\r\n      this.updatePageData();\r\n    })\r\n  }\r\n\r\n  sentResultsHealthOrg = (idHealthOrg) => {\r\n    let { t } = this.props;\r\n    if (this.state.roundId == null || this.state.roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    }\r\n\r\n    updateStatusSentResults(idHealthOrg, this.state.roundId).then(res => {\r\n      toast.success(t(\"Gửi thành công\"))\r\n      this.updatePageData();\r\n    })\r\n  }\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  clearKeyword = () => {\r\n    this.search()\r\n    this.setState({ keyword: '' }, function () {\r\n    });\r\n  };\r\n\r\n  handleTextChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    });\r\n  };\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === 'Enter') {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.isCheckPoint = true\r\n    searchObject.text = this.state.keyword;\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchObject.roundId = this.state.roundId;\r\n    searchByDto(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n  };\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleChangeEQARound = (eQARoundIdSelected) => {\r\n    if (eQARoundIdSelected != null && eQARoundIdSelected != '') {\r\n      getListGroupCheckScoresByRoundId(eQARoundIdSelected).then(res => {\r\n        this.setState({ listError: res.data });\r\n      })\r\n      getListCheckScoresByRoundId(eQARoundIdSelected).then(res => {\r\n        this.setState({ listResults: res.data }, () => {\r\n          // console.log(res.data)\r\n        });\r\n      })\r\n      this.setState({ roundId: eQARoundIdSelected, itemList: [] }, function () {\r\n        this.search();\r\n      });\r\n    }\r\n  };\r\n\r\n  search() {\r\n    this.setState({ page: 0 }, function () {\r\n      var searchObject = {};\r\n      searchObject.isCheckPoint = true\r\n      searchObject.text = this.state.keyword;\r\n      searchObject.pageIndex = this.state.page + 1;\r\n      searchObject.pageSize = this.state.rowsPerPage;\r\n      searchObject.roundId = this.state.roundId;\r\n      searchByDto(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n        this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  handleDownload = () => {\r\n    var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, \"hello world.txt\");\r\n  }\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenViewDetailDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenViewDetailDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteResultsOfTheUnits = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleEditResultsOfTheUnits = item => {\r\n    getItemById(item.id).then((result) => {\r\n      this.setState({\r\n        item: result.data,\r\n        shouldOpenViewDetailDialog: true\r\n      });\r\n    });\r\n  };\r\n\r\n  getEQARoundsByPlanning = PlanningId => {\r\n    this.setState({ PlanningId: PlanningId, listEQARound: [], itemList: [] }, function () {\r\n      getEQARoundsByPlanning(PlanningId).then(({ data }) => {\r\n        if (data != null && data.length > 0) {\r\n          this.setState({ listEQARound: [...data], roundId: data[0].id }, function () {\r\n            this.handleChangeEQARound(data[0].id);\r\n          });\r\n        }\r\n      });\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    var searchObject = { pageIndex: 1, pageSize: 100 };\r\n    searchPlanning(searchObject).then(({ data }) => {\r\n      this.setState({ listPlanning: [...data.content] });\r\n    });\r\n  }\r\n\r\n  componentWillMount() {\r\n    getCurrentUser().then(res => {\r\n      let checkRoleAdmin = false\r\n      res.data.roles.forEach(el => {\r\n        if (el.name == \"ROLE_ADMIN\" || el.authority == \"ROLE_ADMIN\") {\r\n          checkRoleAdmin = true\r\n        }\r\n        if (el.name == \"ROLE_HEALTH_ORG\" || el.authority == \"ROLE_HEALTH_ORG\") {\r\n          this.setState({ statusSentResults: true }, () => {\r\n            this.search();\r\n          })\r\n        } else {\r\n          this.search();\r\n        }\r\n        if (checkRoleAdmin) {\r\n          this.setState({ isRoleAdmin: true, isView: true })\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  renderRowHead() {\r\n    let { onSelectEvent, handleDelete, handleClick } = this.props;\r\n    let { listError } = this.state;\r\n    let titleCell = null;\r\n    if (listError != null && listError.length > 0) {\r\n      listError.forEach(item => {\r\n        if (!titleCell) {\r\n          titleCell = <TableCell key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n            {item.errorName}\r\n          </TableCell>\r\n        } else {\r\n          titleCell += <TableCell key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n            {item.errorName}\r\n          </TableCell>\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {listError.map((item, index) => this.renderColHead(item))}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderColHead(item) {\r\n    if (item.reagent != null) {\r\n      item.title = item.errorName;\r\n    } else {\r\n      item.title = item.errorName;\r\n    }\r\n    //item.title = this.getTypeMethodName(item.reagent.name,item.typeMethod);\r\n    return (\r\n      this.renderHeadCells(item)\r\n    )\r\n  }\r\n  renderHeadCells(item) {\r\n    if (item == null) {\r\n      item = {};\r\n    }\r\n    let titleCell = <TableCell style={{\r\n      backgroundColor: '#358600',\r\n      color: '#fff',\r\n    }}\r\n      key={shortid.generate()}\r\n      className=\"px-0\" align=\"left\" >\r\n      {item.title}\r\n    </TableCell>\r\n    return (\r\n      <React.Fragment>\r\n        {titleCell}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderResultDetails(item, index) {\r\n    return (\r\n      <React.Fragment>\r\n        <TableRow>\r\n          {this.renderHealthOrg(item, index)}\r\n        </TableRow>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  renderHealthOrg(item, index) {\r\n    let { isRoleAdmin } = this.state;\r\n\r\n    let sttCell = <TableCell className=\"px-0\" align=\"center\">\r\n      {index + 1}\r\n    </TableCell>\r\n    let titleCell = <TableCell className=\"px-0\" align=\"left\">\r\n      {item ? item.healthOrg.code : ''}\r\n    </TableCell>\r\n\r\n    let { listResults, listError } = this.state;\r\n    let cellContentByMethod = [];\r\n    let listData = []\r\n    // let note =\"\"\r\n    let result;\r\n    let statusSent;\r\n    let isCheck = false\r\n    if (item.point >= 80) {\r\n      result = \"Đạt\"\r\n    } else {\r\n      result = \"Không đạt\"\r\n    }\r\n\r\n    if (item.statusSentResults == true) {\r\n      statusSent = \"Đã gửi\"\r\n    } else {\r\n      statusSent = \"Chưa gửi\"\r\n    }\r\n\r\n    listResults.forEach(result => {\r\n      let content = null;\r\n      if (result.healthOrgRound != null && item.id == result.healthOrgRound.id) {\r\n        content = result\r\n        // note += result.note +\"\\n\"\r\n        cellContentByMethod.push(content);\r\n\r\n      }\r\n\r\n    });\r\n\r\n    if (cellContentByMethod.length < listError.length) {\r\n      listError.forEach(e => {\r\n        let p = null;\r\n        cellContentByMethod.forEach(el => {\r\n          if (e.errorName == el.errorName) {\r\n            p = el\r\n          }\r\n\r\n        })\r\n        listData.push(p)\r\n      })\r\n    }\r\n    if (cellContentByMethod.length == listError.length) {\r\n      listData = cellContentByMethod\r\n    }\r\n    // let titleCellNote = <TableCell className=\"px-0\" align=\"center\">\r\n    // { note}\r\n    // </TableCell>\r\n    let titleCellPoint = <TableCell className=\"px-0\" align=\"center\">\r\n      {item.point}\r\n    </TableCell>\r\n    let titleCellResult = <TableCell className=\"px-0\" align=\"center\">\r\n      {result}\r\n    </TableCell>\r\n    let titleCellStatusSent = <TableCell className=\"px-0\" align=\"center\">\r\n      {statusSent}\r\n    </TableCell>\r\n    let sentResults =\r\n      <TableCell className=\"px-0\" align=\"center\">\r\n        <MaterialButton item={item} onSelect={(item, method) => {\r\n          if (method === 0) {\r\n            // this.setState({healthOrg})\r\n            this.sentResultsHealthOrg(item?.healthOrg?.id)\r\n          }\r\n        }} />\r\n\r\n      </TableCell>\r\n    return (\r\n      <React.Fragment>\r\n        {sttCell}\r\n        {titleCell}\r\n        {listData.map((cell, index) => this.renderCells(cell))}\r\n        {titleCellPoint}\r\n        {titleCellResult}\r\n        {this.state.isRoleAdmin ? titleCellStatusSent : null}\r\n        {this.state.isRoleAdmin ? sentResults : null}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  renderCells(item) {\r\n    let { t, i18n } = this.props;\r\n    if (item == null) {\r\n      item = {};\r\n    }\r\n    let contentCell = <TableCell key={shortid.generate()} className=\"px-0\" align=\"left\">\r\n      {\r\n        item.errorNumber ? (\r\n          <small >\r\n\r\n            {item.errorNumber}\r\n\r\n          </small>\r\n        ) : \"\"\r\n      }\r\n    </TableCell>\r\n    return (\r\n      <React.Fragment>\r\n        {contentCell}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n  exportToExcel = () => {\r\n    const { t } = this.props;\r\n    let searchObject = {}\r\n    searchObject.isCheckPoint = true\r\n    searchObject.text = this.state.keyword;\r\n    searchObject.pageIndex = 1;\r\n    searchObject.pageSize = 100000;\r\n    searchObject.roundId = this.state.roundId;\r\n    if (this.state.roundId == null || this.state.roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    }\r\n    exportToExcel(searchObject)\r\n      .then((res) => {\r\n        toast.info(this.props.t('general.successExport'));\r\n        let blob = new Blob([res.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n        });\r\n        saveAs(blob, \"SummaryResults.xlsx\");\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n  }\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      hasErrorCurrentYear,\r\n      hasErrorRound,\r\n      listPlanning,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      listEQARound,\r\n      PlanningId,\r\n      roundId,\r\n      keyword,\r\n      item,\r\n      listError,\r\n      listResults, isRoleAdmin,\r\n    } = this.state;\r\n\r\n    let title = t('ResultsOfTheUnits.list_unit') + \" (\" + totalElements + \" \" + t('ResultsOfTheUnits.unit') + \")\";\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"\">\r\n        {/* <Helmet>\r\n                    <title>{t(\"ResultsOfTheUnits.title\")} | {t(\"web_site\")}</title>\r\n                </Helmet>\r\n                <div className=\"mb-sm-30\">\r\n                    <Breadcrumb routeSegments={[{ name: t(\"ReportResult.title\"), path: \"/directory/apartment\" },{ name: t('ResultsOfTheUnits.title') }]} />\r\n                </div> */}\r\n\r\n        <Grid container spacing={3}>\r\n          {this.state.isRoleAdmin && (<Grid item lg={3} md={3} sm={6} xs={12}>\r\n            <Button\r\n              className=\"mb-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.exportToExcel}\r\n            >\r\n              {t('general.exportToExcel')}\r\n            </Button>\r\n            <Button\r\n              className=\"mb-16 ml-8 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={this.sentResults}\r\n            >\r\n              {t('Gửi điểm')}\r\n            </Button>\r\n          </Grid>)}\r\n\r\n          <Grid item lg={3} md={3} sm={6} xs={12}>\r\n            <FormControl fullWidth={true} error={hasErrorCurrentYear} size=\"small\" variant=\"outlined\">\r\n              <InputLabel htmlFor=\"planning-simple\">{t('ResultsOfTheUnits.eqaPlanning')}</InputLabel>\r\n              <Select\r\n                label={t('ResultsOfTheUnits.eqaPlanning')}\r\n                value={PlanningId}\r\n                onChange={PlanningId => (this.handleChange(PlanningId, 'PlanningId'))}\r\n                required={true}\r\n                inputProps={{\r\n                  name: \"planning\",\r\n                  id: \"planning-simple\"\r\n                }}\r\n              >\r\n                {listPlanning.map(item => {\r\n                  return <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>;\r\n                })}\r\n              </Select>\r\n              {hasErrorCurrentYear && <FormHelperText>{t(\"general.errorMessages_required\")}</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={3} md={3} sm={6} xs={12}>\r\n            <FormControl fullWidth={true} error={hasErrorRound} size=\"small\" variant=\"outlined\">\r\n              <InputLabel htmlFor=\"round-simple\">{t('ResultsOfTheUnits.round')}</InputLabel>\r\n              <Select\r\n                label={t('ResultsOfTheUnits.round')}\r\n                value={roundId}\r\n                onChange={roundId => (this.handleChange(roundId, 'roundId'))}\r\n                required={true}\r\n                inputProps={{\r\n                  name: \"round\",\r\n                  id: \"round-simple\"\r\n                }}\r\n              >\r\n                {listEQARound.map(item => {\r\n                  return <MenuItem key={item.id} value={item.id}>{item.code}</MenuItem>;\r\n                })}\r\n              </Select>\r\n              {hasErrorRound && <FormHelperText>{t(\"general.errorMessages_required\")}</FormHelperText>}\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item lg={3} md={3} sm={6} xs={12}>\r\n            <FormControl fullWidth >\r\n              <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\r\n              <Input\r\n                label={t('EnterSearch')}\r\n                type=\"text\"\r\n                name=\"keyword\"\r\n                className=\"mt-8 stylePlaceholder\"\r\n                id=\"standard-adornment-amount\"\r\n                value={keyword}\r\n                onKeyDown={this.handleKeyDownEnterSearch}\r\n                onChange={this.handleTextChange}\r\n                placeholder={t(\"general.enterSearch\")}\r\n                startAdornment={\r\n                  <InputAdornment>\r\n                    <Link to=\"#\">\r\n                      <SearchIcon\r\n                        onClick={() => this.search(keyword)}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"0\",\r\n                          right: \"0\"\r\n                        }}\r\n                      />\r\n                    </Link>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n\r\n\r\n          </Grid>\r\n\r\n          {(listResults && listResults.length > 0 && this.state.itemList && this.state.itemList.length != 0) && (<Paper>\r\n            <TableContainer style={{ maxHeight: 1000 }}>\r\n              <Table >\r\n                <TableHead style={{\r\n                  backgroundColor: '#358600',\r\n                  color: '#fff',\r\n                }} >\r\n                  <TableRow>\r\n\r\n                    <TableCell\r\n                      style={{\r\n                        backgroundColor: '#358600',\r\n                        color: '#fff',\r\n                      }}\r\n                      rowSpan={2} width=\"50px\" align=\"center\" className=\"p-0\">{t('ResultsOfTheUnits.STT')}</TableCell>\r\n                    <TableCell style={{\r\n                      backgroundColor: '#358600',\r\n                      color: '#fff',\r\n                    }}\r\n                      rowSpan={2}>{t('ResultsOfUnitsByReagentGroup.countHealthOrg')}</TableCell>\r\n                    {\r\n                      (listError && this.renderRowHead())\r\n                    }\r\n                    <TableCell style={{\r\n                      backgroundColor: '#358600',\r\n                      color: '#fff',\r\n                    }}\r\n                      rowSpan={2}>{t('checkPoint.totalPoints')}</TableCell>\r\n                    <TableCell style={{\r\n                      backgroundColor: '#358600',\r\n                      color: '#fff',\r\n                      textAlign: \"center\"\r\n                    }}\r\n                      rowSpan={2}>{t('checkPoint.conclude')}</TableCell>\r\n                    {this.state.isRoleAdmin && <TableCell style={{\r\n                      backgroundColor: '#358600',\r\n                      color: '#fff', textAlign: \"center\"\r\n                    }}\r\n                      rowSpan={2}>{t('Trạng thái')}</TableCell>}\r\n                    {this.state.isRoleAdmin && <TableCell style={{\r\n                      backgroundColor: '#358600',\r\n                      color: '#fff', textAlign: \"center\"\r\n                    }}\r\n                      rowSpan={2}>{t('Gửi điểm')}</TableCell>}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {\r\n                    (listResults && itemList && itemList.map((item, index) => this.renderResultDetails(item, index)))\r\n                  }\r\n\r\n                </TableBody>\r\n\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Paper>)}\r\n\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HealthOrgCheckPoint;\r\n"]},"metadata":{},"sourceType":"module"}