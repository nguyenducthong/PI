{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar react_dom_1 = require(\"react-dom\");\n\nvar Utils_1 = require(\"../Utils\"); // import { parse, format } from 'date-fns';\n// import ReactTags from 'react-tag-autocomplete';\n\n\nvar ReactTags = require('react-tag-autocomplete');\n\nvar DEFAULT_DATE_INPUT_FORMAT = 'yyyy-MM-dd';\nvar inputCss = {\n  width: '100%',\n  height: '100%',\n  fontSize: '1em',\n  fontFamily: 'inherit'\n};\n\nvar Editor =\n/** @class */\nfunction (_super) {\n  __extends(Editor, _super);\n\n  function Editor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      value: '',\n      values: [],\n      autofocus: false\n    };\n    _this.ref = null;\n\n    _this.setValueOnSuccess = function (values) {\n      if (values === void 0) {\n        values = _this.state.values;\n      }\n\n      var _a = _this.props,\n          success = _a.success,\n          cancel = _a.cancel; // console.log('setValueOnSuccess: ', values);\n\n      success(values); // cancel();\n    };\n\n    _this.handleDelete = function (i) {\n      // console.log('- handleDelete ', i);\n      var values = _this.state.values;\n      var newValues = values.filter(function (item, index) {\n        return index !== i;\n      });\n\n      _this.setState({\n        values: newValues\n      }, function () {\n        _this.setValueOnSuccess(newValues);\n      });\n    };\n\n    _this.handleAddition = function (item) {\n      var values = _this.state.values;\n\n      if (item.name) {\n        // console.log('- handleAddition: ', item);\n        values.push({\n          id: item.name,\n          name: item.name\n        });\n\n        _this.setState({\n          values: values\n        }, function () {\n          _this.setValueOnSuccess(values);\n        });\n      }\n    }; // order: handleBlur => sucess() => grid's cellEdited => grid's dataEdited => handleAddition\n\n\n    _this.handleBlur = function () {\n      var cancel = _this.props.cancel;\n      var newValue = _this.ref.input.input.value;\n\n      if (newValue) {\n        // console.log(111, newValue, this.ref);\n        var values = Utils_1.clone(_this.state.values);\n        values.push({\n          id: newValue,\n          name: newValue\n        }); // console.log('- handleBlur ', values);\n\n        _this.setValueOnSuccess(values);\n      } else {\n        cancel();\n      }\n\n      var el = react_dom_1.findDOMNode(_this.ref);\n\n      if (el && el.parentElement.parentElement.parentElement) {\n        el.parentElement.parentElement.parentElement.style.overflow = 'hidden';\n      } // console.log('- handleBlur END');\n\n    };\n\n    return _this;\n  }\n\n  Editor.prototype.componentDidMount = function () {\n    var _this = this;\n\n    this.props.onRendered(function () {\n      var el = react_dom_1.findDOMNode(_this.ref);\n      el.style.zIndex = 1;\n      el.parentElement.parentElement.parentElement.style.overflow = 'inherit';\n      el.querySelector('input').focus();\n      var values = (_this.props.cell.getValue() || []).map(function (item) {\n        return typeof item === 'string' ? {\n          id: item,\n          name: item\n        } : item;\n      });\n\n      _this.setState({\n        values: values\n      });\n    });\n  };\n\n  Editor.prototype.render = function () {\n    var _this = this;\n\n    var editorParams = this.props.editorParams;\n    var values = this.state.values;\n    var suggestions = editorParams.values;\n    return React.createElement(\"div\", null, React.createElement(ReactTags, {\n      ref: function ref(_ref) {\n        return _this.ref = _ref;\n      },\n      placeholder: \"Select or Type\",\n      tags: values,\n      suggestions: suggestions,\n      allowNew: true,\n      autoresize: true,\n      autofocus: this.state.autofocus,\n      handleAddition: this.handleAddition,\n      handleDelete: this.handleDelete,\n      handleBlur: this.handleBlur,\n      minQueryLength: 0\n    }));\n  };\n\n  return Editor;\n}(React.Component);\n\nfunction default_1(cell, onRendered, success, cancel, editorParams) {\n  var container = document.createElement('div');\n  container.style.height = '100%';\n  react_dom_1.render(React.createElement(Editor, {\n    cell: cell,\n    onRendered: onRendered,\n    success: success,\n    cancel: cancel,\n    editorParams: editorParams\n  }), container);\n  return container;\n}\n\nexports[\"default\"] = default_1;","map":null,"metadata":{},"sourceType":"script"}