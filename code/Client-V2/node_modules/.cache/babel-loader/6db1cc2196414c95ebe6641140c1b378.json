{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQASampleSet\\\\EQASampleSearchDialog.jsx\";\nimport { Grid, FormControl, InputLabel, Button, Input, Checkbox, TablePagination, InputAdornment, Dialog, DialogActions, IconButton, Icon } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { searchByPage } from \"../EQASamplesList/EQASampleListService\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport '../../../styles/views/_style.scss';\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EQASampleSearchDialog = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQASampleSearchDialog, _React$Component);\n\n  var _super = _createSuper(EQASampleSearchDialog);\n\n  function EQASampleSearchDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQASampleSearchDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectedItem: {},\n      keyword: \"\",\n      sampleList: [],\n      eqaRoundId: \"\"\n    };\n\n    _this.handleTextSearchChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.setPage(0);\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.keyword;\n      searchObject.eqaRoundId = _this.state.eqaRoundId;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject).then(function (_ref) {\n        var data = _ref.data;\n        var sampleList = _this.state.sampleList; // nếu đã có trong list chọn rồi thì sẽ thay trạng thái isCheck bằng true\n\n        var itemListClone = _toConsumableArray(data.content);\n\n        itemListClone.map(function (item) {\n          var found = sampleList.find(function (obj) {\n            if (typeof obj.sampleList.sample != \"undefined\" && obj.sampleList.sample.id != null) {\n              return obj.sampleList.sample.id == item.id;\n            } else {\n              return obj.sampleList.id == item.id;\n            }\n          });\n\n          if (found) {\n            item.isCheck = true;\n          } else {\n            item.isCheck = false;\n          }\n        });\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleClick = function (event, item) {\n      item.isCheck = event.target.checked;\n      var sampleList = _this.state.sampleList;\n\n      if (sampleList == null) {\n        sampleList = [];\n      }\n\n      if (sampleList != null && sampleList.length == 0 && item.isCheck == true) {\n        var p = {};\n        p.sampleList = item;\n        sampleList.push(p);\n      } else {\n        var itemInList = false;\n        sampleList.forEach(function (el) {\n          var _el$sampleList$sample;\n\n          if (el.sampleList.id == item.id || ((_el$sampleList$sample = el.sampleList.sample) === null || _el$sampleList$sample === void 0 ? void 0 : _el$sampleList$sample.id) == item.id) {\n            itemInList = true;\n          }\n        });\n\n        if (!itemInList && item.isCheck == true) {\n          var _p = {};\n          _p.sampleList = item;\n          sampleList.push(_p);\n        } else {\n          if (item.isCheck === false) {\n            sampleList = sampleList.filter(function (proper) {\n              if (typeof proper.sampleList.sample != \"undefined\" && proper.sampleList.sample.id != null) {\n                return proper.sampleList.sample.id == item.id;\n              } else {\n                return proper.sampleList.id !== item.id;\n              }\n            });\n          }\n        }\n      }\n\n      _this.setState({\n        sampleList\n      }, function () {});\n    };\n\n    _this.search = function (keyword) {\n      _this.updatePageData();\n    };\n\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EQASampleSearchDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData(this.state.page, this.state.rowsPerPage);\n    } // handleClick = (event, item) => {\n    //   //alert(item);\n    //   item.isCheck = event.target.checked;\n    //   if (item.id != null) {\n    //     this.setState({ selectedValue: item.id, selectedItem: item });\n    //   } else {\n    //     this.setState({ selectedValue: item.id, selectedItem: null });\n    //   }\n    // }\n\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          selectedItem = _this$props.selectedItem,\n          sampleList = _this$props.sampleList,\n          eqaRound = _this$props.eqaRound; //this.setState(item);\n      //this.setState({ selectedValue: selectedItem.id });\n\n      this.setState({\n        sampleList,\n        eqaRoundId: eqaRound.id\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          handleClose = _this$props2.handleClose,\n          handleSelect = _this$props2.handleSelect,\n          sampleList = _this$props2.sampleList,\n          selectedItem = _this$props2.selectedItem,\n          open = _this$props2.open;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          eqaRound = _this$state.eqaRound;\n      var columns = [// {\n      //   title: t(\"Action\"),\n      //   field: \"custom\",\n      //   align: \"left\",\n      //   width: \"250\",\n      //   render: rowData => <Radio name=\"radSelected\" value={rowData.id} checked={this.state.selectedValue === rowData.id} onClick={(event) => this.handleClick(event, rowData)}\n      //   />\n      // },\n      {\n        title: t(\"general.select\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Checkbox, {\n            id: \"radio\".concat(rowData.id),\n            name: \"radSelected\",\n            value: rowData.id,\n            checked: rowData.isCheck,\n            onClick: function onClick(event) {\n              return _this2.handleClick(event, rowData);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 11\n            }\n          });\n        }\n      }, //  { title: t(\"Name\"), field: \"name\", width: \"150\" },\n      {\n        title: t(\"Code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\"\n      } // { title: t(\"EQASerumBankTable.title\"), field: \"eqaSerumBank.serumCode\", align: \"left\", width: \"150\" },\n      // { title: t(\"SampleManagement.sample-list.Result.title\"), field: \"eqaSerumBank.serumCode\", align: \"left\", width: \"150\" },\n      ];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }\n      }, t(\"EQASampleSet.select_sample\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 114\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"standard-adornment-amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }\n      }, t(\"EnterSearch\")), /*#__PURE__*/React.createElement(Input, {\n        id: \"standard-adornment-amount\",\n        name: \"text\",\n        value: this.state.keyword,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        onChange: this.handleTextSearchChange,\n        endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          position: \"end\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(IconButton, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this2.search();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        className: \"mt-8\",\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"SampleManagement.sample-list.title\"),\n        data: this.state.itemList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                witdth: \"100%\"\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }\n            })));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref2) {\n          var from = _ref2.from,\n              to = _ref2.to,\n              count = _ref2.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }\n      }, t(\"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return handleSelect(_this2.state.sampleList);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }, t(\"Select\"))));\n    }\n  }]);\n\n  return EQASampleSearchDialog;\n}(React.Component);\n\nexport default EQASampleSearchDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQASampleSet/EQASampleSearchDialog.jsx"],"names":["Grid","FormControl","InputLabel","Button","Input","Checkbox","TablePagination","InputAdornment","Dialog","DialogActions","IconButton","Icon","createMuiTheme","React","Component","ReactDOM","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","searchByPage","DialogContent","DialogContentText","DialogTitle","Draggable","Paper","PaperComponent","props","EQASampleSearchDialog","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectedItem","keyword","sampleList","eqaRoundId","handleTextSearchChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","searchObject","text","pageIndex","pageSize","then","itemListClone","content","map","item","found","find","obj","sample","id","isCheck","handleClick","checked","length","p","push","itemInList","forEach","el","filter","proper","search","handleChange","bind","open","handleClose","eqaRound","t","i18n","handleSelect","columns","title","field","align","width","render","rowData","cursor","position","right","top","row","rows","list","a","parentId","selection","actionsColumnIndex","paging","rowStyle","backgroundColor","tableData","headerStyle","color","padding","toolbar","Toolbar","witdth","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Button,\r\n  Input,\r\n  Checkbox,\r\n  TablePagination,\r\n  InputAdornment,\r\n  Dialog,\r\n  DialogActions,\r\n  IconButton, Icon\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport { searchByPage } from \"../EQASamplesList/EQASampleListService\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport '../../../styles/views/_style.scss';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass EQASampleSearchDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectedItem: {},\r\n    keyword: \"\",\r\n    sampleList: [],\r\n    eqaRoundId: \"\"\r\n  };\r\n\r\n  handleTextSearchChange = event => {\r\n    this.setState({ keyword: event.target.value }, function() {});\r\n  };\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.setPage(0);\r\n    }\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function() {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function() {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.text = this.state.keyword;\r\n    searchObject.eqaRoundId = this.state.eqaRoundId;\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject).then(({ data }) => {\r\n      let { sampleList } = this.state;\r\n      // nếu đã có trong list chọn rồi thì sẽ thay trạng thái isCheck bằng true\r\n      let itemListClone = [...data.content];\r\n      itemListClone.map(item => {\r\n        const found = sampleList.find(obj => {\r\n          if (\r\n            typeof obj.sampleList.sample != \"undefined\" &&\r\n            obj.sampleList.sample.id != null\r\n          ) {\r\n            return obj.sampleList.sample.id == item.id;\r\n          } else {\r\n            return obj.sampleList.id == item.id;\r\n          }\r\n        });\r\n        if (found) {\r\n          item.isCheck = true;\r\n        } else {\r\n          item.isCheck = false;\r\n        }\r\n      });\r\n      this.setState({\r\n        itemList: [...data.content],\r\n        totalElements: data.totalElements\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData(this.state.page, this.state.rowsPerPage);\r\n  }\r\n\r\n  // handleClick = (event, item) => {\r\n  //   //alert(item);\r\n  //   item.isCheck = event.target.checked;\r\n  //   if (item.id != null) {\r\n  //     this.setState({ selectedValue: item.id, selectedItem: item });\r\n  //   } else {\r\n  //     this.setState({ selectedValue: item.id, selectedItem: null });\r\n  //   }\r\n\r\n  // }\r\n  handleClick = (event, item) => {\r\n    item.isCheck = event.target.checked;\r\n    let { sampleList } = this.state;\r\n    if (sampleList == null) {\r\n      sampleList = [];\r\n    }\r\n    if (sampleList != null && sampleList.length == 0 && item.isCheck == true) {\r\n      let p = {};\r\n      p.sampleList = item;\r\n      sampleList.push(p);\r\n    } else {\r\n      let itemInList = false;\r\n      sampleList.forEach(el => {\r\n        if (\r\n          el.sampleList.id == item.id ||\r\n          el.sampleList.sample?.id == item.id\r\n        ) {\r\n          itemInList = true;\r\n        }\r\n      });\r\n      if (!itemInList && item.isCheck == true) {\r\n        let p = {};\r\n        p.sampleList = item;\r\n        sampleList.push(p);\r\n      } else {\r\n        if (item.isCheck === false) {\r\n          sampleList = sampleList.filter(proper => {\r\n            if (\r\n              typeof proper.sampleList.sample != \"undefined\" &&\r\n              proper.sampleList.sample.id != null\r\n            ) {\r\n              return proper.sampleList.sample.id == item.id;\r\n            } else {\r\n              return proper.sampleList.id !== item.id;\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n    this.setState({ sampleList }, function() {});\r\n  };\r\n\r\n  componentWillMount() {\r\n    let { open, handleClose, selectedItem, sampleList, eqaRound } = this.props;\r\n    //this.setState(item);\r\n    //this.setState({ selectedValue: selectedItem.id });\r\n    this.setState({ sampleList, eqaRoundId: eqaRound.id });\r\n  }\r\n  search = keyword => {\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      t,\r\n      i18n,\r\n      handleClose,\r\n      handleSelect,\r\n      sampleList,\r\n      selectedItem,\r\n      open\r\n    } = this.props;\r\n    let { keyword, eqaRound } = this.state;\r\n    let columns = [\r\n      // {\r\n      //   title: t(\"Action\"),\r\n      //   field: \"custom\",\r\n      //   align: \"left\",\r\n      //   width: \"250\",\r\n      //   render: rowData => <Radio name=\"radSelected\" value={rowData.id} checked={this.state.selectedValue === rowData.id} onClick={(event) => this.handleClick(event, rowData)}\r\n      //   />\r\n      // },\r\n      {\r\n        title: t(\"general.select\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => (\r\n          <Checkbox\r\n            id={`radio${rowData.id}`}\r\n            name=\"radSelected\"\r\n            value={rowData.id}\r\n            checked={rowData.isCheck}\r\n            onClick={event => this.handleClick(event, rowData)}\r\n          />\r\n        )\r\n      },\r\n      //  { title: t(\"Name\"), field: \"name\", width: \"150\" },\r\n      { title: t(\"Code\"), field: \"code\", align: \"left\", width: \"150\" }\r\n      // { title: t(\"EQASerumBankTable.title\"), field: \"eqaSerumBank.serumCode\", align: \"left\", width: \"150\" },\r\n      // { title: t(\"SampleManagement.sample-list.Result.title\"), field: \"eqaSerumBank.serumCode\", align: \"left\", width: \"150\" },\r\n    ];\r\n    return (\r\n      <Dialog\r\n        onClose={handleClose}\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"sm\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">{t(\"EQASampleSet.select_sample\")}</span>\r\n          <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid item xs={12}>\r\n            {/* <Button className=\"mb-16 mr-16\" variant=\"contained\" color=\"primary\" onClick={() => handleSelect(this.state.sampleList)}>\r\n              {t('Select')}\r\n            </Button>\r\n            <Button className=\"mb-16 mr-36\" variant=\"contained\" color=\"secondary\" onClick={() => handleClose()}>{t('Cancel')}</Button> */}\r\n            {/* <TextField className=\"mb-36 mr-36\" placeholder={t('EnterSearch')} type=\"text\" value={this.state.keyword} onChange={this.handleTextSearchChange} onKeyDown={this.handleKeyDownEnterSearch} />\r\n            <Button className=\"mb-16 mr-16\" variant=\"contained\" color=\"primary\" onClick={() => this.search()}>{t('Search')}</Button> */}\r\n            <FormControl fullWidth>\r\n              <InputLabel htmlFor=\"standard-adornment-amount\">\r\n                {t(\"EnterSearch\")}\r\n              </InputLabel>\r\n              <Input\r\n                id=\"standard-adornment-amount\"\r\n                name=\"text\"\r\n                value={this.state.keyword}\r\n                onKeyDown={this.handleKeyDownEnterSearch}\r\n                onChange={this.handleTextSearchChange}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton>\r\n                      <SearchIcon onClick={() => this.search()} />\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item className=\"mt-8\" xs={12}>\r\n            <MaterialTable\r\n              title={t(\"SampleManagement.sample-list.title\")}\r\n              data={this.state.itemList}\r\n              columns={columns}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: rowData => ({\r\n                  backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <div style={{ witdth: \"100%\" }}>\r\n                    <MTableToolbar {...props} />\r\n                  </div>\r\n                )\r\n              }}\r\n              onSelectionChange={rows => {\r\n                this.data = rows;\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={this.state.totalElements}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n          <Button\r\n            className=\"mb-16 mr-36\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => handleClose()}\r\n          >\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n          <Button\r\n            className=\"mb-16 mr-16\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleSelect(this.state.sampleList)}\r\n          >\r\n            {t(\"Select\")}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nexport default EQASampleSearchDialog;\r\n"]},"metadata":{},"sourceType":"module"}