{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportFastTest\\\\EQAResultReportFastTestEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, TextField, Icon, IconButton, FormControl, DialogTitle, DialogContent, DialogActions, Paper } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { saveItem, checkReagentByHealthOrgRound, getEQASampleTubeByHealthOrgEQARoundId } from \"./EQAResultReportFastTestService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ConstantList from \"../../appConfig\";\nimport Draggable from \"react-draggable\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport LocalConstants from \"./Constants\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport \"../../../styles/views/_loadding.scss\";\nimport \"../../../styles/views/_style.scss\";\nimport clsx from \"clsx\";\nimport EQAResultReportFastTestTabs from \"./EQAResultReportFastTestTabs\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { exportToExcel } from \"./EQAResultReportFastTestService\";\nimport { saveAs } from \"file-saver\";\nimport EQAResultReportFastTestPrint from \"./EQAResultReportFastTestPrint\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EQAResultReportFastTestEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQAResultReportFastTestEditorDialog, _Component);\n\n  var _super = _createSuper(EQAResultReportFastTestEditorDialog);\n\n  function EQAResultReportFastTestEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportFastTestEditorDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasErrorHealthOrgRound: false,\n      hasErrorEQARound: false,\n      isUsingIQC: false,\n      isUsingControlLine: false,\n      eqaRound: \"\",\n      healthOrg: null,\n      reagentLot: \"\",\n      orderTest: \"\",\n      reagent: null,\n      technician: null,\n      personBuyReagent: \"\",\n      details: [],\n      supplyOfReagent: \"\",\n      timeToResult: \"\",\n      round: null,\n      reagentExpiryDate: null,\n      testDate: new Date(),\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenSearchEQASampleSearchDialog: false,\n      listHealthOrgRound: [],\n      listReagent: [],\n      listTechnician: [],\n      listEQARound: [],\n      shouldOpenHealthOrgRoundPopup: false,\n      isView: false,\n      reagentUnBoxDate: null,\n      isFinalResult: false,\n      dateSubmitResults: null,\n      typeMethod: 2,\n      isViewButton: false,\n      loading: false,\n      checkTheStatus: false,\n      shouldOpenPrintDialog: false\n    };\n    _this.Results = [{\n      id: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n      name: \"Không thực hiện\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\n      name: \"Âm tính\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\n      name: \"Dương tính\"\n    }];\n    _this.listResult_C_T_Line = [{\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\n      name: \"Dương tính\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\n      name: \"Âm tính\"\n    }];\n    _this.listChooseBoolean = [{\n      id: 0,\n      value: false,\n      name: \"Không\"\n    }, {\n      id: 1,\n      value: true,\n      name: \"Có\"\n    }];\n\n    _this.handleDateChange = function (date, name) {\n      _this.setState({\n        [name]: date\n      });\n    };\n\n    _this.handleChooseBooleanChange = function (value, name) {\n      _this.setState({\n        [name]: value.target.value\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"isFinalResult\") {\n        _this.setState({\n          isFinalResult: event.target.checked\n        });\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var details = _this.state.details;\n\n      if (details != null && details.length > 0) {\n        details.forEach(function (element) {\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name == \"cLine\") {\n              if (element.result == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.result = \"\";\n              }\n\n              element.cLine = event.target.value;\n            } else if (event.target.name == \"tLine\") {\n              if (element.result == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.result = \"\";\n              }\n\n              element.tLine = event.target.value;\n            } else if (event.target.name == \"result\") {\n              if (event.target.value == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.cLine = \"\";\n                element.tLine = \"\";\n              }\n\n              element.result = event.target.value;\n            }\n          }\n        });\n\n        _this.setState({\n          details: details\n        });\n      }\n    };\n\n    _this.openCircularProgress = function () {\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleFormSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var t, isCheck, _this$state, checkTheStatus, item, _this$state$item, id, details, healthOrgRound, reagent, typeMethod, otherReagent;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.openCircularProgress();\n\n            case 2:\n              t = _this.props.t;\n              isCheck = false;\n              _this$state = _this.state, checkTheStatus = _this$state.checkTheStatus, item = _this$state.item;\n              _this$state$item = _this.state.item, id = _this$state$item.id, details = _this$state$item.details, healthOrgRound = _this$state$item.healthOrgRound, reagent = _this$state$item.reagent, typeMethod = _this$state$item.typeMethod, otherReagent = _this$state$item.otherReagent;\n\n              _this.setState({\n                loading: true\n              }); //Check null ket qua\n\n\n              if (details != null && details.length > 0) {\n                details.forEach(function (el) {\n                  if (el.result === null || el.result === \"\") {\n                    isCheck = true;\n                  }\n                });\n              } else {\n                isCheck = true;\n              }\n\n              if (!isCheck) {\n                _context.next = 12;\n                break;\n              }\n\n              toast.info(t(\"EQAResultReportElisa.notResult\"));\n\n              _this.setState({\n                loading: false\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 12:\n              if (checkTheStatus) {\n                item[\"isFinalResult\"] = true;\n                item[\"dateSubmitResults\"] = new Date();\n\n                _this.setState({\n                  item: item\n                });\n              } //Check null du lieu\n\n\n              if (!(healthOrgRound == null || healthOrgRound.id == null || reagent == null || reagent.id == null)) {\n                _context.next = 17;\n                break;\n              }\n\n              toast.info(t(\"EQAResultReportElisa.notData\"));\n\n              _this.setState({\n                loading: false\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              if (ConstantList.CHECK_ERROR_RESULT && !otherReagent) {\n                checkReagentByHealthOrgRound(id, healthOrgRound.id, reagent.id, typeMethod).then(function (res) {\n                  if (res.data) {\n                    toast.warning(t(\"EqaResult.dulicateReagent\"));\n\n                    _this.setState({\n                      loading: false\n                    });\n                  } else {\n                    if (id) {\n                      _this.setState({\n                        isView: true,\n                        isRoleAdmin: false,\n                        isViewButton: true\n                      });\n\n                      saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                        if (response.data != null && response.status == 200) {\n                          _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                          toast.success(t(\"mess_edit\"));\n\n                          _this.setState({\n                            loading: false,\n                            isView: false,\n                            isViewButton: false\n                          });\n                        }\n                      }).catch(function () {\n                        toast.warning(t(\"mess_edit_error\"));\n\n                        _this.setState({\n                          loading: false,\n                          isView: false,\n                          isViewButton: false\n                        });\n                      });\n                    } else {\n                      _this.setState({\n                        isView: true,\n                        isRoleAdmin: false,\n                        isViewButton: true\n                      });\n\n                      saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                        if (response.data != null && response.status == 200) {\n                          _this.state.item.id = response.data.id;\n\n                          _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                          toast.success(t(\"mess_add\"));\n\n                          _this.setState({\n                            loading: false,\n                            isView: false,\n                            isViewButton: false\n                          });\n                        }\n                      }).catch(function () {\n                        toast.warning(t(\"mess_add_error\"));\n\n                        _this.setState({\n                          loading: false,\n                          isView: false,\n                          isViewButton: false\n                        });\n                      });\n                    }\n                  }\n                });\n              } else {\n                if (id) {\n                  _this.setState({\n                    isView: true,\n                    isRoleAdmin: false,\n                    isViewButton: true\n                  });\n\n                  saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                    if (response.data != null && response.status == 200) {\n                      _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                      toast.success(t(\"mess_edit\"));\n\n                      _this.setState({\n                        loading: false,\n                        isView: false,\n                        isViewButton: false\n                      });\n                    }\n                  }).catch(function () {\n                    _this.setState({\n                      loading: false\n                    });\n\n                    toast.warning(t(\"mess_edit_error\"));\n\n                    _this.setState({\n                      isView: false,\n                      isViewButton: false\n                    });\n                  });\n                } else {\n                  _this.setState({\n                    isView: true,\n                    isRoleAdmin: false,\n                    isViewButton: true\n                  });\n\n                  saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                    if (response.data != null && response.status == 200) {\n                      _this.state.item.id = response.data.id;\n\n                      _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                      toast.success(t(\"mess_add\"));\n\n                      _this.setState({\n                        loading: false,\n                        isView: false,\n                        isViewButton: false\n                      });\n                    }\n                  }).catch(function () {\n                    toast.warning(t(\"mess_add_error\"));\n\n                    _this.setState({\n                      loading: false,\n                      isView: false,\n                      isViewButton: false\n                    });\n                  });\n                }\n              }\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchDialog: false\n      });\n    };\n\n    _this.handleSearchEQARoundDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchEQARoundSearchDialog: false\n      });\n    };\n\n    _this.sendResults = function () {\n      var _this$state2 = _this.state,\n          item = _this$state2.item,\n          checkTheStatus = _this$state2.checkTheStatus;\n      checkTheStatus = true;\n\n      _this.setState({\n        checkTheStatus: checkTheStatus\n      }, function () {});\n    };\n\n    _this.handleHealthOrgRoundPopupClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgRoundPopup: false\n      }, function () {});\n    };\n\n    _this.handleSelectHealthOrgRound = function (healthOrgRound) {\n      if (healthOrgRound && healthOrgRound.id) {\n        _this.setState({\n          healthOrgRound\n        }, function () {\n          var _this2 = this;\n\n          var _this$state3 = this.state,\n              healthOrgRound = _this$state3.healthOrgRound,\n              details = _this$state3.details;\n          details = [];\n          getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(function (result) {\n            var listEQASampleTube = result.data;\n\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\n              listEQASampleTube.forEach(function (tube) {\n                var eQAResultReportDetail = {};\n                eQAResultReportDetail.sampleTube = tube;\n                eQAResultReportDetail.cLine = \"\";\n                eQAResultReportDetail.tLine = \"\";\n                eQAResultReportDetail.result = \"\";\n                details.push(eQAResultReportDetail);\n              });\n            }\n\n            _this2.setState({\n              details\n            });\n          });\n        });\n      }\n\n      _this.handleHealthOrgRoundPopupClose();\n    };\n\n    _this.handleDialogFinalResultClose = function () {\n      _this.handleDialogClose();\n    };\n\n    _this.handleExportExcel = function () {\n      var t = _this.props.t;\n      exportToExcel(_this.state.id).then(function (res) {\n        toast.info(_this.props.t('general.successExport'));\n        var blob = new Blob([res.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n        saveAs(blob, \"Ketqua.xlsx\");\n      }).catch(function (err) {// console.log(err);\n      }); // console.log(this.state);\n    };\n\n    _this.handleExportPDF = function () {\n      _this.setState({\n        shouldOpenPrintDialog: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        shouldOpenPrintDialog: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportFastTestEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView,\n          listHealthOrgRound = _this$props.listHealthOrgRound;\n      this.setState({\n        isRoleAdmin: isRoleAdmin,\n        isView: isView\n      });\n\n      if (item && item.details && item.details.length > 0) {\n        item.details.sort(function (a, b) {\n          return a.orderNumber > b.orderNumber ? 1 : a.orderNumber === b.orderNumber ? a.sampleTube.code > b.sampleTube.code ? 1 : -1 : -1;\n        });\n      }\n\n      if (item.id == null) {\n        item[\"id\"] = null;\n        item[\"typeMethod\"] = 2;\n        item[\"otherReagent\"] = false;\n      }\n\n      if (listHealthOrgRound != null && listHealthOrgRound.length > 0) {\n        item[\"healthOrgRound\"] = listHealthOrgRound[0];\n      }\n\n      this.setState(_objectSpread({\n        item: item,\n        listHealthOrgRound: listHealthOrgRound\n      }, item), function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      var _this$state4 = this.state,\n          selected = _this$state4.selected,\n          hasErrorHealthOrgRound = _this$state4.hasErrorHealthOrgRound,\n          hasErrorEQARound = _this$state4.hasErrorEQARound;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var _this$state5 = this.state,\n          isView = _this$state5.isView,\n          isViewButton = _this$state5.isViewButton,\n          isFinalResult = _this$state5.isFinalResult,\n          healthOrgRound = _this$state5.healthOrgRound,\n          round = _this$state5.round,\n          isRoleAdmin = _this$state5.isRoleAdmin,\n          loading = _this$state5.loading;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: clsx(\"wrapperButton\", !loading && \"hidden\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"buttonProgress\",\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }\n      })), this.state.shouldOpenPrintDialog && /*#__PURE__*/React.createElement(EQAResultReportFastTestPrint, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleClose,\n        open: this.state.shouldOpenPrintDialog,\n        handleOKEditClose: handleOKEditClose,\n        item: this.state.item,\n        pdf: true // isRoleAdmin={this.state.isRoleAdmin}\n        // isView={this.state.isView}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 13\n        }\n      }, t(\"SaveUpdate\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 15\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EQAResultReportFastTestTabs, {\n        t: t,\n        i18n: i18n,\n        item: this.state.item,\n        isView: this.props.isView,\n        isRoleAdmin: this.props.isRoleAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-end flex-middle mt-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }\n      }, (!isView || isRoleAdmin) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"inherit\",\n        onClick: function onClick() {\n          return _this3.sendResults();\n        },\n        style: {\n          backgroundColor: \"#4caf50\",\n          color: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }\n      }, t(\"EQAResultReportFastTest.sendResult\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-16\",\n        color: \"secondary\",\n        type: \"button\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 13\n        }\n      }, \" \", t(\"Cancel\")), (!isView || isRoleAdmin) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        disabled: isViewButton,\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }\n      }, t(\"Save\")), this.state.id && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\" // disabled={isViewButton}\n        ,\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.handleExportPDF,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 15\n        }\n      }, t(\"Xuất PDF\")))));\n    }\n  }]);\n\n  return EQAResultReportFastTestEditorDialog;\n}(Component);\n\nexport default EQAResultReportFastTestEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportFastTest/EQAResultReportFastTestEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","TextField","Icon","IconButton","FormControl","DialogTitle","DialogContent","DialogActions","Paper","ValidatorForm","TextValidator","saveItem","checkReagentByHealthOrgRound","getEQASampleTubeByHealthOrgEQARoundId","Autocomplete","ConstantList","Draggable","DateFnsUtils","LocalConstants","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","toast","getCurrentUser","getListHealthOrgByUser","clsx","EQAResultReportFastTestTabs","CircularProgress","exportToExcel","saveAs","EQAResultReportFastTestPrint","configure","autoClose","draggable","limit","PaperComponent","props","EQAResultReportFastTestEditorDialog","state","hasErrorHealthOrgRound","hasErrorEQARound","isUsingIQC","isUsingControlLine","eqaRound","healthOrg","reagentLot","orderTest","reagent","technician","personBuyReagent","details","supplyOfReagent","timeToResult","round","reagentExpiryDate","testDate","Date","shouldOpenSearchDialog","shouldOpenConfirmationDialog","shouldOpenSearchEQASampleSearchDialog","listHealthOrgRound","listReagent","listTechnician","listEQARound","shouldOpenHealthOrgRoundPopup","isView","reagentUnBoxDate","isFinalResult","dateSubmitResults","typeMethod","isViewButton","loading","checkTheStatus","shouldOpenPrintDialog","Results","id","EQAResultReportDetail_TestValue","Not_Implemented","name","negative","positive","listResult_C_T_Line","listChooseBoolean","value","handleDateChange","date","setState","handleChooseBooleanChange","target","handleChange","event","source","persist","isActive","checked","handleRowDataCellChange","rowData","length","forEach","element","tableData","result","cLine","tLine","openCircularProgress","handleFormSubmit","t","isCheck","item","healthOrgRound","otherReagent","el","info","CHECK_ERROR_RESULT","then","res","data","warning","isRoleAdmin","response","status","success","catch","handleSearchDialogClose","handleSearchEQARoundDialogClose","shouldOpenSearchEQARoundSearchDialog","sendResults","handleHealthOrgRoundPopupClose","handleSelectHealthOrgRound","listEQASampleTube","tube","eQAResultReportDetail","sampleTube","push","handleDialogFinalResultClose","handleDialogClose","handleExportExcel","blob","Blob","type","err","handleExportPDF","handleClose","open","sort","a","b","orderNumber","code","classes","selected","handleOKEditClose","i18n","overflowY","display","flexDirection","cursor","position","right","top","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Icon,\r\n  IconButton,\r\n  FormControl,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  saveItem,\r\n  checkReagentByHealthOrgRound,\r\n  getEQASampleTubeByHealthOrgEQARoundId,\r\n} from \"./EQAResultReportFastTestService\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport Draggable from \"react-draggable\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport LocalConstants from \"./Constants\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\r\nimport \"../../../styles/views/_loadding.scss\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport clsx from \"clsx\";\r\nimport EQAResultReportFastTestTabs from \"./EQAResultReportFastTestTabs\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {exportToExcel} from \"./EQAResultReportFastTestService\";\r\nimport { saveAs } from \"file-saver\";\r\nimport EQAResultReportFastTestPrint from \"./EQAResultReportFastTestPrint\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nclass EQAResultReportFastTestEditorDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    hasErrorHealthOrgRound: false,\r\n    hasErrorEQARound: false,\r\n    isUsingIQC: false,\r\n    isUsingControlLine: false,\r\n    eqaRound: \"\",\r\n    healthOrg: null,\r\n    reagentLot: \"\",\r\n    orderTest: \"\",\r\n    reagent: null,\r\n    technician: null,\r\n    personBuyReagent: \"\",\r\n    details: [],\r\n    supplyOfReagent: \"\",\r\n    timeToResult: \"\",\r\n    round: null,\r\n    reagentExpiryDate: null,\r\n    testDate: new Date(),\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenSearchEQASampleSearchDialog: false,\r\n    listHealthOrgRound: [],\r\n    listReagent: [],\r\n    listTechnician: [],\r\n    listEQARound: [],\r\n    shouldOpenHealthOrgRoundPopup: false,\r\n    isView: false,\r\n    reagentUnBoxDate: null,\r\n    isFinalResult: false,\r\n    dateSubmitResults: null,\r\n    typeMethod: 2,\r\n    isViewButton: false,\r\n    loading: false,\r\n    checkTheStatus: false,\r\n    shouldOpenPrintDialog: false,\r\n  };\r\n\r\n  //positive(1),//Dương tính\r\n  //indertermine(0),//Không xác định\r\n  //negative(-1),//Âm tính\r\n  //none(-2)//Không thực hiện\r\n  Results = [\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\r\n      name: \"Không thực hiện\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\r\n      name: \"Âm tính\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\r\n      name: \"Dương tính\",\r\n    },\r\n  ];\r\n\r\n  listResult_C_T_Line = [\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\r\n      name: \"Dương tính\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\r\n      name: \"Âm tính\",\r\n    },\r\n  ];\r\n\r\n  listChooseBoolean = [\r\n    { id: 0, value: false, name: \"Không\" },\r\n    { id: 1, value: true, name: \"Có\" },\r\n  ];\r\n\r\n  handleDateChange = (date, name) => {\r\n    this.setState({\r\n      [name]: date,\r\n    });\r\n  };\r\n\r\n  handleChooseBooleanChange = (value, name) => {\r\n    this.setState({\r\n      [name]: value.target.value,\r\n    });\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    if (source === \"isFinalResult\") {\r\n      this.setState({ isFinalResult: event.target.checked });\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleRowDataCellChange = (rowData, event) => {\r\n    let { details } = this.state;\r\n    if (details != null && details.length > 0) {\r\n      details.forEach((element) => {\r\n        if (\r\n          element.tableData != null &&\r\n          rowData != null &&\r\n          rowData.tableData != null &&\r\n          element.tableData.id == rowData.tableData.id\r\n        ) {\r\n          if (event.target.name == \"cLine\") {\r\n            if (\r\n              element.result ==\r\n              LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n            ) {\r\n              element.result = \"\";\r\n            }\r\n            element.cLine = event.target.value;\r\n          } else if (event.target.name == \"tLine\") {\r\n            if (\r\n              element.result ==\r\n              LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n            ) {\r\n              element.result = \"\";\r\n            }\r\n            element.tLine = event.target.value;\r\n          } else if (event.target.name == \"result\") {\r\n            if (\r\n              event.target.value ==\r\n              LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n            ) {\r\n              element.cLine = \"\";\r\n              element.tLine = \"\";\r\n            }\r\n            element.result = event.target.value;\r\n          }\r\n        }\r\n      });\r\n      this.setState({ details: details });\r\n    }\r\n  };\r\n  openCircularProgress = () => {\r\n    this.setState({ loading: true });\r\n  };\r\n\r\n  handleFormSubmit = async () => {\r\n    await this.openCircularProgress();\r\n    let { t } = this.props;\r\n    let isCheck = false;\r\n    let { checkTheStatus, item } = this.state;\r\n    let {\r\n      id,\r\n      details,\r\n      healthOrgRound,\r\n      reagent,\r\n      typeMethod,\r\n      otherReagent,\r\n    } = this.state.item;\r\n    this.setState({ loading: true });\r\n    //Check null ket qua\r\n    if (details != null && details.length > 0) {\r\n      details.forEach((el) => {\r\n        if (el.result === null || el.result === \"\") {\r\n          isCheck = true;\r\n        }\r\n      });\r\n    } else {\r\n      isCheck = true;\r\n    }\r\n    if (isCheck) {\r\n      toast.info(t(\"EQAResultReportElisa.notResult\"));\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n    if (checkTheStatus) {\r\n      item[\"isFinalResult\"] = true;\r\n      item[\"dateSubmitResults\"] = new Date();\r\n      this.setState({ item: item });\r\n    }\r\n    //Check null du lieu\r\n    if (\r\n      healthOrgRound == null ||\r\n      healthOrgRound.id == null ||\r\n      reagent == null ||\r\n      reagent.id == null\r\n    ) {\r\n      toast.info(t(\"EQAResultReportElisa.notData\"));\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n\r\n    if (ConstantList.CHECK_ERROR_RESULT && !otherReagent) {\r\n      checkReagentByHealthOrgRound(\r\n        id,\r\n        healthOrgRound.id,\r\n        reagent.id,\r\n        typeMethod\r\n      ).then((res) => {\r\n        if (res.data) {\r\n          toast.warning(t(\"EqaResult.dulicateReagent\"));\r\n          this.setState({ loading: false });\r\n        } else {\r\n          if (id) {\r\n            this.setState({\r\n              isView: true,\r\n              isRoleAdmin: false,\r\n              isViewButton: true,\r\n            });\r\n            saveItem({\r\n              ...this.state.item,\r\n            })\r\n              .then((response) => {\r\n                if (response.data != null && response.status == 200) {\r\n                  this.setState({ ...this.state.item });\r\n                  // this.props.handleOKEditClose();\r\n                  toast.success(t(\"mess_edit\"));\r\n                  this.setState({\r\n                    loading: false,\r\n                    isView: false,\r\n                    isViewButton: false,\r\n                  });\r\n                }\r\n              })\r\n              .catch(() => {\r\n                toast.warning(t(\"mess_edit_error\"));\r\n                this.setState({\r\n                  loading: false,\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                });\r\n              });\r\n          } else {\r\n            this.setState({\r\n              isView: true,\r\n              isRoleAdmin: false,\r\n              isViewButton: true,\r\n            });\r\n            saveItem({\r\n              ...this.state.item,\r\n            })\r\n              .then((response) => {\r\n                if (response.data != null && response.status == 200) {\r\n                  this.state.item.id = response.data.id;\r\n                  this.setState({ ...this.state.item });\r\n                  // this.props.handleOKEditClose();\r\n                  toast.success(t(\"mess_add\"));\r\n                  this.setState({\r\n                    loading: false,\r\n                    isView: false,\r\n                    isViewButton: false,\r\n                  });\r\n                }\r\n              })\r\n              .catch(() => {\r\n                toast.warning(t(\"mess_add_error\"));\r\n                this.setState({\r\n                  loading: false,\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                });\r\n              });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      if (id) {\r\n        this.setState({ isView: true, isRoleAdmin: false, isViewButton: true });\r\n        saveItem({\r\n          ...this.state.item,\r\n        })\r\n          .then((response) => {\r\n            if (response.data != null && response.status == 200) {\r\n              this.setState({ ...this.state.item });\r\n              // this.props.handleOKEditClose();\r\n              toast.success(t(\"mess_edit\"));\r\n              this.setState({\r\n                loading: false,\r\n                isView: false,\r\n                isViewButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.setState({ loading: false });\r\n            toast.warning(t(\"mess_edit_error\"));\r\n            this.setState({ isView: false, isViewButton: false });\r\n          });\r\n      } else {\r\n        this.setState({ isView: true, isRoleAdmin: false, isViewButton: true });\r\n        saveItem({\r\n          ...this.state.item,\r\n        })\r\n          .then((response) => {\r\n            if (response.data != null && response.status == 200) {\r\n              this.state.item.id = response.data.id;\r\n              this.setState({ ...this.state.item });\r\n              // this.props.handleOKEditClose();\r\n              toast.success(t(\"mess_add\"));\r\n              this.setState({\r\n                loading: false,\r\n                isView: false,\r\n                isViewButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.warning(t(\"mess_add_error\"));\r\n            this.setState({\r\n              loading: false,\r\n              isView: false,\r\n              isViewButton: false,\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    let {\r\n      open,\r\n      handleClose,\r\n      item,\r\n      isRoleAdmin,\r\n      isView,\r\n      listHealthOrgRound,\r\n    } = this.props;\r\n    this.setState({ isRoleAdmin: isRoleAdmin, isView: isView });\r\n    if (item && item.details && item.details.length > 0) {\r\n      item.details.sort((a, b) =>\r\n        a.orderNumber > b.orderNumber\r\n          ? 1\r\n          : a.orderNumber === b.orderNumber\r\n          ? a.sampleTube.code > b.sampleTube.code\r\n            ? 1\r\n            : -1\r\n          : -1\r\n      );\r\n    }\r\n\r\n    if (item.id == null) {\r\n      item[\"id\"] = null;\r\n      item[\"typeMethod\"] = 2;\r\n      item[\"otherReagent\"] = false;\r\n    }\r\n\r\n    if (listHealthOrgRound != null && listHealthOrgRound.length > 0) {\r\n      item[\"healthOrgRound\"] = listHealthOrgRound[0];\r\n    }\r\n    this.setState(\r\n      { item: item, listHealthOrgRound: listHealthOrgRound, ...item },\r\n      function () {}\r\n    );\r\n  }\r\n\r\n  handleSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchDialog: false,\r\n    });\r\n  };\r\n\r\n  handleSearchEQARoundDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchEQARoundSearchDialog: false,\r\n    });\r\n  };\r\n\r\n  sendResults = () => {\r\n    let { item, checkTheStatus } = this.state;\r\n    checkTheStatus = true;\r\n    this.setState({ checkTheStatus: checkTheStatus }, () => {});\r\n  };\r\n\r\n  handleHealthOrgRoundPopupClose = () => {\r\n    this.setState({ shouldOpenHealthOrgRoundPopup: false }, function () {});\r\n  };\r\n\r\n  handleSelectHealthOrgRound = (healthOrgRound) => {\r\n    if (healthOrgRound && healthOrgRound.id) {\r\n      this.setState({ healthOrgRound }, function () {\r\n        let { healthOrgRound, details } = this.state;\r\n        details = [];\r\n        getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(\r\n          (result) => {\r\n            let listEQASampleTube = result.data;\r\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\r\n              listEQASampleTube.forEach((tube) => {\r\n                let eQAResultReportDetail = {};\r\n                eQAResultReportDetail.sampleTube = tube;\r\n                eQAResultReportDetail.cLine = \"\";\r\n                eQAResultReportDetail.tLine = \"\";\r\n                eQAResultReportDetail.result = \"\";\r\n                details.push(eQAResultReportDetail);\r\n              });\r\n            }\r\n            this.setState({ details });\r\n          }\r\n        );\r\n      });\r\n    }\r\n    this.handleHealthOrgRoundPopupClose();\r\n  };\r\n\r\n  handleDialogFinalResultClose = () => {\r\n    this.handleDialogClose();\r\n  };\r\n  handleExportExcel = () => {\r\n    let { t } = this.props;\r\n      exportToExcel(this.state.id)\r\n        .then((res) => {\r\n          toast.info(this.props.t('general.successExport'));\r\n          let blob = new Blob([res.data], {\r\n            type:\r\n              \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n          });\r\n          saveAs(blob, \"Ketqua.xlsx\");\r\n        })\r\n        .catch((err) => {\r\n          // console.log(err);\r\n        });\r\n    // console.log(this.state);\r\n  };\r\n  handleExportPDF = () => {\r\n    this.setState({\r\n      shouldOpenPrintDialog: true,\r\n    });\r\n  }\r\n  handleClose = () => {\r\n    this.setState({\r\n      shouldOpenPrintDialog: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { selected, hasErrorHealthOrgRound, hasErrorEQARound } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    let {\r\n      isView,\r\n      isViewButton,\r\n      isFinalResult,\r\n      healthOrgRound,\r\n      round,\r\n      isRoleAdmin,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <Dialog open={open} maxWidth={\"lg\"} fullWidth={true}>\r\n        <div className={clsx(\"wrapperButton\", !loading && \"hidden\")}>\r\n          <CircularProgress className=\"buttonProgress\" size={24} />\r\n        </div>\r\n        {this.state.shouldOpenPrintDialog && (\r\n                <EQAResultReportFastTestPrint t={t} i18n={i18n}\r\n                  handleClose={this.handleClose}\r\n                  open={this.state.shouldOpenPrintDialog}\r\n                  handleOKEditClose={handleOKEditClose}\r\n                  item={this.state.item}\r\n                  pdf={true}\r\n                // isRoleAdmin={this.state.isRoleAdmin}\r\n                // isView={this.state.isView}\r\n                />\r\n              )}\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n            <span className=\"mb-20\">{t(\"SaveUpdate\")}</span>\r\n            <IconButton\r\n              style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              onClick={() => handleClose()}\r\n            >\r\n              <Icon color=\"error\" title={t(\"close\")}>\r\n                close\r\n              </Icon>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid item xs={12}>\r\n              <EQAResultReportFastTestTabs\r\n                t={t}\r\n                i18n={i18n}\r\n                item={this.state.item}\r\n                isView={this.props.isView}\r\n                isRoleAdmin={this.props.isRoleAdmin}\r\n              />\r\n            </Grid>\r\n\r\n            <div className=\"flex flex-end flex-middle mt-16\"></div>\r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n       \r\n            {(!isView || isRoleAdmin) && (\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"inherit\"\r\n                onClick={() => this.sendResults()}\r\n                style={{ backgroundColor: \"#4caf50\", color: \"#fff\" }}\r\n              >\r\n                {t(\"EQAResultReportFastTest.sendResult\")}\r\n              </Button>\r\n            )}\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-16\"\r\n              color=\"secondary\"\r\n              type=\"button\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              {\" \"}\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {(!isView || isRoleAdmin) && (\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"Save\")}\r\n              </Button>\r\n            )}\r\n            {this.state.id && (\r\n              <Button\r\n                variant=\"contained\"\r\n                // disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={this.handleExportPDF}\r\n              >\r\n                {t(\"Xuất PDF\")}\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAResultReportFastTestEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}