{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\HealthOrgRegisterForm\\\\HealthOrgRegisterFormEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, FormControlLabel, Switch } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\nimport { getItemById } from \"./HealthOrgRegisterFormService\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport EQARoundSearchDialog from \"./EQARoundSearchDialog\";\nimport EQAHealthOrgSearchDialog from \"./EQAHealthOrgSearchDialog\";\nimport EQASampleSetSearchDialog from \"./EQASampleSetSearchDialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { Helmet } from \"react-helmet\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar EQAHealthOrgRoundRegisterEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQAHealthOrgRoundRegisterEditorDialog, _Component);\n\n  var _super = _createSuper(EQAHealthOrgRoundRegisterEditorDialog);\n\n  function EQAHealthOrgRoundRegisterEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, EQAHealthOrgRoundRegisterEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      status: 1,\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        var status = 0;\n\n        if (event.target.checked) {\n          status = 1;\n        }\n\n        _this.setState({\n          status: status\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {};\n\n    _this.handleRoundSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenRoundSearchDialog: false\n      });\n    };\n\n    _this.handleSelectRound = function (item) {\n      //alert('Test');\n      _this.setState({\n        round: item\n      });\n\n      _this.handleRoundSearchDialogClose();\n    };\n\n    _this.handleHealthOrgSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgSearchDialog: false\n      });\n    };\n\n    _this.handleSelectHealthOrg = function (item) {\n      //alert('Test');\n      _this.setState({\n        healthOrg: item\n      });\n\n      _this.handleHealthOrgSearchDialogClose();\n    };\n\n    _this.handleSampleSetSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenSampleSetSearchDialog: false\n      });\n    };\n\n    _this.handleSelectSampleSet = function (item) {\n      //alert('Test');\n      _this.setState({\n        sampleSet: item\n      });\n\n      _this.handleSampleSetSearchDialogClose();\n    };\n\n    _this.handleDateChange = function (date, name) {\n      _this.setState({\n        [name]: date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAHealthOrgRoundRegisterEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(_objectSpread({}, this.props.item));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          shouldOpenHealthOrgSearchDialog = _this$state.shouldOpenHealthOrgSearchDialog,\n          shouldOpenRoundSearchDialog = _this$state.shouldOpenRoundSearchDialog,\n          shouldOpenSampleSetSearchDialog = _this$state.shouldOpenSampleSetSearchDialog,\n          healthOrg = _this$state.healthOrg,\n          round = _this$state.round,\n          sampleSet = _this$state.sampleSet,\n          status = _this$state.status,\n          feeStatus = _this$state.feeStatus,\n          hasResult = _this$state.hasResult;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var sampleColumns = [{\n        title: t(\"SampleManagement.sample-list.Name\"),\n        field: \"sample.name\",\n        width: \"150\"\n      }, {\n        title: t(\"SampleManagement.sample-list.Code\"),\n        field: \"sample.code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"SampleManagement.sample-list.Result.title\"),\n        field: \"status\",\n        align: \"left\",\n        width: \"150\",\n        render: function render(rowData) {\n          return rowData.status == 1 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 13\n            }\n          }, t(\"SampleManagement.sample-list.Result.positive\")) : /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }\n          }, t(\"SampleManagement.sample-list.Result.negative\"));\n        }\n      }, {\n        title: t(\"SampleManagement.sample-list.AdditiveThrombin\"),\n        field: \"sample.additiveThrombin\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"SampleManagement.sample-list.VolumeAfterRemoveFibrin\"),\n        field: \"sample.volumeAfterRemoveFibrin\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"SampleManagement.sample-list.VolumeAfterCentrifuge\"),\n        field: \"sample.volumeAfterCentrifuge\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"SampleManagement.sample-list.VolumeOfProclinAdded\"),\n        field: \"sample.volumeOfProclinAdded\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }\n      }, t(\"EQAHealthOrgRoundRegister.titlePage\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 9\n        }\n      }, t(\"SaveUpdate\")), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        placeholder: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        id: \"healthOrg\",\n        className: \"w-80 mb-16 mr-16\",\n        value: healthOrg != null ? healthOrg.name : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenHealthOrgSearchDialog: true,\n            item: {}\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }\n      }, t(\"Select\"))), shouldOpenHealthOrgSearchDialog && /*#__PURE__*/React.createElement(EQAHealthOrgSearchDialog, {\n        open: this.state.shouldOpenHealthOrgSearchDialog,\n        handleSelect: this.handleSelectHealthOrg,\n        selectedItem: healthOrg != null ? healthOrg : {},\n        handleClose: this.handleHealthOrgSearchDialogClose,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"EQAHealthOrgRoundRegister.RoundName\"),\n        placeholder: t(\"EQAHealthOrgRoundRegister.RoundName\"),\n        id: \"round\",\n        className: \"w-80 mb-16 mr-16\",\n        value: round != null ? round.name : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenRoundSearchDialog: true,\n            item: {}\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, t(\"Select\"))), shouldOpenRoundSearchDialog && /*#__PURE__*/React.createElement(EQARoundSearchDialog, {\n        open: this.state.shouldOpenRoundSearchDialog,\n        handleSelect: this.handleSelectRound,\n        selectedItem: round != null ? round : {},\n        handleClose: this.handleRoundSearchDialogClose,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }), round != null && round.id != \"\" && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: t(\"EQAHealthOrgRoundRegister.SetName\"),\n        placeholder: t(\"EQAHealthOrgRoundRegister.SetName\"),\n        id: \"RoundName\",\n        className: \"w-80 mb-16 mr-16\",\n        value: sampleSet != null ? sampleSet.name : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.setState({\n            shouldOpenSampleSetSearchDialog: true,\n            item: {}\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 19\n        }\n      }, t(\"Select\"))), shouldOpenSampleSetSearchDialog && /*#__PURE__*/React.createElement(EQASampleSetSearchDialog, {\n        open: this.state.shouldOpenSampleSetSearchDialog,\n        handleSelect: this.handleSelectSampleSet,\n        selectedItem: sampleSet != null ? sampleSet : {},\n        handleClose: this.handleSampleSetSearchDialogClose,\n        t: t,\n        i18n: i18n,\n        eqaRoundId: round != null ? round.id : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"hasResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 19\n        }\n      }, t(\"EQAHealthOrgRoundRegister.HasResult.title\")), /*#__PURE__*/React.createElement(Select, {\n        name: \"hasResult\",\n        value: hasResult,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        },\n        input: /*#__PURE__*/React.createElement(Input, {\n          id: \"hasResult\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 28\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.HasResult.No\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.HasResult.Yes\"))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"feeStatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 19\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.title\")), /*#__PURE__*/React.createElement(Select, {\n        name: \"feeStatus\",\n        value: feeStatus,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        },\n        input: /*#__PURE__*/React.createElement(Input, {\n          id: \"feeStatus\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 28\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.No\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.Yes\"))))), /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        className: \"my-20\",\n        control: /*#__PURE__*/React.createElement(Switch, {\n          checked: status,\n          onChange: function onChange(event) {\n            return _this2.handleChange(event, \"switch\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 21\n          }\n        }),\n        label: t(\"EQAHealthOrgRoundRegister.Status.title\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }\n      }, this.state.sampleSet != null && this.state.sampleSet.details != null && /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"SampleManagement.sample-list.title\"),\n        data: this.state.sampleSet.details,\n        columns: sampleColumns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }\n      }, t(\"Save\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 15\n        }\n      }, \" \", t(\"Cancel\"))))));\n    }\n  }]);\n\n  return EQAHealthOrgRoundRegisterEditorDialog;\n}(Component);\n\nexport default EQAHealthOrgRoundRegisterEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/HealthOrgRegisterForm/HealthOrgRegisterFormEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","FormControlLabel","Switch","ValidatorForm","TextValidator","TextField","getItemById","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","EQARoundSearchDialog","EQAHealthOrgSearchDialog","EQASampleSetSearchDialog","DialogContent","DialogTitle","Draggable","Paper","Input","InputLabel","MenuItem","FormControl","Select","Helmet","PaperComponent","props","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","EQAHealthOrgRoundRegisterEditorDialog","state","status","shouldOpenSearchDialog","shouldOpenConfirmationDialog","handleChange","event","source","persist","target","checked","setState","name","value","handleFormSubmit","handleRoundSearchDialogClose","shouldOpenRoundSearchDialog","handleSelectRound","item","round","handleHealthOrgSearchDialogClose","shouldOpenHealthOrgSearchDialog","handleSelectHealthOrg","healthOrg","handleSampleSetSearchDialogClose","shouldOpenSampleSetSearchDialog","handleSelectSampleSet","sampleSet","handleDateChange","date","open","handleClose","feeStatus","hasResult","handleOKEditClose","t","i18n","sampleColumns","title","field","width","align","render","rowData","cursor","id","details","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","search","body","emptyDataSourceMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  FormControlLabel,\r\n  Switch\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ValidatorForm,\r\n  TextValidator,\r\n  TextField\r\n} from \"react-material-ui-form-validator\";\r\nimport { getItemById } from \"./HealthOrgRegisterFormService\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader\r\n} from \"material-table\";\r\nimport EQARoundSearchDialog from \"./EQARoundSearchDialog\";\r\nimport EQAHealthOrgSearchDialog from \"./EQAHealthOrgSearchDialog\";\r\nimport EQASampleSetSearchDialog from \"./EQASampleSetSearchDialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\nclass EQAHealthOrgRoundRegisterEditorDialog extends Component {\r\n  state = {\r\n    status: 1,\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      let status = 0;\r\n      if (event.target.checked) {\r\n        status = 1;\r\n      }\r\n      this.setState({ status: status });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {};\r\n\r\n  handleRoundSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenRoundSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectRound = item => {\r\n    //alert('Test');\r\n    this.setState({ round: item });\r\n    this.handleRoundSearchDialogClose();\r\n  };\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState({\r\n      ...this.props.item\r\n    });\r\n  }\r\n  handleHealthOrgSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenHealthOrgSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectHealthOrg = item => {\r\n    //alert('Test');\r\n    this.setState({ healthOrg: item });\r\n    this.handleHealthOrgSearchDialogClose();\r\n  };\r\n\r\n  //Set mau\r\n  handleSampleSetSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSampleSetSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectSampleSet = item => {\r\n    //alert('Test');\r\n    this.setState({ sampleSet: item });\r\n    this.handleSampleSetSearchDialogClose();\r\n  };\r\n  handleDateChange = (date, name) => {\r\n    this.setState({\r\n      [name]: date\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      shouldOpenHealthOrgSearchDialog,\r\n      shouldOpenRoundSearchDialog,\r\n      shouldOpenSampleSetSearchDialog,\r\n      healthOrg,\r\n      round,\r\n      sampleSet,\r\n      status,\r\n      feeStatus,\r\n      hasResult\r\n    } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    let sampleColumns = [\r\n      {\r\n        title: t(\"SampleManagement.sample-list.Name\"),\r\n        field: \"sample.name\",\r\n        width: \"150\"\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.Code\"),\r\n        field: \"sample.code\",\r\n        align: \"left\",\r\n        width: \"150\"\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.Result.title\"),\r\n        field: \"status\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        render: rowData =>\r\n          rowData.status == 1 ? (\r\n            <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\r\n              {t(\"SampleManagement.sample-list.Result.positive\")}\r\n            </small>\r\n          ) : (\r\n            <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n              {t(\"SampleManagement.sample-list.Result.negative\")}\r\n            </small>\r\n          )\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.AdditiveThrombin\"),\r\n        field: \"sample.additiveThrombin\",\r\n        align: \"left\",\r\n        width: \"150\"\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.VolumeAfterRemoveFibrin\"),\r\n        field: \"sample.volumeAfterRemoveFibrin\",\r\n        align: \"left\",\r\n        width: \"150\"\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.VolumeAfterCentrifuge\"),\r\n        field: \"sample.volumeAfterCentrifuge\",\r\n        align: \"left\",\r\n        width: \"150\"\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.VolumeOfProclinAdded\"),\r\n        field: \"sample.volumeOfProclinAdded\",\r\n        align: \"left\",\r\n        width: \"150\"\r\n      }\r\n    ];\r\n    return (\r\n      <Dialog open={open} PaperComponent={PaperComponent} maxWidth={\"md\"} fullWidth={true}>\r\n        <Helmet>\r\n          <title>\r\n            {t(\"EQAHealthOrgRoundRegister.titlePage\")} | {t(\"web_site\")}\r\n          </title>\r\n        </Helmet>\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          {t(\"SaveUpdate\")}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  label={t(\"EQAHealthOrgRoundRegister.HealthOrgName\")}\r\n                  placeholder={t(\"EQAHealthOrgRoundRegister.HealthOrgName\")}\r\n                  id=\"healthOrg\"\r\n                  className=\"w-80 mb-16 mr-16\"\r\n                  value={healthOrg != null ? healthOrg.name : \"\"}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n\r\n                <Button\r\n                  className=\"mb-16 align-bottom\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      shouldOpenHealthOrgSearchDialog: true,\r\n                      item: {}\r\n                    })\r\n                  }\r\n                >\r\n                  {t(\"Select\")}\r\n                </Button>\r\n              </Grid>\r\n              {shouldOpenHealthOrgSearchDialog && (\r\n                <EQAHealthOrgSearchDialog\r\n                  open={this.state.shouldOpenHealthOrgSearchDialog}\r\n                  handleSelect={this.handleSelectHealthOrg}\r\n                  selectedItem={healthOrg != null ? healthOrg : {}}\r\n                  handleClose={this.handleHealthOrgSearchDialogClose}\r\n                  t={t}\r\n                  i18n={i18n}\r\n                />\r\n              )}\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  label={t(\"EQAHealthOrgRoundRegister.RoundName\")}\r\n                  placeholder={t(\"EQAHealthOrgRoundRegister.RoundName\")}\r\n                  id=\"round\"\r\n                  className=\"w-80 mb-16 mr-16\"\r\n                  value={round != null ? round.name : \"\"}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n                <Button\r\n                  className=\"mb-16 align-bottom\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      shouldOpenRoundSearchDialog: true,\r\n                      item: {}\r\n                    })\r\n                  }\r\n                >\r\n                  {t(\"Select\")}\r\n                </Button>\r\n              </Grid>\r\n              {shouldOpenRoundSearchDialog && (\r\n                <EQARoundSearchDialog\r\n                  open={this.state.shouldOpenRoundSearchDialog}\r\n                  handleSelect={this.handleSelectRound}\r\n                  selectedItem={round != null ? round : {}}\r\n                  handleClose={this.handleRoundSearchDialogClose}\r\n                  t={t}\r\n                  i18n={i18n}\r\n                />\r\n              )}\r\n\r\n              {round != null && round.id != \"\" && (\r\n                <Grid item sm={12} xs={12}>\r\n                  <TextValidator\r\n                    label={t(\"EQAHealthOrgRoundRegister.SetName\")}\r\n                    placeholder={t(\"EQAHealthOrgRoundRegister.SetName\")}\r\n                    id=\"RoundName\"\r\n                    className=\"w-80 mb-16 mr-16\"\r\n                    value={sampleSet != null ? sampleSet.name : \"\"}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[t(\"general.errorMessages_required\")]}\r\n                  />\r\n                  <Button\r\n                    className=\"mb-16 align-bottom\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() =>\r\n                      this.setState({\r\n                        shouldOpenSampleSetSearchDialog: true,\r\n                        item: {}\r\n                      })\r\n                    }\r\n                  >\r\n                    {t(\"Select\")}\r\n                  </Button>\r\n                </Grid>\r\n              )}\r\n              {shouldOpenSampleSetSearchDialog && (\r\n                <EQASampleSetSearchDialog\r\n                  open={this.state.shouldOpenSampleSetSearchDialog}\r\n                  handleSelect={this.handleSelectSampleSet}\r\n                  selectedItem={sampleSet != null ? sampleSet : {}}\r\n                  handleClose={this.handleSampleSetSearchDialogClose}\r\n                  t={t}\r\n                  i18n={i18n}\r\n                  eqaRoundId={round != null ? round.id : \"\"}\r\n                />\r\n              )}\r\n              <Grid item sm={6} xs={12}>\r\n                <FormControl className=\"w-100\">\r\n                  <InputLabel htmlFor=\"hasResult\">\r\n                    {t(\"EQAHealthOrgRoundRegister.HasResult.title\")}\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"hasResult\"\r\n                    value={hasResult}\r\n                    onChange={event => this.handleChange(event)}\r\n                    input={<Input id=\"hasResult\" />}\r\n                  >\r\n                    <MenuItem value={false}>\r\n                      {t(\"EQAHealthOrgRoundRegister.HasResult.No\")}\r\n                    </MenuItem>\r\n                    <MenuItem value={true}>\r\n                      {t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")}\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <FormControl className=\"w-100\">\r\n                  <InputLabel htmlFor=\"feeStatus\">\r\n                    {t(\"EQAHealthOrgRoundRegister.FeeStatus.title\")}\r\n                  </InputLabel>\r\n                  <Select\r\n                    name=\"feeStatus\"\r\n                    value={feeStatus}\r\n                    onChange={event => this.handleChange(event)}\r\n                    input={<Input id=\"feeStatus\" />}\r\n                  >\r\n                    <MenuItem value={0}>\r\n                      {t(\"EQAHealthOrgRoundRegister.FeeStatus.No\")}\r\n                    </MenuItem>\r\n                    <MenuItem value={1}>\r\n                      {t(\"EQAHealthOrgRoundRegister.FeeStatus.Yes\")}\r\n                    </MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid>\r\n                <FormControlLabel\r\n                  className=\"my-20\"\r\n                  control={\r\n                    <Switch\r\n                      checked={status}\r\n                      onChange={event => this.handleChange(event, \"switch\")}\r\n                    />\r\n                  }\r\n                  label={t(\"EQAHealthOrgRoundRegister.Status.title\")}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                {this.state.sampleSet != null &&\r\n                  this.state.sampleSet.details != null && (\r\n                    <MaterialTable\r\n                      title={t(\"SampleManagement.sample-list.title\")}\r\n                      data={this.state.sampleSet.details}\r\n                      columns={sampleColumns}\r\n                      parentChildData={(row, rows) => {\r\n                        var list = rows.find(a => a.id === row.parentId);\r\n                        return list;\r\n                      }}\r\n                      options={{\r\n                        selection: false,\r\n                        actionsColumnIndex: -1,\r\n                        paging: false,\r\n                        search: false\r\n                      }}\r\n                      localization={{\r\n                      body: {\r\n                        emptyDataSourceMessage: `${t(\r\n                          \"general.emptyDataMessageTable\"\r\n                        )}`,\r\n                      },\r\n                    }}\r\n                    />\r\n                  )}\r\n              </Grid>\r\n            </Grid>\r\n            <div className=\"flex flex-space-between flex-middle\">\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                {t(\"Save\")}\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => handleClose()}\r\n              >\r\n                {\" \"}\r\n                {t(\"Cancel\")}\r\n              </Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </DialogContent>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAHealthOrgRoundRegisterEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}