{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\ResultsOfTheUnits\\\\ResultsOfTheUnits.jsx\";\nimport React, { Component } from \"react\";\nimport { IconButton, Grid, Icon, TablePagination, Button, FormControl, MenuItem, Select, FormHelperText, InputLabel, Input, InputAdornment } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { searchByDto, searchByPage, getItemById, exportToExcel, getEQARoundsByYear, search as searchPlanning, getEQARoundsByPlanning } from \"./ResultsOfTheUnitsService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { saveAs } from 'file-saver';\nimport { Link } from \"react-router-dom\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport HealthOrgEQARoundViewDetailDialog from \"./HealthOrgEQARoundViewDetailDialog\";\nimport { Helmet } from 'react-helmet';\nimport { toast } from \"react-toastify\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3 //etc you get the idea\n\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(VisibilityIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 35\n    }\n  }))));\n}\n\nvar ResultsOfTheUnits = /*#__PURE__*/function (_Component) {\n  _inherits(ResultsOfTheUnits, _Component);\n\n  var _super = _createSuper(ResultsOfTheUnits);\n\n  function ResultsOfTheUnits() {\n    var _this;\n\n    _classCallCheck(this, ResultsOfTheUnits);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      qualificationList: [],\n      item: {},\n      roundId: '',\n      listYear: [],\n      listEQARound: [],\n      listPlanning: [],\n      currentYear: new Date().getFullYear(),\n      shouldOpenViewDetailDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      keyword: ''\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n    _this.currentYear = new Date().getFullYear();\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"PlanningId\") {\n        _this.getEQARoundsByPlanning(event.target.value);\n\n        return;\n      }\n\n      if (source === \"roundId\") {\n        _this.handleChangeEQARound(event.target.value);\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.bindDataToComboboxListYear = function () {\n      if (_this.currentYear != null && _this.currentYear > 0) {\n        var listYear = [];\n\n        for (var index = 2000; index <= _this.currentYear + 10; index++) {\n          var year = {\n            id: index,\n            name: '' + index\n          };\n          listYear.push(year);\n        }\n\n        _this.setState({\n          listYear: listYear\n        }, function () {});\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.clearKeyword = function () {\n      _this.search();\n\n      _this.setState({\n        keyword: ''\n      }, function () {});\n    };\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleChangeEQARound = function (eQARoundIdSelected) {\n      if (eQARoundIdSelected != null && eQARoundIdSelected != '') {\n        _this.setState({\n          roundId: eQARoundIdSelected,\n          itemList: []\n        }, function () {\n          this.search();\n        });\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.keyword;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchObject.roundId = _this.state.roundId;\n      searchByDto(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenViewDetailDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenViewDetailDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteResultsOfTheUnits = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditResultsOfTheUnits = function (item) {\n      getItemById(item.id).then(function (result) {\n        _this.setState({\n          item: result.data,\n          shouldOpenViewDetailDialog: true\n        });\n      });\n    };\n\n    _this.getEQARoundsByPlanning = function (PlanningId) {\n      _this.setState({\n        PlanningId: PlanningId,\n        listEQARound: [],\n        itemList: []\n      }, function () {\n        var _this2 = this;\n\n        getEQARoundsByPlanning(PlanningId).then(function (_ref2) {\n          var data = _ref2.data;\n\n          if (data != null && data.length > 0) {\n            _this2.setState({\n              listEQARound: _toConsumableArray(data),\n              roundId: data[0].id\n            }, function () {\n              this.handleChangeEQARound(data[0].id);\n            });\n          }\n        });\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenViewDetailDialog: true\n      });\n    };\n\n    _this.exportToExcel = function () {\n      var t = _this.props.t;\n      var searchObject = {};\n\n      if (_this.state.roundId == null || _this.state.roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      }\n\n      exportToExcel(_this.state.roundId ? _this.state.roundId : \"\").then(function (res) {\n        var blob = new Blob([res.data], {\n          type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n        });\n        saveAs(blob, 'EQAResultReport.xlsx');\n      }).catch(function (err) {// console.log(err)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ResultsOfTheUnits, [{\n    key: \"search\",\n    value: function search() {\n      this.setState({\n        page: 0\n      }, function () {\n        var _this3 = this;\n\n        var searchObject = {};\n        searchObject.text = this.state.keyword;\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n        searchObject.roundId = this.state.roundId;\n        searchByDto(searchObject, this.state.page, this.state.rowsPerPage).then(function (_ref3) {\n          var data = _ref3.data;\n\n          _this3.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      var searchObject = {\n        pageIndex: 1,\n        pageSize: 100\n      };\n      searchPlanning(searchObject).then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this4.setState({\n          listPlanning: _toConsumableArray(data.content)\n        });\n      });\n      this.search();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this5 = this;\n\n      getCurrentUser().then(function (res) {\n        var checkRoleAdmin = false;\n        res.data.roles.forEach(function (el) {\n          if (el.name == \"ROLE_ADMIN\" || el.authority == \"ROLE_ADMIN\") {\n            checkRoleAdmin = true;\n          }\n\n          if (checkRoleAdmin) {\n            _this5.setState({\n              isRoleAdmin: true,\n              isView: true\n            });\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          hasErrorCurrentYear = _this$state.hasErrorCurrentYear,\n          hasErrorRound = _this$state.hasErrorRound,\n          currentYear = _this$state.currentYear,\n          listYear = _this$state.listYear,\n          listPlanning = _this$state.listPlanning,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          listEQARound = _this$state.listEQARound,\n          PlanningId = _this$state.PlanningId,\n          roundId = _this$state.roundId,\n          keyword = _this$state.keyword,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenViewDetailDialog = _this$state.shouldOpenViewDetailDialog,\n          isRoleAdmin = _this$state.isRoleAdmin,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      var title = t('ResultsOfTheUnits.list_unit') + \" (\" + totalElements + \" \" + t('ResultsOfTheUnits.unit') + \")\";\n      var columns = [{\n        title: t(\"viewDetail\"),\n        field: \"custom\",\n        align: \"center\",\n        width: \"50\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref5) {\n                  var data = _ref5.data;\n\n                  _this6.setState({\n                    item: data,\n                    shouldOpenViewDetailDialog: true\n                  });\n                });\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 36\n            }\n          });\n        }\n      }, {\n        title: t(\"ResultsOfTheUnits.STT\"),\n        width: \"50\",\n        align: \"left\",\n        render: function render(rowData) {\n          return page * rowsPerPage + (rowData.tableData.id + 1);\n        }\n      }, {\n        title: t(\"ResultsOfTheUnits.health_org_code\"),\n        field: \"healthOrg.code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"ResultsOfTheUnits.health_org_name\"),\n        field: \"healthOrg.name\",\n        align: \"left\",\n        width: \"250\"\n      }, {\n        title: t(\"ResultsOfTheUnits.set\"),\n        field: \"sampleSet.name\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"ResultsOfTheUnits.hasResult.title\"),\n        field: \"hasResult\",\n        align: \"left\",\n        width: \"150\",\n        render: function render(rowData) {\n          return rowData.hasResult == true ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 25\n            }\n          }, t('ResultsOfTheUnits.hasResult.true')) : /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }\n          }, t('ResultsOfTheUnits.hasResult.false'));\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }, t(\"ResultsOfTheUnits.title\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"ReportResult.title\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t('ResultsOfTheUnits.title')\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 17\n        }\n      }, isRoleAdmin && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.exportToExcel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }, t('general.exportToExcel'))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        error: hasErrorCurrentYear,\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"planning-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 29\n        }\n      }, t('ResultsOfTheUnits.eqaPlanning')), /*#__PURE__*/React.createElement(Select, {\n        label: t('ResultsOfTheUnits.eqaPlanning'),\n        value: PlanningId,\n        onChange: function onChange(PlanningId) {\n          return _this6.handleChange(PlanningId, 'PlanningId');\n        },\n        required: true,\n        inputProps: {\n          name: \"planning\",\n          id: \"planning-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 29\n        }\n      }, listPlanning.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 44\n          }\n        }, item.name);\n      })), hasErrorCurrentYear && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 53\n        }\n      }, t(\"general.errorMessages_required\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        error: hasErrorRound,\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"round-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 29\n        }\n      }, t('ResultsOfTheUnits.round')), /*#__PURE__*/React.createElement(Select, {\n        label: t('ResultsOfTheUnits.round'),\n        value: roundId,\n        onChange: function onChange(roundId) {\n          return _this6.handleChange(roundId, 'roundId');\n        },\n        required: true,\n        inputProps: {\n          name: \"round\",\n          id: \"round-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 29\n        }\n      }, listEQARound.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 44\n          }\n        }, item.code);\n      })), hasErrorRound && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 47\n        }\n      }, t(\"general.errorMessages_required\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"standard-adornment-amount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        label: t('EnterSearch'),\n        type: \"text\",\n        name: \"keyword\",\n        className: \"stylePlaceholder mt-8\",\n        id: \"standard-adornment-amount\",\n        value: keyword,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        onChange: this.handleTextChange,\n        placeholder: t(\"general.enterSearch\"),\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this6.search(keyword);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 41\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 29\n        }\n      }))), shouldOpenViewDetailDialog && /*#__PURE__*/React.createElement(HealthOrgEQARoundViewDetailDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenViewDetailDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: title,\n        data: itemList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 37\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this6.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref6) {\n          var from = _ref6.from,\n              to = _ref6.to,\n              count = _ref6.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return ResultsOfTheUnits;\n}(Component);\n\nexport default ResultsOfTheUnits;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/ResultsOfTheUnits/ResultsOfTheUnits.jsx"],"names":["React","Component","IconButton","Grid","Icon","TablePagination","Button","FormControl","MenuItem","Select","FormHelperText","InputLabel","Input","InputAdornment","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","searchByDto","searchByPage","getItemById","exportToExcel","getEQARoundsByYear","search","searchPlanning","getEQARoundsByPlanning","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","SearchIcon","CloseIcon","saveAs","Link","VisibilityIcon","getCurrentUser","getListHealthOrgByUser","HealthOrgEQARoundViewDetailDialog","Helmet","toast","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","ResultsOfTheUnits","state","rowsPerPage","page","qualificationList","roundId","listYear","listEQARound","listPlanning","currentYear","Date","getFullYear","shouldOpenViewDetailDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","keyword","numSelected","rowCount","handleChange","event","source","persist","target","value","handleChangeEQARound","setState","name","bindDataToComboboxListYear","index","year","id","push","setPage","updatePageData","clearKeyword","handleTextChange","handleKeyDownEnterSearch","e","key","setRowsPerPage","handleChangePage","newPage","eQARoundIdSelected","itemList","searchObject","text","pageIndex","pageSize","then","data","content","handleDownload","blob","Blob","type","handleDialogClose","handleOKEditClose","handleDeleteResultsOfTheUnits","handleEditResultsOfTheUnits","result","PlanningId","length","handleEditItem","warn","res","catch","err","checkRoleAdmin","roles","forEach","el","authority","isRoleAdmin","isView","hasErrorCurrentYear","hasErrorRound","title","columns","field","align","width","render","rowData","method","alert","tableData","hasResult","path","map","code","position","top","right","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","Toolbar","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n    IconButton,\r\n    Grid,\r\n    Icon,\r\n    TablePagination,\r\n    Button,\r\n    FormControl,\r\n    MenuItem,\r\n    Select,\r\n    FormHelperText,\r\n    InputLabel,\r\n    Input,\r\n    InputAdornment\r\n} from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { searchByDto,searchByPage, getItemById,exportToExcel, getEQARoundsByYear, search as searchPlanning, getEQARoundsByPlanning } from \"./ResultsOfTheUnitsService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { saveAs } from 'file-saver';\r\nimport { Link } from \"react-router-dom\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {getCurrentUser,getListHealthOrgByUser} from \"../User/UserService\"\r\nimport HealthOrgEQARoundViewDetailDialog from \"./HealthOrgEQARoundViewDetailDialog\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { toast } from \"react-toastify\";\r\ntoast.configure({\r\n  autoClose: 2000,\r\n  draggable: false,\r\n  limit:3\r\n  //etc you get the idea\r\n});\r\nfunction MaterialButton(props) {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const item = props.item;\r\n    return <div>\r\n        <IconButton onClick={() => props.onSelect(item, 0)}>\r\n            <Icon color=\"primary\"><VisibilityIcon /></Icon>\r\n        </IconButton>\r\n    </div>;\r\n}\r\n\r\nclass ResultsOfTheUnits extends Component {\r\n    state = {\r\n        rowsPerPage: 10,\r\n        page: 0,\r\n        qualificationList: [],\r\n        item: {},\r\n        roundId: '',\r\n        listYear: [],\r\n        listEQARound: [],\r\n        listPlanning: [],\r\n        currentYear: new Date().getFullYear(),\r\n        shouldOpenViewDetailDialog: false,\r\n        shouldOpenConfirmationDialog: false,\r\n        selectAllItem: false,\r\n        selectedList: [],\r\n        totalElements: 0,\r\n        shouldOpenConfirmationDeleteAllDialog: false,\r\n        keyword: ''\r\n    };\r\n    numSelected = 0;\r\n    rowCount = 0;\r\n\r\n    currentYear = new Date().getFullYear();\r\n\r\n    handleChange = (event, source) => {\r\n        event.persist();\r\n        if (source === \"PlanningId\") {\r\n            this.getEQARoundsByPlanning(event.target.value);\r\n            return;\r\n        }\r\n        if (source === \"roundId\") {\r\n            this.handleChangeEQARound(event.target.value);\r\n            return;\r\n        }\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    bindDataToComboboxListYear = () => {\r\n        if (this.currentYear != null && this.currentYear > 0) {\r\n            let listYear = [];\r\n            for (let index = 2000; index <= (this.currentYear + 10); index++) {\r\n                let year = { id: index, name: '' + index };\r\n                listYear.push(year);\r\n            }\r\n            this.setState({ listYear: listYear }, function () {\r\n            });\r\n        }\r\n    };\r\n\r\n    setPage = page => {\r\n        this.setState({ page }, function () {\r\n            this.updatePageData();\r\n        })\r\n    };\r\n\r\n    clearKeyword = () => {\r\n        this.search()\r\n        this.setState({ keyword: '' }, function () {\r\n        });\r\n    };\r\n\r\n    handleTextChange = event => {\r\n        this.setState({ keyword: event.target.value }, function () {\r\n        });\r\n    };\r\n\r\n    handleKeyDownEnterSearch = e => {\r\n        if (e.key === 'Enter') {\r\n            this.search();\r\n        }\r\n    };\r\n\r\n    setRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n            this.updatePageData();\r\n        });\r\n    };\r\n\r\n    handleChangePage = (event, newPage) => {\r\n        this.setPage(newPage);\r\n    };\r\n\r\n    handleChangeEQARound = (eQARoundIdSelected) => {\r\n        if (eQARoundIdSelected != null && eQARoundIdSelected != '') {\r\n            this.setState({ roundId: eQARoundIdSelected, itemList: [] }, function () {\r\n                this.search();\r\n            });\r\n        }\r\n    };\r\n\r\n    search() {\r\n        this.setState({ page: 0 }, function () {\r\n            var searchObject = {};\r\n            searchObject.text = this.state.keyword;\r\n            searchObject.pageIndex = this.state.page + 1;\r\n            searchObject.pageSize = this.state.rowsPerPage;\r\n            searchObject.roundId = this.state.roundId ;\r\n            searchByDto(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n                this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n            });\r\n        });\r\n    }\r\n\r\n    updatePageData = () => {\r\n        var searchObject = {};\r\n        searchObject.text = this.state.keyword;\r\n        searchObject.pageIndex = this.state.page + 1;\r\n        searchObject.pageSize = this.state.rowsPerPage;\r\n        searchObject.roundId = this.state.roundId ;\r\n        searchByDto(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n            this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n        });\r\n    };\r\n\r\n    handleDownload = () => {\r\n        var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n        saveAs(blob, \"hello world.txt\");\r\n    }\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            shouldOpenViewDetailDialog: false,\r\n            shouldOpenConfirmationDialog: false,\r\n            shouldOpenConfirmationDeleteAllDialog: false\r\n        });\r\n    };\r\n\r\n    handleOKEditClose = () => {\r\n        this.setState({\r\n            shouldOpenViewDetailDialog: false,\r\n            shouldOpenConfirmationDialog: false\r\n        });\r\n        this.updatePageData();\r\n    };\r\n\r\n    handleDeleteResultsOfTheUnits = id => {\r\n        this.setState({\r\n            id,\r\n            shouldOpenConfirmationDialog: true\r\n        });\r\n    };\r\n\r\n    handleEditResultsOfTheUnits = item => {\r\n        getItemById(item.id).then((result) => {\r\n            this.setState({\r\n                item: result.data,\r\n                shouldOpenViewDetailDialog: true\r\n            });\r\n        });\r\n    };\r\n\r\n    getEQARoundsByPlanning = PlanningId =>{\r\n        this.setState({ PlanningId: PlanningId , listEQARound: [], itemList: []}, function (){\r\n            getEQARoundsByPlanning(PlanningId).then(({data})=>{\r\n                if (data != null && data.length > 0) {\r\n                    this.setState({ listEQARound: [...data], roundId: data[0].id }, function () {\r\n                        this.handleChangeEQARound(data[0].id);\r\n                    });\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        var searchObject = {pageIndex: 1 , pageSize: 100};\r\n        searchPlanning(searchObject).then(({data})=>{\r\n              this.setState({listPlanning: [...data.content]}); \r\n      });\r\n      this.search();\r\n    }\r\n    componentWillMount (){\r\n        getCurrentUser().then(res=>{\r\n            let checkRoleAdmin = false\r\n            res.data.roles.forEach(el =>{\r\n                if(el.name == \"ROLE_ADMIN\" || el.authority == \"ROLE_ADMIN\"){\r\n                  checkRoleAdmin = true\r\n                }\r\n                if(checkRoleAdmin){\r\n                    this.setState({isRoleAdmin:true,isView: true})\r\n                  }\r\n              })\r\n          })\r\n    }\r\n    handleEditItem = item => {\r\n        this.setState({\r\n            item: item,\r\n            shouldOpenViewDetailDialog: true\r\n        });\r\n    };\r\n    exportToExcel = () => {\r\n        const { t } = this.props;\r\n        let searchObject = {}\r\n        if(this.state.roundId == null || this.state.roundId == \"\"){\r\n          toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n          return\r\n        }\r\n          exportToExcel(this.state.roundId ? this.state.roundId :\"\").then((res) => {\r\n            let blob = new Blob([res.data], {\r\n              type:\r\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n            })\r\n            saveAs(blob, 'EQAResultReport.xlsx')\r\n          })\r\n          .catch((err) => {\r\n            // console.log(err)\r\n          })\r\n      }\r\n    render() {\r\n        const { t, i18n } = this.props;\r\n        let {\r\n            hasErrorCurrentYear,\r\n            hasErrorRound,\r\n            currentYear,\r\n            listYear,\r\n            listPlanning,\r\n            rowsPerPage,\r\n            page,\r\n            totalElements,\r\n            itemList,\r\n            listEQARound,\r\n            PlanningId,\r\n            roundId,\r\n            keyword,\r\n            item,\r\n            shouldOpenConfirmationDialog,\r\n            shouldOpenViewDetailDialog,isRoleAdmin,\r\n            shouldOpenConfirmationDeleteAllDialog\r\n        } = this.state;\r\n\r\n        let title = t('ResultsOfTheUnits.list_unit') + \" (\" + totalElements + \" \" + t('ResultsOfTheUnits.unit') + \")\";\r\n\r\n        let columns = [\r\n            {\r\n                title: t(\"viewDetail\"),\r\n                field: \"custom\",\r\n                align: \"center\",\r\n                width: \"50\",\r\n                render: rowData => <MaterialButton item={rowData}\r\n                    onSelect={(rowData, method) => {\r\n                        if (method === 0) {\r\n                            getItemById(rowData.id).then(({ data }) => {\r\n                                this.setState({\r\n                                    item: data,\r\n                                    shouldOpenViewDetailDialog: true\r\n                                });\r\n                            })\r\n                        } else {\r\n                            alert('Call Selected Here:' + rowData.id);\r\n                        }\r\n                    }}\r\n                />\r\n            },\r\n            {\r\n                title: t(\"ResultsOfTheUnits.STT\"), width: \"50\", align: \"left\",\r\n                render: rowData => ((page) * rowsPerPage) + (rowData.tableData.id + 1)\r\n            },\r\n            { title: t(\"ResultsOfTheUnits.health_org_code\"), field: \"healthOrg.code\", align: \"left\", width: \"150\" },\r\n            { title: t(\"ResultsOfTheUnits.health_org_name\"), field: \"healthOrg.name\", align: \"left\", width: \"250\" },\r\n            { title: t(\"ResultsOfTheUnits.set\"), field: \"sampleSet.name\", align: \"left\", width: \"150\" },\r\n            {\r\n                title: t(\"ResultsOfTheUnits.hasResult.title\"), field: \"hasResult\", align: \"left\", width: \"150\",\r\n                render: rowData =>\r\n                    rowData.hasResult == true ? (\r\n                        <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\r\n                            {t('ResultsOfTheUnits.hasResult.true')}\r\n                        </small>\r\n                    ) : (\r\n                            <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n                                {t('ResultsOfTheUnits.hasResult.false')}\r\n                            </small>\r\n                        )\r\n            },\r\n            \r\n        ];\r\n\r\n        return (\r\n            <div className=\"m-sm-30\">\r\n                <Helmet>\r\n                    <title>{t(\"ResultsOfTheUnits.title\")} | {t(\"web_site\")}</title>\r\n                </Helmet>\r\n                <div className=\"mb-sm-30\">\r\n                    <Breadcrumb routeSegments={[{ name: t(\"ReportResult.title\"), path: \"/directory/apartment\" },{ name: t('ResultsOfTheUnits.title') }]} />\r\n                </div>\r\n\r\n                <Grid container spacing={2}>\r\n                {isRoleAdmin && (<Grid item lg={3} md={3} sm={6} xs={12}>\r\n                    <Button\r\n                        className=\"mb-16 align-bottom\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.exportToExcel}\r\n                        >\r\n                        {t('general.exportToExcel')}\r\n                        </Button>\r\n                     </Grid>)}\r\n                    <Grid item lg={3} md={3} sm={6} xs={12}>\r\n                        <FormControl fullWidth={true} error={hasErrorCurrentYear} variant=\"outlined\" size=\"small\">\r\n                            <InputLabel htmlFor=\"planning-simple\">{t('ResultsOfTheUnits.eqaPlanning')}</InputLabel>\r\n                            <Select\r\n                                label = {t('ResultsOfTheUnits.eqaPlanning')}\r\n                                value={PlanningId}\r\n                                onChange={PlanningId => (this.handleChange(PlanningId, 'PlanningId'))}\r\n                                required={true}\r\n                                inputProps={{\r\n                                    name: \"planning\",\r\n                                    id: \"planning-simple\"\r\n                                }}\r\n                            >\r\n                                {listPlanning.map(item => {\r\n                                    return <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                            {hasErrorCurrentYear && <FormHelperText>{t(\"general.errorMessages_required\")}</FormHelperText>}\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3} sm={6} xs={12}>\r\n                        <FormControl fullWidth={true} error={hasErrorRound} variant=\"outlined\" size=\"small\">\r\n                            <InputLabel htmlFor=\"round-simple\">{t('ResultsOfTheUnits.round')}</InputLabel>\r\n                            <Select\r\n                                label = {t('ResultsOfTheUnits.round')}\r\n                                value={roundId}\r\n                                onChange={roundId => (this.handleChange(roundId, 'roundId'))}\r\n                                required={true}\r\n                                inputProps={{\r\n                                    name: \"round\",\r\n                                    id: \"round-simple\"\r\n                                }}\r\n                            >\r\n                                {listEQARound.map(item => {\r\n                                    return <MenuItem key={item.id} value={item.id}>{item.code}</MenuItem>;\r\n                                })}\r\n                            </Select>\r\n                            {hasErrorRound && <FormHelperText>{t(\"general.errorMessages_required\")}</FormHelperText>}\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3} sm={6} xs={12}>\r\n                        <FormControl fullWidth >\r\n                            <InputLabel htmlFor=\"standard-adornment-amount\"></InputLabel>\r\n                            <Input\r\n                                label={t('EnterSearch')}\r\n                                type=\"text\"\r\n                                name=\"keyword\"\r\n                                className = \"stylePlaceholder mt-8\"\r\n                                id=\"standard-adornment-amount\"\r\n                                value={keyword}\r\n                                onKeyDown={this.handleKeyDownEnterSearch}\r\n                                onChange={this.handleTextChange}\r\n                                placeholder={t(\"general.enterSearch\")}\r\n                                startAdornment={\r\n                                    <InputAdornment>\r\n                                        <Link to=\"#\">\r\n                                        <SearchIcon\r\n                                            onClick={() => this.search(keyword)}\r\n                                            style={{\r\n                                            position: \"absolute\",\r\n                                            top: \"0\",\r\n                                            right: \"0\"\r\n                                            }}\r\n                                        />\r\n                                        </Link>\r\n                                    </InputAdornment>\r\n                                    }\r\n                            />\r\n                        </FormControl>\r\n                    </Grid>\r\n                    {shouldOpenViewDetailDialog && (\r\n                        <HealthOrgEQARoundViewDetailDialog t={t} i18n={i18n}\r\n                            handleClose={this.handleDialogClose}\r\n                            open={shouldOpenViewDetailDialog}\r\n                            handleOKEditClose={this.handleOKEditClose}\r\n                            item={item}\r\n                        />\r\n                    )}\r\n                    <Grid item xs={12}>\r\n                        <MaterialTable\r\n                            title={title}\r\n                            data={itemList}\r\n                            columns={columns}\r\n                            parentChildData={(row, rows) => {\r\n                                var list = rows.find(a => a.id === row.parentId);\r\n                                return list;\r\n                            }}\r\n                            options={{\r\n                                selection: false,\r\n                                actionsColumnIndex: -1,\r\n                                paging: false,\r\n                                search: false,\r\n                                rowStyle: (rowData, index) => ({\r\n                                    backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                                }), \r\n                                maxBodyHeight: '450px',\r\n                                minBodyHeight: '370px',\r\n                                headerStyle: {\r\n                                backgroundColor: '#358600',\r\n                                color:'#fff',\r\n                                },\r\n                                padding: 'dense',\r\n                                toolbar: false\r\n                            }}\r\n                            components={{\r\n                                Toolbar: props => (\r\n                                    <MTableToolbar {...props} />\r\n                                ),\r\n                            }}\r\n                            onSelectionChange={(rows) => {\r\n                                this.data = rows;\r\n                            }}\r\n                            localization={{\r\n                                body: {\r\n                                emptyDataSourceMessage: `${t(\r\n                                    \"general.emptyDataMessageTable\"\r\n                                )}`,\r\n                                },\r\n                            }}\r\n                        />\r\n                        <TablePagination\r\n                            align=\"left\"\r\n                            className=\"px-16\"\r\n                            rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n                            component=\"div\"\r\n                            labelRowsPerPage={t('general.rows_per_page')}\r\n                            labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n                            count={totalElements}\r\n                            rowsPerPage={rowsPerPage}\r\n                            page={page}\r\n                            backIconButtonProps={{\r\n                                \"aria-label\": \"Previous Page\"\r\n                            }}\r\n                            nextIconButtonProps={{\r\n                                \"aria-label\": \"Next Page\"\r\n                            }}\r\n                            onChangePage={this.handleChangePage}\r\n                            onChangeRowsPerPage={this.setRowsPerPage}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultsOfTheUnits;\r\n"]},"metadata":{},"sourceType":"module"}