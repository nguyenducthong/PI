{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrg\\\\EQAHealthOrgTable.jsx\";\nimport { InputAdornment, Input, Grid, TextField, IconButton, Icon, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { getByPage, deleteItem, saveItem, getItemById, searchByPage } from \"./EQAHealthOrgService\";\nimport { getByPage as getByPageAdministrativeUnit } from \"../AdministrativeUnit/AdministrativeUnitService\";\nimport EQAHealthOrgEditorDialog from \"./EQAHealthOrgEditorDialog\";\nimport { getItemByIdRoundRegister } from \"../EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterService\";\nimport EQAHealthOrgRoundRegisterDialog from \"../EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { getCurrentUser } from \"../User/UserService\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Helmet } from \"react-helmet\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImportExcelDialog from \"./ImportExcelDialog\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"edit\")), !props.isHealthOrg && /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"delete\")));\n}\n\nvar EQAHealthOrgTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQAHealthOrgTable, _React$Component);\n\n  var _super = _createSuper(EQAHealthOrgTable);\n\n  function EQAHealthOrgTable(props) {\n    var _this;\n\n    _classCallCheck(this, EQAHealthOrgTable);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      shouldOpenRoundRegisterEditorDialog: false,\n      keyword: \"\",\n      administrativeUnitId: \"\",\n      administrativeUnit: {},\n      administrativeList: [],\n      isHealthOrg: false,\n      shouldOpenImportExcelDialog: false\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.search();\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.keyword;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.administrativeUnitId = _this.state.administrativeUnitId;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleFilterAdministrative = function (event, administrativeUnit) {\n      if (administrativeUnit != null && administrativeUnit.id != null) {\n        _this.setState({\n          administrativeUnitId: administrativeUnit.id\n        }, function () {\n          _this.search();\n        });\n      } else {\n        _this.setState({\n          administrativeUnitId: null\n        });\n\n        _this.search();\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenImportExcelDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenRoundRegisterEditorDialog: false,\n        shouldOpenImportExcelDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenRoundRegisterEditorDialog: false,\n        shouldOpenImportExcelDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      var t = _this.props.t;\n      deleteItem(_this.state.id).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n\n        toast.success(t(\"deleteSuccess\"));\n      }).catch(function () {\n        toast.warning(t(\"error\"));\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      var t = _this.props.t;\n\n      if (_this.data != null) {\n        _this.handleDeleteList(_this.data).then(function () {\n          _this.updatePageData();\n\n          _this.handleDialogClose();\n        });\n      } else {\n        toast.warning(t(\"general.select_data\"));\n\n        _this.handleDialogClose();\n      }\n    };\n\n    _this.importExcel = function () {\n      _this.setState({\n        shouldOpenImportExcelDialog: true\n      });\n    };\n\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EQAHealthOrgTable, [{\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        keyword: event.target.value\n      });\n    }\n  }, {\n    key: \"handleChangeRound\",\n    value: function handleChangeRound() {\n      this.setState({\n        shouldOpenRoundRegisterEditorDialog: true\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      this.setState({\n        page: 0\n      }, function () {\n        var _this2 = this;\n\n        var searchObject = {};\n        searchObject.text = this.state.keyword;\n        searchObject.administrativeUnitId = this.state.administrativeUnitId;\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n        searchByPage(searchObject).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this2.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var isHealthOrg = this.state.isHealthOrg;\n      var searchObject = {\n        pageIndex: 1,\n        pageSize: 10000\n      };\n      getCurrentUser().then(function (_ref3) {\n        var data = _ref3.data;\n\n        if (data.roles != null && data.roles.length > 0) {\n          data.roles.forEach(function (element) {\n            if (element.name == \"ROLE_HEALTH_ORG\") {\n              isHealthOrg = true;\n            }\n          });\n        }\n\n        _this3.setState({\n          isHealthOrg: isHealthOrg\n        });\n      });\n      this.updatePageData();\n      getByPageAdministrativeUnit(searchObject).then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this3.setState({\n          administrativeList: _toConsumableArray(data.content)\n        });\n      });\n    }\n  }, {\n    key: \"handleDeleteList\",\n    value: function () {\n      var _handleDeleteList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(list) {\n        var _this4 = this;\n\n        var t, demSuccess, demError, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                t = this.props.t;\n                demSuccess = 0, demError = 0;\n                i = 0;\n\n              case 3:\n                if (!(i < list.length)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return deleteItem(list[i].id).then(function (res) {\n                  demSuccess++; // toast.success(t(\"deleteSuccess\") + \" \" + list[i].code);\n\n                  _this4.updatePageData();\n\n                  _this4.handleDialogClose();\n                }).catch(function (err) {\n                  demError++; // toast.warning(t('error'));\n\n                  _this4.handleDialogClose();\n                });\n\n              case 6:\n                i++;\n                _context.next = 3;\n                break;\n\n              case 9:\n                if (demSuccess != 0) {\n                  toast.success(t(\"deleteSuccess\") + \" \" + demSuccess);\n                }\n\n                if (demError != 0) {\n                  toast.warning(t(\"error\") + \" \" + demError);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleDeleteList(_x) {\n        return _handleDeleteList.apply(this, arguments);\n      }\n\n      return handleDeleteList;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          administrativeUnit = _this$state.administrativeUnit,\n          administrativeList = _this$state.administrativeList,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog,\n          shouldOpenImportExcelDialog = _this$state.shouldOpenImportExcelDialog,\n          isHealthOrg = _this$state.isHealthOrg;\n      var columns = [{\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"center\",\n        width: \"250\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        cellStyle: {\n          whiteSpace: \"nowrap\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            isHealthOrg: isHealthOrg,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref5) {\n                  var data = _ref5.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this5.setState({\n                    item: {\n                      healthOrg: data\n                    },\n                    shouldOpenRoundRegisterEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                getItemById(rowData.id).then(function (_ref6) {\n                  var data = _ref6.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this5.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 2) {\n                _this5.handleDelete(rowData.id);\n              } else {\n                alert(\"Call Selected Here:\" + rowData.id);\n              }\n            },\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t(\"EQAHealthOrg.Name\"),\n        field: \"name\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrg.Code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrg.ContactName\"),\n        field: \"contactName\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrg.Address\"),\n        field: \"address\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrg.contactPhone\"),\n        field: \"contactPhone\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }\n      }, t(\"EQAHealthOrg.title\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"category\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t(\"EQAHealthOrg.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }\n      }, !isHealthOrg && /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this5.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }\n      }, t(\"Add\")), !isHealthOrg && /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this5.setState({\n            shouldOpenConfirmationDeleteAllDialog: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 15\n        }\n      }, t(\"Delete\")), shouldOpenImportExcelDialog && /*#__PURE__*/React.createElement(ImportExcelDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenImportExcelDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 15\n        }\n      }), shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        title: t(\"confirm\"),\n        text: t(\"DeleteAllConfirm\"),\n        Yes: t(\"general.Yes\"),\n        No: t(\"general.No\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 15\n        }\n      })), !isHealthOrg && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: administrativeList,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.name;\n        },\n        onChange: this.handleFilterAdministrative,\n        value: administrativeUnit ? administrativeUnit.name : \"\",\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t(\"EQAHealthOrg.AdministrativeUnit\"),\n            variant: \"outlined\",\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 19\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 15\n        }\n      })), !isHealthOrg && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: t(\"EnterSearch\"),\n        type: \"text\",\n        name: \"keyword\",\n        value: keyword,\n        onChange: this.handleTextChange,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        className: \"w-100 mt-8 mr-10 stylePlaceholder\",\n        id: \"search_box\",\n        placeholder: t(\"general.enterSearch\"),\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 21\n          }\n        }, \" \", /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this5.search();\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 23\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(EQAHealthOrgEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        isHealthOrg: isHealthOrg,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 17\n        }\n      }), this.state.shouldOpenRoundRegisterEditorDialog && /*#__PURE__*/React.createElement(EQAHealthOrgRoundRegisterDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenRoundRegisterEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 17\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t(\"DeleteConfirm\"),\n        Yes: t(\"general.Yes\"),\n        No: t(\"general.No\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"List\"),\n        data: itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: true,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\"\n            };\n          },\n          maxBodyHeight: \"450px\",\n          minBodyHeight: \"370px\",\n          headerStyle: {\n            backgroundColor: \"#358600\",\n            color: \"#fff\"\n          },\n          padding: \"dense\",\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this5,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 37\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this5.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        } // actions={[\n        //   {\n        //     tooltip: 'Remove All Selected Users',\n        //     icon: 'delete',\n        //     onClick: (evt, data) => {\n        //       this.handleDeleteAll(data);\n        //       alert('You want to delete ' + data.length + ' rows');\n        //     }\n        //   },\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t(\"general.rows_per_page\"),\n        labelDisplayedRows: function labelDisplayedRows(_ref7) {\n          var from = _ref7.from,\n              to = _ref7.to,\n              count = _ref7.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t(\"general.of\"), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return EQAHealthOrgTable;\n}(React.Component);\n\nexport default EQAHealthOrgTable;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrg/EQAHealthOrgTable.jsx"],"names":["InputAdornment","Input","Grid","TextField","IconButton","Icon","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","createMuiTheme","React","Component","Autocomplete","ValidatorForm","TextValidator","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getByPage","deleteItem","saveItem","getItemById","searchByPage","getByPageAdministrativeUnit","EQAHealthOrgEditorDialog","getItemByIdRoundRegister","EQAHealthOrgRoundRegisterDialog","Breadcrumb","ConfirmationDialog","getCurrentUser","Link","SearchIcon","Helmet","toast","ImportExcelDialog","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","isHealthOrg","EQAHealthOrgTable","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","shouldOpenRoundRegisterEditorDialog","keyword","administrativeUnitId","administrativeUnit","administrativeList","shouldOpenImportExcelDialog","handleKeyDownEnterSearch","e","key","search","updatePageData","searchObject","text","pageIndex","pageSize","then","setState","content","handleFilterAdministrative","event","id","setPage","setRowsPerPage","target","value","handleChangePage","newPage","handleOKEditClose","handleDelete","handleDialogClose","handleConfirmationResponse","success","catch","warning","handleEditItem","handleDeleteAll","handleDeleteList","importExcel","handleTextChange","bind","roles","length","forEach","element","name","list","demSuccess","demError","i","res","err","columns","title","field","align","width","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","whiteSpace","render","rowData","method","parent","healthOrg","alert","path","startDate","Date","endDate","option","params","position","top","right","row","rows","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","color","padding","toolbar","Toolbar","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import {\r\n  InputAdornment,\r\n  Input,\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  Icon,\r\n  Button,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  Checkbox,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  getByPage,\r\n  deleteItem,\r\n  saveItem,\r\n  getItemById,\r\n  searchByPage,\r\n} from \"./EQAHealthOrgService\";\r\nimport { getByPage as getByPageAdministrativeUnit } from \"../AdministrativeUnit/AdministrativeUnitService\";\r\nimport EQAHealthOrgEditorDialog from \"./EQAHealthOrgEditorDialog\";\r\nimport { getItemByIdRoundRegister } from \"../EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterService\";\r\nimport EQAHealthOrgRoundRegisterDialog from \"../EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { getCurrentUser } from \"../User/UserService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ImportExcelDialog from \"./ImportExcelDialog\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return (\r\n    <div>\r\n      {/* {!props.isHealthOrg && (\r\n        <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n          <Icon fontSize=\"small\" color=\"primary\">\r\n            add\r\n          </Icon>\r\n        </IconButton>\r\n      )} */}\r\n      <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n        <Icon fontSize=\"small\" color=\"primary\">\r\n          edit\r\n        </Icon>\r\n      </IconButton>\r\n      {!props.isHealthOrg && (\r\n        <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\r\n          <Icon fontSize=\"small\" color=\"error\">\r\n            delete\r\n          </Icon>\r\n        </IconButton>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nclass EQAHealthOrgTable extends React.Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    shouldOpenRoundRegisterEditorDialog: false,\r\n    keyword: \"\",\r\n    administrativeUnitId: \"\",\r\n    administrativeUnit: {},\r\n    administrativeList: [],\r\n    isHealthOrg: false,\r\n    shouldOpenImportExcelDialog: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n  }\r\n\r\n  handleTextChange(event) {\r\n    this.setState({ keyword: event.target.value });\r\n  }\r\n\r\n  handleKeyDownEnterSearch = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  handleChangeRound() {\r\n    this.setState({\r\n      shouldOpenRoundRegisterEditorDialog: true,\r\n    });\r\n  }\r\n  search() {\r\n    this.setState({ page: 0 }, function () {\r\n      var searchObject = {};\r\n      searchObject.text = this.state.keyword;\r\n      searchObject.administrativeUnitId = this.state.administrativeUnitId;\r\n      searchObject.pageIndex = this.state.page + 1;\r\n      searchObject.pageSize = this.state.rowsPerPage;\r\n      searchByPage(searchObject).then(({ data }) => {\r\n        this.setState({\r\n          itemList: [...data.content],\r\n          totalElements: data.totalElements,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.text = this.state.keyword;\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.administrativeUnitId = this.state.administrativeUnitId;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject).then(({ data }) => {\r\n      this.setState({\r\n        itemList: [...data.content],\r\n        totalElements: data.totalElements,\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { isHealthOrg } = this.state;\r\n    var searchObject = { pageIndex: 1, pageSize: 10000 };\r\n    getCurrentUser().then(({ data }) => {\r\n      if (data.roles != null && data.roles.length > 0) {\r\n        data.roles.forEach((element) => {\r\n          if (element.name == \"ROLE_HEALTH_ORG\") {\r\n            isHealthOrg = true;\r\n          }\r\n        });\r\n      }\r\n      this.setState({ isHealthOrg: isHealthOrg });\r\n    });\r\n    this.updatePageData();\r\n    getByPageAdministrativeUnit(searchObject).then(({ data }) => {\r\n      this.setState({\r\n        administrativeList: [...data.content],\r\n      });\r\n    });\r\n  }\r\n\r\n  handleFilterAdministrative = (event, administrativeUnit) => {\r\n    if (administrativeUnit != null && administrativeUnit.id != null) {\r\n      this.setState({ administrativeUnitId: administrativeUnit.id }, () => {\r\n        this.search();\r\n      });\r\n    } else {\r\n      this.setState({ administrativeUnitId: null });\r\n      this.search();\r\n    }\r\n  };\r\n  setPage = (page) => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  setRowsPerPage = (event) => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenImportExcelDialog: false,\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true,\r\n    });\r\n  };\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false,\r\n      shouldOpenRoundRegisterEditorDialog: false,\r\n      shouldOpenImportExcelDialog: false,\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false,\r\n      shouldOpenRoundRegisterEditorDialog: false,\r\n      shouldOpenImportExcelDialog: false,\r\n    });\r\n    this.setPage(0);\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true,\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    let { t } = this.props;\r\n    deleteItem(this.state.id)\r\n      .then(() => {\r\n        this.updatePageData();\r\n        this.handleDialogClose();\r\n        toast.success(t(\"deleteSuccess\"));\r\n      })\r\n      .catch(() => {\r\n        toast.warning(t(\"error\"));\r\n        this.handleDialogClose();\r\n      });\r\n  };\r\n  handleEditItem = (item) => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true,\r\n    });\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true,\r\n    });\r\n  };\r\n\r\n  async handleDeleteList(list) {\r\n    let { t } = this.props;\r\n    let demSuccess = 0,\r\n      demError = 0;\r\n    for (var i = 0; i < list.length; i++) {\r\n      await deleteItem(list[i].id)\r\n        .then((res) => {\r\n          demSuccess++;\r\n          // toast.success(t(\"deleteSuccess\") + \" \" + list[i].code);\r\n          this.updatePageData();\r\n          this.handleDialogClose();\r\n        })\r\n        .catch((err) => {\r\n          demError++;\r\n          // toast.warning(t('error'));\r\n          this.handleDialogClose();\r\n        });\r\n    }\r\n    if (demSuccess != 0) {\r\n      toast.success(t(\"deleteSuccess\") + \" \" + demSuccess);\r\n    }\r\n    if (demError != 0) {\r\n      toast.warning(t(\"error\") + \" \" + demError);\r\n    }\r\n  }\r\n\r\n  handleDeleteAll = (event) => {\r\n    let { t } = this.props;\r\n    if (this.data != null) {\r\n      this.handleDeleteList(this.data).then(() => {\r\n        this.updatePageData();\r\n        this.handleDialogClose();\r\n      });\r\n    } else {\r\n      toast.warning(t(\"general.select_data\"));\r\n      this.handleDialogClose();\r\n    }\r\n  };\r\n  importExcel = () => {\r\n    this.setState({\r\n      shouldOpenImportExcelDialog: true,\r\n    });\r\n  };\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      keyword,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      administrativeUnit,\r\n      administrativeList,\r\n      item,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      shouldOpenConfirmationDeleteAllDialog,\r\n      shouldOpenImportExcelDialog,\r\n      isHealthOrg,\r\n    } = this.state;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"center\",\r\n        width: \"250\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        cellStyle: { whiteSpace: \"nowrap\" },\r\n        render: (rowData) => (\r\n          <MaterialButton\r\n            item={rowData}\r\n            isHealthOrg={isHealthOrg}\r\n            onSelect={(rowData, method) => {\r\n              if (method === 0) {\r\n                getItemById(rowData.id).then(({ data }) => {\r\n                  if (data.parent === null) {\r\n                    data.parent = {};\r\n                  }\r\n                  this.setState({\r\n                    item: { healthOrg: data },\r\n                    shouldOpenRoundRegisterEditorDialog: true,\r\n                  });\r\n                });\r\n              } else if (method === 1) {\r\n                getItemById(rowData.id).then(({ data }) => {\r\n                  if (data.parent === null) {\r\n                    data.parent = {};\r\n                  }\r\n                  this.setState({\r\n                    item: data,\r\n                    shouldOpenEditorDialog: true,\r\n                  });\r\n                });\r\n              } else if (method === 2) {\r\n                this.handleDelete(rowData.id);\r\n              } else {\r\n                alert(\"Call Selected Here:\" + rowData.id);\r\n              }\r\n            }}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        title: t(\"EQAHealthOrg.Name\"),\r\n        field: \"name\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"EQAHealthOrg.Code\"),\r\n        field: \"code\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"175px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"175px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"EQAHealthOrg.ContactName\"),\r\n        field: \"contactName\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"EQAHealthOrg.Address\"),\r\n        field: \"address\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"EQAHealthOrg.contactPhone\"),\r\n        field: \"contactPhone\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div className=\"mb-sm-30\">\r\n          <Helmet>\r\n            <title>\r\n              {t(\"EQAHealthOrg.title\")} | {t(\"web_site\")}\r\n            </title>\r\n          </Helmet>\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: t(\"category\"), path: \"/directory/apartment\" },\r\n              { name: t(\"EQAHealthOrg.title\") },\r\n            ]}\r\n          />\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={5} md={5} sm={12} xs={12}>\r\n            {!isHealthOrg && (\r\n              <Button\r\n                className=\"mb-16 mr-16 align-bottom\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  this.handleEditItem({\r\n                    startDate: new Date(),\r\n                    endDate: new Date(),\r\n                  });\r\n                }}\r\n              >\r\n                {t(\"Add\")}\r\n              </Button>\r\n            )}\r\n            {!isHealthOrg && (\r\n              <Button\r\n                className=\"mb-16 mr-16 align-bottom\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() =>\r\n                  this.setState({ shouldOpenConfirmationDeleteAllDialog: true })\r\n                }\r\n              >\r\n                {t(\"Delete\")}\r\n              </Button>\r\n            )}\r\n            {/* {!isHealthOrg && (\r\n              <Button\r\n                className=\"align-bottom mb-16\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.importExcel}\r\n              >\r\n                {t(\"general.importExcel\")}\r\n              </Button>\r\n            )} */}\r\n            {shouldOpenImportExcelDialog && (\r\n              <ImportExcelDialog\r\n                t={t}\r\n                i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={shouldOpenImportExcelDialog}\r\n                handleOKEditClose={this.handleOKEditClose}\r\n              />\r\n            )}\r\n            {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                title={t(\"confirm\")}\r\n                text={t(\"DeleteAllConfirm\")}\r\n                Yes={t(\"general.Yes\")}\r\n                No={t(\"general.No\")}\r\n              />\r\n            )}\r\n          </Grid>\r\n          {!isHealthOrg && (\r\n            <Grid item lg={3} md={3} sm={12} xs={12}>\r\n              <Autocomplete\r\n                size=\"small\"\r\n                id=\"combo-box\"\r\n                options={administrativeList}\r\n                className=\"flex-end\"\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={this.handleFilterAdministrative}\r\n                value={administrativeUnit ? administrativeUnit.name : \"\"}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label={t(\"EQAHealthOrg.AdministrativeUnit\")}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          {!isHealthOrg && (\r\n            <Grid item lg={3} md={3} sm={12} xs={12}>\r\n              <Input\r\n                label={t(\"EnterSearch\")}\r\n                type=\"text\"\r\n                name=\"keyword\"\r\n                value={keyword}\r\n                onChange={this.handleTextChange}\r\n                onKeyDown={this.handleKeyDownEnterSearch}\r\n                className=\"w-100 mt-8 mr-10 stylePlaceholder\"\r\n                id=\"search_box\"\r\n                placeholder={t(\"general.enterSearch\")}\r\n                startAdornment={\r\n                  <InputAdornment>\r\n                    <Link to=\"#\">\r\n                      {\" \"}\r\n                      <SearchIcon\r\n                        onClick={() => this.search()}\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"0\",\r\n                          right: \"0\",\r\n                        }}\r\n                      />\r\n                    </Link>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </Grid>\r\n          )}\r\n\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {shouldOpenEditorDialog && (\r\n                <EQAHealthOrgEditorDialog\r\n                  t={t}\r\n                  i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  isHealthOrg={isHealthOrg}\r\n                  item={item}\r\n                />\r\n              )}\r\n\r\n              {this.state.shouldOpenRoundRegisterEditorDialog && (\r\n                <EQAHealthOrgRoundRegisterDialog\r\n                  t={t}\r\n                  i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={this.state.shouldOpenRoundRegisterEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={this.state.item}\r\n                />\r\n              )}\r\n\r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t(\"DeleteConfirm\")}\r\n                  Yes={t(\"general.Yes\")}\r\n                  No={t(\"general.No\")}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t(\"List\")}\r\n              data={itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find((a) => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              options={{\r\n                selection: true,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: (rowData, index) => ({\r\n                  backgroundColor: index % 2 === 1 ? \"#EEE\" : \"#FFF\",\r\n                }),\r\n                maxBodyHeight: \"450px\",\r\n                minBodyHeight: \"370px\",\r\n                headerStyle: {\r\n                  backgroundColor: \"#358600\",\r\n                  color: \"#fff\",\r\n                },\r\n                padding: \"dense\",\r\n                toolbar: false,\r\n              }}\r\n              components={{\r\n                Toolbar: (props) => <MTableToolbar {...props} />,\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n              // actions={[\r\n              //   {\r\n              //     tooltip: 'Remove All Selected Users',\r\n              //     icon: 'delete',\r\n              //     onClick: (evt, data) => {\r\n              //       this.handleDeleteAll(data);\r\n              //       alert('You want to delete ' + data.length + ' rows');\r\n              //     }\r\n              //   },\r\n              // ]}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t(\"general.rows_per_page\")}\r\n              labelDisplayedRows={({ from, to, count }) =>\r\n                `${from}-${to} ${t(\"general.of\")} ${\r\n                  count !== -1 ? count : `more than ${to}`\r\n                }`\r\n              }\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\",\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\",\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EQAHealthOrgTable;\r\n"]},"metadata":{},"sourceType":"module"}