{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\Role\\\\RoleEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\"; // import { searchByPage } from \"./RoleService\";\n\nvar RoleEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(RoleEditorDialog, _Component);\n\n  var _super = _createSuper(RoleEditorDialog);\n\n  function RoleEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, RoleEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      shortName: \"\",\n      description: \"\",\n      isActive: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code; // checkCode(id, code).then((result) => {\n      //   //Nếu trả về true là code đã được sử dụng\n      //   if (result.data) {\n      //     alert(\"Code đã được sử dụng\");\n      //   } else {\n      //     //Nếu trả về false là code chưa sử dụng có thể dùng\n      //     if (id) {\n      //         updateRole({\n      //         ...this.state\n      //       }).then(() => {\n      //         this.props.handleOKEditClose();\n      //       });\n      //     } else {\n      //         addNewRole({\n      //         ...this.state\n      //       }).then(() => {\n      //         this.props.handleOKEditClose();\n      //       });\n      //     }\n      //   }\n      // });\n    };\n\n    return _this;\n  }\n\n  _createClass(RoleEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          shortName = _this$state.shortName,\n          description = _this$state.description;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-24\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \" \", t(\"Code\"), \" \"), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Code\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Name\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Short_Name\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"shortName\",\n        value: shortName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Description\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, t(\"Save\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, t(\"Cancel\"))))));\n    }\n  }]);\n\n  return RoleEditorDialog;\n}(Component);\n\nexport default RoleEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/Role/RoleEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","ValidatorForm","TextValidator","RoleEditorDialog","state","name","code","shortName","description","isActive","handleChange","event","source","persist","setState","target","checked","value","handleFormSubmit","id","props","open","handleClose","item","handleOKEditClose","t","i18n"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n// import { searchByPage } from \"./RoleService\";\r\n\r\nclass RoleEditorDialog extends Component {\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    shortName:\"\",\r\n    description:\"\",\r\n    isActive: false\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n\r\n    // checkCode(id, code).then((result) => {\r\n    //   //Nếu trả về true là code đã được sử dụng\r\n    //   if (result.data) {\r\n    //     alert(\"Code đã được sử dụng\");\r\n    //   } else {\r\n    //     //Nếu trả về false là code chưa sử dụng có thể dùng\r\n    //     if (id) {\r\n    //         updateRole({\r\n    //         ...this.state\r\n    //       }).then(() => {\r\n    //         this.props.handleOKEditClose();\r\n    //       });\r\n    //     } else {\r\n    //         addNewRole({\r\n    //         ...this.state\r\n    //       }).then(() => {\r\n    //         this.props.handleOKEditClose();\r\n    //       });\r\n    //     }\r\n    //   }\r\n    // });\r\n  };\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose,item } = this.props;\r\n    this.setState(item);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      shortName,\r\n      description\r\n    } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog onClose={handleClose} open={open}>\r\n        <div className=\"p-24\">\r\n          <h4 className=\"mb-20\"> {t(\"Code\")} </h4>\r\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n            <Grid className=\"mb-16\" container spacing={4}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Code\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Name\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[\"this field is required\"]}\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Short_Name\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"shortName\"\r\n                  value={shortName}\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Description\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <div className=\"flex flex-space-between flex-middle\">\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {t(\"Save\")}\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" onClick={() => this.props.handleClose()}>{t(\"Cancel\")}</Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoleEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}