{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportElisa\\\\EQAResultReportElisaDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, TextField, Icon, IconButton, FormControl, DialogTitle, DialogContent, DialogActions, Paper, InputAdornment, MenuItem, Checkbox, Select, FormControlLabel } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { technicianSearchByPage, saveItem, getEQASampleTubeByHealthOrgEQARoundId, checkReagentByHealthOrgRound } from \"./EQAResultReportElisaService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ConstantList from \"../../appConfig\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\nimport Draggable from \"react-draggable\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport LocalConstants from \"./Constants\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport \"../../../styles/views/_loadding.scss\";\nimport \"../../../styles/views/_style.scss\";\nimport clsx from \"clsx\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EQAResultReportElisaTabs from \"./EQAResultReportElisaTabs\";\nimport { exportToExcel } from \"./EQAResultReportElisaService\";\nimport { saveAs } from \"file-saver\";\nimport EQAResultReportElisaPrint from \"./EQAResultReportElisaPrint\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n}); // function PaperComponent(props) {\n//   return (\n//     <Draggable handle=\"#draggable-dialog\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n//       <Paper {...props} />\n//     </Draggable>\n//   );\n// }\n\nfunction MaterialButton(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"delete\")));\n}\n\nfunction TableODColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    type: \"number\",\n    value: item.oDvalue,\n    name: \"itemODvalue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableCOColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    value: item.cutOff,\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    type: \"number\",\n    name: \"itemcutOff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableODDeviceCOColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    value: item.ratioOdAndCutOff,\n    type: \"number\",\n    name: \"itemRatioOdAndCutOff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction TableResultColumn(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disabled: props.isView,\n    value: item.result,\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    inputProps: {\n      name: \"result\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, t(\"EQAResultReportElisa.Result.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.negative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, t(\"EQAResultReportElisa.Result.negative\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, t(\"EQAResultReportElisa.Result.indertermine\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, t(\"EQAResultReportElisa.Result.positive\")))));\n}\n\nfunction TableNoteColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 10\n    }\n  });\n}\n\nvar EQAResultReportElisaEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQAResultReportElisaEditorDialog, _Component);\n\n  var _super = _createSuper(EQAResultReportElisaEditorDialog);\n\n  function EQAResultReportElisaEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportElisaEditorDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 1000,\n      page: 0,\n      // isView: false,\n      typeMethod: 1,\n      healthOrg: [],\n      listHealthOrgRound: [],\n      reagent: null,\n      technician: null,\n      details: [],\n      healthOrg: null,\n      reagentExpiryDate: null,\n      testDate: new Date(),\n      reagentUnBoxDate: null,\n      dateSubmitResults: null,\n      roundLists: [],\n      eqaRoundRegister: [],\n      roundId: \"\",\n      listReagent: [],\n      reagentId: \"\",\n      healthOrgRound: null,\n      round: null,\n      orderTest: \"\",\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenHealthOrgRoundPopup: false,\n      // isCheck:false,\n      isViewButton: false,\n      isFinalResult: false,\n      isRoleAdmin: false,\n      typeMethod: 1,\n      loading: false,\n      checkTheStatus: false,\n      shouldOpenPrintDialog: false\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenConfirmationDialog: false,\n        shouldOpenPrintDialog: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"isFinalResult\") {\n        _this.setState({\n          isFinalResult: event.target.checked\n        });\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var details = _this.state.details;\n      var t = _this.props.t;\n\n      if (details != null && details.length > 0) {\n        details.forEach(function (element) {\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name == \"oDvalue\") {\n              if (element.oDvalue == \"\") {\n                element.cutOff = \"\";\n                element.ratioOdAndCutOff = \"\";\n                element.result = \"\";\n              }\n\n              element.oDvalue = event.target.value;\n\n              if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\n                element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\n              }\n            } else if (event.target.name == \"cutOff\") {\n              if (element.oDvalue == \"\" || element.oDvalue == null) {\n                toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\n                return;\n              }\n\n              element.cutOff = event.target.value;\n\n              if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\n                element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\n              }\n            } else if (event.target.name == \"result\") {\n              if (event.target.value !== LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented && (element.oDvalue === \"\" || element.oDvalue === null)) {\n                toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\n                element.result = null;\n                return;\n              } //Check od/co < 1 ket luan am\n              // if(event.target.value ===LocalConstants.EQAResultReportDetail_TestValue.negative){\n              //   if(element.ratioOdAndCutOff != '' && element.ratioOdAndCutOff != null && element.ratioOdAndCutOff < 1){\n              //     toast.warning(t(\"EQAResultReportElisa.warningResult\"))\n              //   element.result = null\n              //   return\n              //   }\n              // }\n\n\n              if (event.target.value === LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.oDvalue = \"\";\n                element.cutOff = \"\";\n                element.ratioOdAndCutOff = \"\";\n              }\n\n              element.result = event.target.value;\n            }\n          }\n        }); //forEach\n\n        _this.setState({\n          details: details\n        }, function () {});\n      }\n    };\n\n    _this.openCircularProgress = function () {\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleFormSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var t, isCheck, _this$state, checkTheStatus, item, _this$state$item, id, details, healthOrgRound, reagent, typeMethod, otherReagent;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.openCircularProgress();\n\n            case 2:\n              t = _this.props.t;\n              isCheck = false;\n              _this$state = _this.state, checkTheStatus = _this$state.checkTheStatus, item = _this$state.item;\n              _this$state$item = _this.state.item, id = _this$state$item.id, details = _this$state$item.details, healthOrgRound = _this$state$item.healthOrgRound, reagent = _this$state$item.reagent, typeMethod = _this$state$item.typeMethod, otherReagent = _this$state$item.otherReagent; //Check null ket qua\n\n              if (details != null && details.length > 0) {\n                details.forEach(function (el) {\n                  if (el.result === null || el.result === \"\") {\n                    isCheck = true;\n                  }\n                });\n              } else {\n                isCheck = true;\n              }\n\n              if (!isCheck) {\n                _context.next = 11;\n                break;\n              }\n\n              toast.info(t(\"EQAResultReportElisa.notResult\"));\n\n              _this.setState({\n                isView: false,\n                isViewButton: false,\n                loading: false\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 11:\n              if (checkTheStatus) {\n                item[\"isFinalResult\"] = true;\n                item[\"dateSubmitResults\"] = new Date();\n\n                _this.setState({\n                  item: item\n                });\n              } //Check null du lieu\n\n\n              if (!(healthOrgRound == null || healthOrgRound.id == null || reagent == null || reagent.id == null)) {\n                _context.next = 16;\n                break;\n              }\n\n              toast.info(t(\"EQAResultReportElisa.notData\"));\n\n              _this.setState({\n                isView: false,\n                isViewButton: false,\n                loading: false\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 16:\n              if (ConstantList.CHECK_HEALTH_ORG && !otherReagent) {\n                checkReagentByHealthOrgRound(id, healthOrgRound.id, reagent.id, typeMethod).then(function (res) {\n                  if (res.data) {\n                    toast.warning(t(\"EqaResult.dulicateReagent\"));\n\n                    _this.setState({\n                      isView: false,\n                      isViewButton: false,\n                      loading: false\n                    });\n                  } else {\n                    if (id) {\n                      _this.setState({\n                        isView: true,\n                        isRoleAdmin: false,\n                        isViewButton: true\n                      });\n\n                      saveItem(_objectSpread({}, _this.state.item)).then(function (res) {\n                        var _res$data;\n\n                        _this.state.item.id = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.id;\n\n                        _this.setState(_objectSpread({}, _this.state.item), function () {});\n\n                        toast.success(t(\"mess_edit\")); // this.props.handleOKEditClose();\n\n                        _this.setState({\n                          isView: false,\n                          isViewButton: false,\n                          loading: false\n                        });\n                      }).catch(function () {\n                        toast.warning(t(\"mess_edit_error\"));\n\n                        _this.setState({\n                          isView: false,\n                          isViewButton: false,\n                          loading: false\n                        });\n                      });\n                    } else {\n                      _this.setState({\n                        isView: true,\n                        isRoleAdmin: false,\n                        isViewButton: true\n                      });\n\n                      saveItem(_objectSpread({}, _this.state.item)).then(function (res) {\n                        var _res$data2;\n\n                        toast.success(t(\"mess_add\"));\n                        _this.state.item.id = res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.id;\n\n                        _this.setState(_objectSpread({}, _this.state.item), function () {});\n\n                        _this.setState({\n                          isView: false,\n                          isViewButton: false,\n                          loading: false\n                        }); // this.props.handleOKEditClose();\n\n                      }).catch(function () {\n                        toast.warning(t(\"mess_add_error\"));\n\n                        _this.setState({\n                          isView: false,\n                          isViewButton: false,\n                          loading: false\n                        });\n                      });\n                    }\n                  }\n                });\n              } else {\n                // details.forEach(el=>{\n                //   if(el.result === null || el.result === \"\"){\n                //     isCheck = true\n                //   }\n                // })\n                // if(isCheck){\n                //   toast.warning(t(\"EQAResultReportElisa.notResult\"));\n                //   this.setState({isView: false, isViewButton: false, loading:false});;\n                //   return\n                // }\n                if (id) {\n                  _this.setState({\n                    isView: true,\n                    isRoleAdmin: false,\n                    isViewButton: true\n                  });\n\n                  saveItem(_objectSpread({}, _this.state.item)).then(function (res) {\n                    var _res$data3;\n\n                    // this.props.handleOKEditClose();\n                    _this.state.item.id = res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.id;\n\n                    _this.setState(_objectSpread({}, _this.state.item), function () {});\n\n                    toast.success(t(\"mess_edit\"));\n\n                    _this.setState({\n                      isView: false,\n                      isViewButton: false,\n                      loading: false\n                    });\n                  }).catch(function () {\n                    toast.warning(t(\"mess_edit_error\"));\n\n                    _this.setState({\n                      isView: false,\n                      isViewButton: false,\n                      loading: false\n                    });\n                  });\n                } else {\n                  _this.setState({\n                    isView: true,\n                    isRoleAdmin: false,\n                    isViewButton: true\n                  });\n\n                  saveItem(_objectSpread({}, _this.state.item)).then(function (res) {\n                    var _res$data4;\n\n                    _this.state.item.id = res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.id;\n\n                    _this.setState(_objectSpread({}, _this.state.item), function () {}); // this.props.handleOKEditClose();\n\n\n                    toast.success(t(\"mess_add\"));\n\n                    _this.setState({\n                      isView: false,\n                      isViewButton: false,\n                      loading: false\n                    });\n                  }).catch(function () {\n                    toast.warning(t(\"mess_add_error\"));\n\n                    _this.setState({\n                      isView: false,\n                      isViewButton: false,\n                      loading: false\n                    });\n                  });\n                }\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.sendResults = function () {\n      var _this$state2 = _this.state,\n          item = _this$state2.item,\n          checkTheStatus = _this$state2.checkTheStatus;\n      checkTheStatus = true;\n\n      _this.setState({\n        checkTheStatus: checkTheStatus\n      }, function () {});\n    };\n\n    _this.handleDateChange = function (date, name) {\n      _this.setState({\n        [name]: date\n      });\n    };\n\n    _this.selectTechnician = function (technician) {\n      if (technician != null && technician.id != null) {\n        _this.setState({\n          technician: technician\n        }, function () {});\n      }\n    };\n\n    _this.selectReagent = function (reagent) {\n      if (reagent != null && reagent.id != null) {\n        _this.setState({\n          reagent: reagent\n        }, function () {});\n      }\n    };\n\n    _this.handleHealthOrgRoundPopupClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgRoundPopup: false\n      }, function () {});\n    };\n\n    _this.handleSelectHealthOrgRound = function (healthOrgRound) {\n      if (healthOrgRound && healthOrgRound.id) {\n        _this.setState({\n          healthOrgRound: healthOrgRound\n        }, function () {\n          var _this2 = this;\n\n          var _this$state3 = this.state,\n              healthOrgRound = _this$state3.healthOrgRound,\n              details = _this$state3.details;\n          details = [];\n          getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(function (result) {\n            var listEQASampleTube = result.data;\n\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\n              listEQASampleTube.forEach(function (tube) {\n                var eQAResultReportDetail = {};\n                eQAResultReportDetail.sampleTube = tube;\n\n                if (tube.eqaSampleSetDetail && tube.eqaSampleSetDetail.orderNumber) {\n                  eQAResultReportDetail.orderNumber = tube.eqaSampleSetDetail.orderNumber;\n                }\n\n                eQAResultReportDetail.cutOff = \"\";\n                eQAResultReportDetail.oDvalue = \"\";\n                eQAResultReportDetail.ratioOdAndCutOff = \"\";\n                eQAResultReportDetail.result = \"\";\n                details.push(eQAResultReportDetail);\n              });\n            }\n\n            _this2.setState({\n              details\n            });\n          });\n        });\n      }\n\n      _this.handleHealthOrgRoundPopupClose();\n    };\n\n    _this.notificationFinalResult = function () {\n      if (!_this.state.isFinalResult || _this.state.isFinalResult == null) {\n        _this.setState({\n          shouldOpenConfirmationDialog: true\n        });\n      }\n\n      _this.setState({\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleFinalResult = function () {\n      if (_this.state.isFinalResult == null || !_this.state.isFinalResult) {\n        _this.setState({\n          isFinalResult: true,\n          dateSubmitResults: new Date()\n        }, function () {});\n\n        _this.handleDialogClose();\n      }\n\n      if (_this.state.isFinalResult) {\n        _this.setState({\n          isFinalResult: false,\n          dateSubmitResults: new Date()\n        }, function () {});\n\n        _this.handleDialogClose();\n      }\n    };\n\n    _this.handleDialogFinalResultClose = function () {\n      _this.handleDialogClose();\n    };\n\n    _this.handleExportExcel = function () {\n      var t = _this.props.t;\n      exportToExcel(_this.state.id).then(function (res) {\n        toast.info(_this.props.t(\"general.successExport\"));\n        var blob = new Blob([res.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n        saveAs(blob, \"Ketqua.xlsx\");\n      }).catch(function (err) {});\n    };\n\n    _this.handleExportPDF = function () {\n      _this.setState({\n        shouldOpenPrintDialog: true\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenPrintDialog: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportElisaEditorDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView,\n          listHealthOrgRound = _this$props.listHealthOrgRound;\n      this.setState({\n        isRoleAdmin: isRoleAdmin,\n        isView: isView\n      });\n\n      if (item && item.details && item.details.length > 0) {\n        item.details.sort(function (a, b) {\n          return a.orderNumber > b.orderNumber ? 1 : a.orderNumber === b.orderNumber ? a.sampleTube.code > b.sampleTube.code ? 1 : -1 : -1;\n        });\n      }\n\n      if (item.id == null) {\n        item[\"id\"] = null;\n        item[\"typeMethod\"] = 1;\n        item[\"otherReagent\"] = false;\n      }\n\n      if (listHealthOrgRound != null && listHealthOrgRound.length > 0) {\n        item[\"healthOrgRound\"] = listHealthOrgRound[0];\n      }\n\n      this.setState({\n        item: item,\n        listHealthOrgRound: listHealthOrgRound\n      });\n      this.setState(_objectSpread({}, item), function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          isRoleAdmin = _this$state4.isRoleAdmin,\n          isView = _this$state4.isView,\n          isCheck = _this$state4.isCheck,\n          id = _this$state4.id,\n          isViewButton = _this$state4.isViewButton,\n          healthOrgRound = _this$state4.healthOrgRound,\n          isFinalResult = _this$state4.isFinalResult,\n          isManagementUnit = _this$state4.isManagementUnit,\n          loading = _this$state4.loading;\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000,\n        testType: 1\n      };\n      var technicianSearchObject = {\n        pageIndex: 0,\n        pageSize: 1000000,\n        searchByHealthOrg: true,\n        healthOrg: healthOrgRound && healthOrgRound.healthOrg && healthOrgRound.healthOrg.id ? {\n          id: healthOrgRound.healthOrg.id\n        } : null\n      };\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          classes = _this$props2.classes,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        maxWidth: \"lg\",\n        scroll: \"paper\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: clsx(\"wrapperButton\", !loading && \"hidden\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"buttonProgress\",\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }\n      })), this.state.shouldOpenPrintDialog && /*#__PURE__*/React.createElement(EQAResultReportElisaPrint, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenPrintDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: this.state.item,\n        pdf: true // isRoleAdmin={this.state.isRoleAdmin}\n        // isView={this.state.isView}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }\n      }, !isView ? t(\"SaveUpdate\") : t(\"Details\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 15\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 11\n        }\n      }, this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogFinalResultClose,\n        onYesClick: this.handleFinalResult,\n        text: isFinalResult ? t(\"EqaResult.unFinalResultConfirm\") : t(\"EqaResult.FinalResultConfirm\"),\n        Yes: t(\"general.Yes\"),\n        No: t(\"general.No\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EQAResultReportElisaTabs, {\n        t: t,\n        i18n: i18n,\n        item: this.state.item,\n        isView: this.props.isView,\n        isRoleAdmin: this.props.isRoleAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 11\n        }\n      }, (!isView || isRoleAdmin) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"inherit\",\n        onClick: function onClick() {\n          return _this3.sendResults();\n        },\n        style: {\n          backgroundColor: \"#4caf50\",\n          color: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 15\n        }\n      }, t(\"EQAResultReportFastTest.sendResult\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 13\n        }\n      }, \" \", t(\"Cancel\")), (!isView || isRoleAdmin) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        disabled: isViewButton,\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 15\n        }\n      }, t(\"Save\")), this.state.id && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\" // disabled={isViewButton}\n        ,\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.handleExportPDF,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 15\n        }\n      }, t(\"Xuất PDF\")))));\n    }\n  }]);\n\n  return EQAResultReportElisaEditorDialog;\n}(Component);\n\nexport default EQAResultReportElisaEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportElisa/EQAResultReportElisaDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","TextField","Icon","IconButton","FormControl","DialogTitle","DialogContent","DialogActions","Paper","InputAdornment","MenuItem","Checkbox","Select","FormControlLabel","ValidatorForm","TextValidator","technicianSearchByPage","saveItem","getEQASampleTubeByHealthOrgEQARoundId","checkReagentByHealthOrgRound","Autocomplete","ConstantList","AsynchronousAutocomplete","HealthOrgEQARoundPopup","searchByPage","reagentSearchByPage","Draggable","Breadcrumb","ConfirmationDialog","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","LocalConstants","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","toast","getCurrentUser","getListHealthOrgByUser","clsx","CircularProgress","EQAResultReportElisaTabs","exportToExcel","saveAs","EQAResultReportElisaPrint","configure","autoClose","draggable","limit","MaterialButton","props","item","onSelect","TableODColumn","isView","event","onChange","oDvalue","TableCOColumn","cutOff","TableODDeviceCOColumn","ratioOdAndCutOff","TableResultColumn","t","i18n","result","name","EQAResultReportDetail_TestValue","Not_Implemented","negative","indertermine","positive","TableNoteColumn","EQAResultReportElisaEditorDialog","state","rowsPerPage","page","typeMethod","healthOrg","listHealthOrgRound","reagent","technician","details","reagentExpiryDate","testDate","Date","reagentUnBoxDate","dateSubmitResults","roundLists","eqaRoundRegister","roundId","listReagent","reagentId","healthOrgRound","round","orderTest","shouldOpenSearchDialog","shouldOpenConfirmationDialog","shouldOpenHealthOrgRoundPopup","isViewButton","isFinalResult","isRoleAdmin","loading","checkTheStatus","shouldOpenPrintDialog","handleDialogClose","setState","handleChange","source","persist","isActive","target","checked","value","handleRowDataCellChange","rowData","length","forEach","element","tableData","id","parseFloat","toFixed","warning","openCircularProgress","handleFormSubmit","isCheck","otherReagent","el","info","CHECK_HEALTH_ORG","then","res","data","success","catch","sendResults","handleDateChange","date","selectTechnician","selectReagent","handleHealthOrgRoundPopupClose","handleSelectHealthOrgRound","listEQASampleTube","tube","eQAResultReportDetail","sampleTube","eqaSampleSetDetail","orderNumber","push","notificationFinalResult","handleFinalResult","handleDialogFinalResultClose","handleExportExcel","blob","Blob","type","err","handleExportPDF","handleOKEditClose","open","handleClose","sort","a","b","code","isManagementUnit","searchObject","pageIndex","pageSize","testType","technicianSearchObject","searchByHealthOrg","classes","overflowY","display","flexDirection","cursor","position","right","top","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Icon,\r\n  IconButton,\r\n  FormControl,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Paper,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Checkbox,\r\n  Select,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  technicianSearchByPage,\r\n  saveItem,\r\n  getEQASampleTubeByHealthOrgEQARoundId,\r\n  checkReagentByHealthOrgRound,\r\n} from \"./EQAResultReportElisaService\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\r\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport LocalConstants from \"./Constants\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\r\nimport \"../../../styles/views/_loadding.scss\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport clsx from \"clsx\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EQAResultReportElisaTabs from \"./EQAResultReportElisaTabs\";\r\nimport { exportToExcel } from \"./EQAResultReportElisaService\";\r\nimport { saveAs } from \"file-saver\";\r\nimport EQAResultReportElisaPrint from \"./EQAResultReportElisaPrint\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n// function PaperComponent(props) {\r\n//   return (\r\n//     <Draggable handle=\"#draggable-dialog\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n//       <Paper {...props} />\r\n//     </Draggable>\r\n//   );\r\n// }\r\nfunction MaterialButton(props) {\r\n  const item = props.item;\r\n  return (\r\n    <div>\r\n      <IconButton onClick={() => props.onSelect(item)}>\r\n        <Icon color=\"error\">delete</Icon>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableODColumn(props) {\r\n  let item = props.item;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        disabled={props.isView}\r\n        className=\"w-80\"\r\n        onChange={(event) => props.onChange(event, item)}\r\n        type=\"number\"\r\n        value={item.oDvalue}\r\n        name=\"itemODvalue\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableCOColumn(props) {\r\n  let item = props.item;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        disabled={props.isView}\r\n        className=\"w-80\"\r\n        value={item.cutOff}\r\n        onChange={(event) => props.onChange(event, item)}\r\n        type=\"number\"\r\n        name=\"itemcutOff\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableODDeviceCOColumn(props) {\r\n  let item = props.item;\r\n  return (\r\n    <div>\r\n      <TextField\r\n        disabled={props.isView}\r\n        className=\"w-80\"\r\n        value={item.ratioOdAndCutOff}\r\n        type=\"number\"\r\n        name=\"itemRatioOdAndCutOff\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TableResultColumn(props) {\r\n  const { t, i18n } = useTranslation();\r\n  let item = props.item;\r\n  return (\r\n    <div>\r\n      <FormControl className=\"w-100\">\r\n        <Select\r\n          disabled={props.isView}\r\n          value={item.result}\r\n          onChange={(event) => props.onChange(event, item)}\r\n          inputProps={{\r\n            name: \"result\",\r\n          }}\r\n        >\r\n          {/* <MenuItem value=''><em>None</em> </MenuItem> */}\r\n          <MenuItem\r\n            value={\r\n              LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n            }\r\n          >\r\n            {t(\"EQAResultReportElisa.Result.none\")}\r\n          </MenuItem>\r\n          <MenuItem\r\n            value={LocalConstants.EQAResultReportDetail_TestValue.negative}\r\n          >\r\n            {t(\"EQAResultReportElisa.Result.negative\")}\r\n          </MenuItem>\r\n          <MenuItem\r\n            value={LocalConstants.EQAResultReportDetail_TestValue.indertermine}\r\n          >\r\n            {t(\"EQAResultReportElisa.Result.indertermine\")}\r\n          </MenuItem>\r\n          <MenuItem\r\n            value={LocalConstants.EQAResultReportDetail_TestValue.positive}\r\n          >\r\n            {t(\"EQAResultReportElisa.Result.positive\")}\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}\r\nfunction TableNoteColumn(props) {\r\n  let item = props.item;\r\n  return <div></div>;\r\n}\r\nclass EQAResultReportElisaEditorDialog extends Component {\r\n  state = {\r\n    rowsPerPage: 1000,\r\n    page: 0,\r\n    // isView: false,\r\n    typeMethod: 1,\r\n    healthOrg: [],\r\n    listHealthOrgRound: [],\r\n    reagent: null,\r\n    technician: null,\r\n    details: [],\r\n    healthOrg: null,\r\n    reagentExpiryDate: null,\r\n    testDate: new Date(),\r\n    reagentUnBoxDate: null,\r\n    dateSubmitResults: null,\r\n    roundLists: [],\r\n    eqaRoundRegister: [],\r\n    roundId: \"\",\r\n    listReagent: [],\r\n    reagentId: \"\",\r\n    healthOrgRound: null,\r\n    round: null,\r\n    orderTest: \"\",\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenHealthOrgRoundPopup: false,\r\n    // isCheck:false,\r\n    isViewButton: false,\r\n    isFinalResult: false,\r\n    isRoleAdmin: false,\r\n    typeMethod: 1,\r\n    loading: false,\r\n    checkTheStatus: false,\r\n    shouldOpenPrintDialog: false,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenPrintDialog: false,\r\n    });\r\n  };\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    if (source === \"isFinalResult\") {\r\n      this.setState({ isFinalResult: event.target.checked });\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleRowDataCellChange = (rowData, event) => {\r\n    let { details } = this.state;\r\n    let { t } = this.props;\r\n    if (details != null && details.length > 0) {\r\n      details.forEach((element) => {\r\n        if (\r\n          element.tableData != null &&\r\n          rowData != null &&\r\n          rowData.tableData != null &&\r\n          element.tableData.id == rowData.tableData.id\r\n        ) {\r\n          if (event.target.name == \"oDvalue\") {\r\n            if (element.oDvalue == \"\") {\r\n              element.cutOff = \"\";\r\n              element.ratioOdAndCutOff = \"\";\r\n              element.result = \"\";\r\n            }\r\n            element.oDvalue = event.target.value;\r\n            if (\r\n              parseFloat(element.cutOff) > 0 &&\r\n              parseFloat(element.oDvalue) > 0\r\n            ) {\r\n              element.ratioOdAndCutOff = (\r\n                parseFloat(element.oDvalue) / parseFloat(element.cutOff)\r\n              ).toFixed(2);\r\n            }\r\n          } else if (event.target.name == \"cutOff\") {\r\n            if (element.oDvalue == \"\" || element.oDvalue == null) {\r\n              toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\r\n              return;\r\n            }\r\n            element.cutOff = event.target.value;\r\n            if (\r\n              parseFloat(element.cutOff) > 0 &&\r\n              parseFloat(element.oDvalue) > 0\r\n            ) {\r\n              element.ratioOdAndCutOff = (\r\n                parseFloat(element.oDvalue) / parseFloat(element.cutOff)\r\n              ).toFixed(2);\r\n            }\r\n          } else if (event.target.name == \"result\") {\r\n            if (\r\n              event.target.value !==\r\n                LocalConstants.EQAResultReportDetail_TestValue\r\n                  .Not_Implemented &&\r\n              (element.oDvalue === \"\" || element.oDvalue === null)\r\n            ) {\r\n              toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\r\n              element.result = null;\r\n              return;\r\n            }\r\n            //Check od/co < 1 ket luan am\r\n            // if(event.target.value ===LocalConstants.EQAResultReportDetail_TestValue.negative){\r\n            //   if(element.ratioOdAndCutOff != '' && element.ratioOdAndCutOff != null && element.ratioOdAndCutOff < 1){\r\n            //     toast.warning(t(\"EQAResultReportElisa.warningResult\"))\r\n            //   element.result = null\r\n            //   return\r\n            //   }\r\n            // }\r\n            if (\r\n              event.target.value ===\r\n              LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n            ) {\r\n              element.oDvalue = \"\";\r\n              element.cutOff = \"\";\r\n              element.ratioOdAndCutOff = \"\";\r\n            }\r\n\r\n            element.result = event.target.value;\r\n          }\r\n        }\r\n      }); //forEach\r\n      this.setState({ details: details }, () => {});\r\n    }\r\n  };\r\n\r\n  openCircularProgress = () => {\r\n    this.setState({ loading: true });\r\n  };\r\n\r\n  handleFormSubmit = async () => {\r\n    await this.openCircularProgress();\r\n    let { t } = this.props;\r\n    let isCheck = false;\r\n    let { checkTheStatus, item } = this.state;\r\n    let {\r\n      id,\r\n      details,\r\n      healthOrgRound,\r\n      reagent,\r\n      typeMethod,\r\n      otherReagent,\r\n    } = this.state.item;\r\n    //Check null ket qua\r\n    if (details != null && details.length > 0) {\r\n      details.forEach((el) => {\r\n        if (el.result === null || el.result === \"\") {\r\n          isCheck = true;\r\n        }\r\n      });\r\n    } else {\r\n      isCheck = true;\r\n    }\r\n    if (isCheck) {\r\n      toast.info(t(\"EQAResultReportElisa.notResult\"));\r\n      this.setState({ isView: false, isViewButton: false, loading: false });\r\n      return;\r\n    }\r\n    if (checkTheStatus) {\r\n      item[\"isFinalResult\"] = true;\r\n      item[\"dateSubmitResults\"] = new Date();\r\n      this.setState({ item: item });\r\n    }\r\n    //Check null du lieu\r\n    if (\r\n      healthOrgRound == null ||\r\n      healthOrgRound.id == null ||\r\n      reagent == null ||\r\n      reagent.id == null\r\n    ) {\r\n      toast.info(t(\"EQAResultReportElisa.notData\"));\r\n      this.setState({ isView: false, isViewButton: false, loading: false });\r\n      return;\r\n    }\r\n    if (ConstantList.CHECK_HEALTH_ORG && !otherReagent) {\r\n      checkReagentByHealthOrgRound(\r\n        id,\r\n        healthOrgRound.id,\r\n        reagent.id,\r\n        typeMethod\r\n      ).then((res) => {\r\n        if (res.data) {\r\n          toast.warning(t(\"EqaResult.dulicateReagent\"));\r\n          this.setState({ isView: false, isViewButton: false, loading: false });\r\n        } else {\r\n          if (id) {\r\n            this.setState({\r\n              isView: true,\r\n              isRoleAdmin: false,\r\n              isViewButton: true,\r\n            });\r\n            saveItem({\r\n              ...this.state.item,\r\n            })\r\n              .then((res) => {\r\n                this.state.item.id = res?.data?.id;\r\n                this.setState({ ...this.state.item }, () => {});\r\n                toast.success(t(\"mess_edit\"));\r\n                // this.props.handleOKEditClose();\r\n                this.setState({\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                  loading: false,\r\n                });\r\n              })\r\n              .catch(() => {\r\n                toast.warning(t(\"mess_edit_error\"));\r\n                this.setState({\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                  loading: false,\r\n                });\r\n              });\r\n          } else {\r\n            this.setState({\r\n              isView: true,\r\n              isRoleAdmin: false,\r\n              isViewButton: true,\r\n            });\r\n            saveItem({\r\n              ...this.state.item,\r\n            })\r\n              .then((res) => {\r\n                toast.success(t(\"mess_add\"));\r\n                this.state.item.id = res?.data?.id;\r\n                this.setState({ ...this.state.item }, () => {});\r\n\r\n                this.setState({\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                  loading: false,\r\n                });\r\n                // this.props.handleOKEditClose();\r\n              })\r\n              .catch(() => {\r\n                toast.warning(t(\"mess_add_error\"));\r\n                this.setState({\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                  loading: false,\r\n                });\r\n              });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      // details.forEach(el=>{\r\n      //   if(el.result === null || el.result === \"\"){\r\n      //     isCheck = true\r\n      //   }\r\n      // })\r\n      // if(isCheck){\r\n      //   toast.warning(t(\"EQAResultReportElisa.notResult\"));\r\n      //   this.setState({isView: false, isViewButton: false, loading:false});;\r\n      //   return\r\n      // }\r\n\r\n      if (id) {\r\n        this.setState({ isView: true, isRoleAdmin: false, isViewButton: true });\r\n        saveItem({\r\n          ...this.state.item,\r\n        })\r\n          .then((res) => {\r\n            // this.props.handleOKEditClose();\r\n            this.state.item.id = res?.data?.id;\r\n            this.setState({ ...this.state.item }, () => {});\r\n            toast.success(t(\"mess_edit\"));\r\n            this.setState({\r\n              isView: false,\r\n              isViewButton: false,\r\n              loading: false,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            toast.warning(t(\"mess_edit_error\"));\r\n            this.setState({\r\n              isView: false,\r\n              isViewButton: false,\r\n              loading: false,\r\n            });\r\n          });\r\n      } else {\r\n        this.setState({ isView: true, isRoleAdmin: false, isViewButton: true });\r\n        saveItem({\r\n          ...this.state.item,\r\n        })\r\n          .then((res) => {\r\n            this.state.item.id = res?.data?.id;\r\n            this.setState({ ...this.state.item }, () => {});\r\n            // this.props.handleOKEditClose();\r\n            toast.success(t(\"mess_add\"));\r\n            this.setState({\r\n              isView: false,\r\n              isViewButton: false,\r\n              loading: false,\r\n            });\r\n          })\r\n          .catch(() => {\r\n            toast.warning(t(\"mess_add_error\"));\r\n            this.setState({\r\n              isView: false,\r\n              isViewButton: false,\r\n              loading: false,\r\n            });\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  sendResults = () => {\r\n    let { item, checkTheStatus } = this.state;\r\n    checkTheStatus = true;\r\n    this.setState({ checkTheStatus: checkTheStatus }, () => {});\r\n  };\r\n  componentWillMount() {\r\n    let {\r\n      open,\r\n      handleClose,\r\n      item,\r\n      isRoleAdmin,\r\n      isView,\r\n      listHealthOrgRound,\r\n    } = this.props;\r\n    this.setState({ isRoleAdmin: isRoleAdmin, isView: isView });\r\n    if (item && item.details && item.details.length > 0) {\r\n      item.details.sort((a, b) =>\r\n        a.orderNumber > b.orderNumber\r\n          ? 1\r\n          : a.orderNumber === b.orderNumber\r\n          ? a.sampleTube.code > b.sampleTube.code\r\n            ? 1\r\n            : -1\r\n          : -1\r\n      );\r\n    }\r\n    if (item.id == null) {\r\n      item[\"id\"] = null;\r\n      item[\"typeMethod\"] = 1;\r\n      item[\"otherReagent\"] = false;\r\n    }\r\n\r\n    if (listHealthOrgRound != null && listHealthOrgRound.length > 0) {\r\n      item[\"healthOrgRound\"] = listHealthOrgRound[0];\r\n    }\r\n    this.setState({ item: item, listHealthOrgRound: listHealthOrgRound });\r\n    this.setState(\r\n      {\r\n        ...item,\r\n      },\r\n      function () {}\r\n    );\r\n  }\r\n\r\n  handleDateChange = (date, name) => {\r\n    this.setState({\r\n      [name]: date,\r\n    });\r\n  };\r\n\r\n  selectTechnician = (technician) => {\r\n    if (technician != null && technician.id != null) {\r\n      this.setState({ technician: technician }, function () {});\r\n    }\r\n  };\r\n\r\n  selectReagent = (reagent) => {\r\n    if (reagent != null && reagent.id != null) {\r\n      this.setState({ reagent: reagent }, function () {});\r\n    }\r\n  };\r\n\r\n  handleHealthOrgRoundPopupClose = () => {\r\n    this.setState({ shouldOpenHealthOrgRoundPopup: false }, function () {});\r\n  };\r\n\r\n  handleSelectHealthOrgRound = (healthOrgRound) => {\r\n    if (healthOrgRound && healthOrgRound.id) {\r\n      this.setState({ healthOrgRound: healthOrgRound }, function () {\r\n        let { healthOrgRound, details } = this.state;\r\n        details = [];\r\n        getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(\r\n          (result) => {\r\n            let listEQASampleTube = result.data;\r\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\r\n              listEQASampleTube.forEach((tube) => {\r\n                let eQAResultReportDetail = {};\r\n                eQAResultReportDetail.sampleTube = tube;\r\n                if (\r\n                  tube.eqaSampleSetDetail &&\r\n                  tube.eqaSampleSetDetail.orderNumber\r\n                ) {\r\n                  eQAResultReportDetail.orderNumber =\r\n                    tube.eqaSampleSetDetail.orderNumber;\r\n                }\r\n                eQAResultReportDetail.cutOff = \"\";\r\n                eQAResultReportDetail.oDvalue = \"\";\r\n                eQAResultReportDetail.ratioOdAndCutOff = \"\";\r\n                eQAResultReportDetail.result = \"\";\r\n                details.push(eQAResultReportDetail);\r\n              });\r\n            }\r\n            this.setState({ details });\r\n          }\r\n        );\r\n      });\r\n    }\r\n    this.handleHealthOrgRoundPopupClose();\r\n  };\r\n  notificationFinalResult = () => {\r\n    if (!this.state.isFinalResult || this.state.isFinalResult == null) {\r\n      this.setState({ shouldOpenConfirmationDialog: true });\r\n    }\r\n    this.setState({ shouldOpenConfirmationDialog: true });\r\n  };\r\n  handleFinalResult = () => {\r\n    if (this.state.isFinalResult == null || !this.state.isFinalResult) {\r\n      this.setState(\r\n        { isFinalResult: true, dateSubmitResults: new Date() },\r\n        () => {}\r\n      );\r\n      this.handleDialogClose();\r\n    }\r\n    if (this.state.isFinalResult) {\r\n      this.setState(\r\n        { isFinalResult: false, dateSubmitResults: new Date() },\r\n        () => {}\r\n      );\r\n      this.handleDialogClose();\r\n    }\r\n  };\r\n  handleDialogFinalResultClose = () => {\r\n    this.handleDialogClose();\r\n  };\r\n  handleExportExcel = () => {\r\n    let { t } = this.props;\r\n    exportToExcel(this.state.id)\r\n      .then((res) => {\r\n        toast.info(this.props.t(\"general.successExport\"));\r\n        let blob = new Blob([res.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n        });\r\n        saveAs(blob, \"Ketqua.xlsx\");\r\n      })\r\n      .catch((err) => {\r\n      });\r\n  };\r\n  handleExportPDF = () => {\r\n    this.setState({\r\n      shouldOpenPrintDialog: true,\r\n    });\r\n  };\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenPrintDialog: false,\r\n    });\r\n  };\r\n  render() {\r\n    let {\r\n      isRoleAdmin,\r\n      isView,\r\n      isCheck,\r\n      id,\r\n      isViewButton,\r\n      healthOrgRound,\r\n      isFinalResult,\r\n      isManagementUnit,\r\n      loading,\r\n    } = this.state;\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000, testType: 1 };\r\n    let technicianSearchObject = {\r\n      pageIndex: 0,\r\n      pageSize: 1000000,\r\n      searchByHealthOrg: true,\r\n      healthOrg:\r\n        healthOrgRound &&\r\n        healthOrgRound.healthOrg &&\r\n        healthOrgRound.healthOrg.id\r\n          ? { id: healthOrgRound.healthOrg.id }\r\n          : null,\r\n    };\r\n\r\n    let { open, handleClose, classes, t, i18n } = this.props;\r\n\r\n    return (\r\n      <Dialog open={open} maxWidth={\"lg\"} scroll={\"paper\"} fullWidth={true}>\r\n        <div className={clsx(\"wrapperButton\", !loading && \"hidden\")}>\r\n          <CircularProgress className=\"buttonProgress\" size={24} />\r\n        </div>\r\n        {this.state.shouldOpenPrintDialog && (\r\n          <EQAResultReportElisaPrint\r\n            t={t}\r\n            i18n={i18n}\r\n            handleClose={this.handleDialogClose}\r\n            open={this.state.shouldOpenPrintDialog}\r\n            handleOKEditClose={this.handleOKEditClose}\r\n            item={this.state.item}\r\n            pdf={true}\r\n            // isRoleAdmin={this.state.isRoleAdmin}\r\n            // isView={this.state.isView}\r\n          />\r\n        )}\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n            <span className=\"mb-20 styleColor\">\r\n              {!isView ? t(\"SaveUpdate\") : t(\"Details\")}\r\n            </span>\r\n\r\n            <IconButton\r\n              style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              onClick={() => handleClose()}\r\n            >\r\n              <Icon color=\"error\" title={t(\"close\")}>\r\n                close\r\n              </Icon>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {this.state.shouldOpenConfirmationDialog && (\r\n              <ConfirmationDialog\r\n                title={t(\"confirm\")}\r\n                open={this.state.shouldOpenConfirmationDialog}\r\n                onConfirmDialogClose={this.handleDialogFinalResultClose}\r\n                onYesClick={this.handleFinalResult}\r\n                text={\r\n                  isFinalResult\r\n                    ? t(\"EqaResult.unFinalResultConfirm\")\r\n                    : t(\"EqaResult.FinalResultConfirm\")\r\n                }\r\n                Yes={t(\"general.Yes\")}\r\n                No={t(\"general.No\")}\r\n              />\r\n            )}\r\n            <Grid item xs={12}>\r\n              <EQAResultReportElisaTabs\r\n                t={t}\r\n                i18n={i18n}\r\n                item={this.state.item}\r\n                isView={this.props.isView}\r\n                isRoleAdmin={this.props.isRoleAdmin}\r\n              />\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            {/* <Button\r\n                variant=\"contained\"\r\n                // disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={this.handleExportExcel}\r\n              >\r\n                {t(\"exportExcel\")}\r\n              </Button> */}\r\n\r\n            {(!isView || isRoleAdmin) && (\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"inherit\"\r\n                onClick={() => this.sendResults()}\r\n                style={{ backgroundColor: \"#4caf50\", color: \"#fff\" }}\r\n              >\r\n                {t(\"EQAResultReportFastTest.sendResult\")}\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"\"\r\n              color=\"secondary\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              {\" \"}\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {(!isView || isRoleAdmin) && (\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"Save\")}\r\n              </Button>\r\n            )}\r\n\r\n            {this.state.id && (\r\n              <Button\r\n                variant=\"contained\"\r\n                // disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={this.handleExportPDF}\r\n              >\r\n                {t(\"Xuất PDF\")}\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAResultReportElisaEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}