{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportElisa\\\\EQAResultReportElisaInformation.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, TextField, Icon, IconButton, FormControl, DialogTitle, DialogContent, DialogActions, Paper, InputAdornment, MenuItem, Checkbox, Select, FormControlLabel } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getEQASampleTubeByHealthOrgEQARoundId, checkReagentByHealthOrgRound } from \"./EQAResultReportElisaService\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ConstantList from \"../../appConfig\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\nimport Draggable from 'react-draggable';\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport LocalConstants from \"./Constants\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport '../../../styles/views/_loadding.scss';\nimport '../../../styles/views/_style.scss';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n}); // function PaperComponent(props) {\n//   return (\n//     <Draggable handle=\"#draggable-dialog\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n//       <Paper {...props} />\n//     </Draggable>\n//   );\n// }\n\nfunction MaterialButton(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nfunction TableODColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    type: \"number\",\n    value: item.oDvalue,\n    name: \"itemODvalue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction TableCOColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    value: item.cutOff,\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    type: \"number\",\n    name: \"itemcutOff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction TableODDeviceCOColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    value: item.ratioOdAndCutOff,\n    type: \"number\",\n    name: \"itemRatioOdAndCutOff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction TableResultColumn(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disabled: props.isView,\n    value: item.result,\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    inputProps: {\n      name: \"result\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.negative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.negative\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.indertermine\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.positive\")))));\n}\n\nfunction TableNoteColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  });\n}\n\nvar EQAResultReportElisaInformation = /*#__PURE__*/function (_Component) {\n  _inherits(EQAResultReportElisaInformation, _Component);\n\n  var _super = _createSuper(EQAResultReportElisaInformation);\n\n  function EQAResultReportElisaInformation(props) {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportElisaInformation);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 1000,\n      page: 0,\n      typeMethod: 1,\n      healthOrg: [],\n      listHealthOrgRound: [],\n      reagent: null,\n      technician: null,\n      details: [],\n      healthOrg: null,\n      reagentExpiryDate: null,\n      testDate: null,\n      reagentUnBoxDate: null,\n      dateSubmitResults: null,\n      roundLists: [],\n      eqaRoundRegister: [],\n      roundId: \"\",\n      listReagent: [],\n      reagentId: '',\n      healthOrgRound: null,\n      round: null,\n      orderTest: '',\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenHealthOrgRoundPopup: false,\n      shouldOpenConfirmation: false,\n      isViewButton: false,\n      isFinalResult: false,\n      isRoleAdmin: false,\n      typeMethod: 1,\n      loading: false\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmation: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      var item = _this.state.item;\n\n      if (item == null) {\n        item = {};\n      }\n\n      var name = event.target.name;\n      var value = event.target.value;\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"isFinalResult\") {\n        item[\"isFinalResult\"] = event.target.checked;\n\n        _this.setState({\n          item: item\n        });\n      }\n\n      item[name] = value;\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var item = _this.state.item;\n      var t = _this.props.t;\n\n      if (item.details != null && item.details.length > 0) {\n        item.details.forEach(function (element) {\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name == \"oDvalue\") {\n              if (element.oDvalue == '') {\n                element.cutOff = '';\n                element.ratioOdAndCutOff = '';\n                element.result = '';\n              }\n\n              element.oDvalue = event.target.value;\n\n              if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\n                element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\n              }\n            } else if (event.target.name == \"cutOff\") {\n              if (element.oDvalue == \"\" || element.oDvalue == null) {\n                toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\n                return;\n              }\n\n              element.cutOff = event.target.value;\n\n              if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\n                element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\n              }\n            } else if (event.target.name == \"result\") {\n              if (event.target.value !== LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented && (element.oDvalue === '' || element.oDvalue === null)) {\n                toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\n                element.result = null;\n                return;\n              }\n\n              if (event.target.value === LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.oDvalue = '';\n                element.cutOff = '';\n                element.ratioOdAndCutOff = '';\n              }\n\n              element.result = event.target.value;\n            } else if (event.target.name == \"note\") {\n              element.note = event.target.value;\n            }\n          }\n        }); //forEach\n\n        _this.setState({\n          item: item\n        }, function () {});\n      }\n    };\n\n    _this.openCircularProgress = function () {\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleDateChange = function (date, name) {\n      var item = _this.state.item;\n\n      if (item == null) {\n        item = {};\n      }\n\n      item[name] = date;\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.selectReagent = function (reagent) {\n      var item = _this.state.item;\n\n      if (item == null) {\n        item = {};\n      }\n\n      if (reagent != null && reagent.id != null) {\n        if (reagent.name === \"Sinh phẩm khác\") {\n          _this.setState({\n            shouldOpenConfirmation: true\n          });\n\n          item[\"otherReagent\"] = true;\n        } else {\n          item[\"otherReagent\"] = false;\n        }\n\n        item[\"reagent\"] = reagent;\n\n        _this.setState({\n          item: item\n        }, function () {});\n      }\n    };\n\n    _this.handleHealthOrgRoundPopupClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgRoundPopup: false\n      }, function () {});\n    };\n\n    _this.handleSelectHealthOrgRound = function (healthOrgRound) {\n      var item = _this.state.item;\n\n      if (item == null) {\n        item = {};\n      }\n\n      if (healthOrgRound && healthOrgRound.id) {\n        item[\"healthOrgRound\"] = healthOrgRound;\n\n        _this.setState({\n          item: item\n        }, function () {\n          var _this$state$item,\n              _this$state$item2,\n              _this2 = this;\n\n          // let { healthOrgRound, details } = this.state;\n          var item = this.state.item;\n          var details = (_this$state$item = this.state.item) === null || _this$state$item === void 0 ? void 0 : _this$state$item.details;\n          details = [];\n          getEQASampleTubeByHealthOrgEQARoundId((_this$state$item2 = this.state.item) === null || _this$state$item2 === void 0 ? void 0 : _this$state$item2.healthOrgRound.id).then(function (result) {\n            var listEQASampleTube = result.data;\n\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\n              listEQASampleTube.forEach(function (tube) {\n                var eQAResultReportDetail = {};\n                eQAResultReportDetail.sampleTube = tube;\n\n                if (tube.eqaSampleSetDetail && tube.eqaSampleSetDetail.orderNumber) {\n                  eQAResultReportDetail.orderNumber = tube.eqaSampleSetDetail.orderNumber;\n                }\n\n                eQAResultReportDetail.cutOff = '';\n                eQAResultReportDetail.oDvalue = '';\n                eQAResultReportDetail.ratioOdAndCutOff = '';\n                eQAResultReportDetail.result = '';\n                details.push(eQAResultReportDetail);\n              });\n            }\n\n            item[\"details\"] = details;\n\n            _this2.setState({\n              item: item\n            });\n          });\n        });\n      }\n\n      _this.handleHealthOrgRoundPopupClose();\n    };\n\n    _this.notificationFinalResult = function () {\n      _this.setState({\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleFinalResult = function () {\n      var item = _this.state.item;\n\n      if (item.isFinalResult == null || !item.isFinalResult) {\n        item[\"isFinalResult\"] = true;\n        item[\"dateSubmitResults\"] = new Date();\n\n        _this.setState({\n          item: item\n        }, function () {});\n\n        _this.handleDialogClose();\n\n        return;\n      }\n\n      if (item.isFinalResult) {\n        item[\"isFinalResult\"] = false;\n        item[\"dateSubmitResults\"] = null;\n\n        _this.setState({\n          item: item\n        }, function () {});\n\n        _this.handleDialogClose();\n\n        return;\n      }\n    };\n\n    _this.handleDialogFinalResultClose = function () {\n      _this.handleDialogClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportElisaInformation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView;\n\n      if (item != null && item.reagent != null && item.reagent.name != null) {\n        if (item.reagent.name === \"Sinh phẩm khác\") {\n          item[\"otherReagent\"] = true;\n        } else {\n          item[\"otherReagent\"] = false;\n        }\n      }\n\n      this.setState({\n        item: item\n      }, function () {\n        if (item.listHealthOrgRound != null) {\n          _this3.setState({\n            listHealthOrgRound: item.listHealthOrgRound,\n            healthOrgRound: item.listHealthOrgRound[0]\n          }, function () {\n            _this3.handleSelectHealthOrgRound(_this3.state.healthOrgRound);\n          });\n        }\n      });\n      this.setState({\n        isRoleAdmin: isRoleAdmin,\n        isView: isView\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$item3,\n          _this$state$item4,\n          _this$state$item5,\n          _this$state$item6,\n          _this4 = this,\n          _this$state$item7,\n          _this$state$item8,\n          _this$state$item9,\n          _this$state$item10,\n          _this$state$item11,\n          _this$state$item12,\n          _this$state$item13,\n          _this$state$item14,\n          _this$state$item15,\n          _this$state$item16,\n          _this$state$item17,\n          _this$state$item18,\n          _this$state$item19,\n          _this$state$item20,\n          _this$state$item21,\n          _this$state$item22,\n          _this$state$item23,\n          _this$state$item24,\n          _this$state$item25,\n          _this$state$item26,\n          _this$state$item27,\n          _this$state$item28,\n          _this$state$item29;\n\n      var _this$state = this.state,\n          isRoleAdmin = _this$state.isRoleAdmin,\n          isView = _this$state.isView,\n          isCheck = _this$state.isCheck,\n          id = _this$state.id,\n          isViewButton = _this$state.isViewButton,\n          supplyOfReagent = _this$state.supplyOfReagent,\n          shouldOpenHealthOrgRoundPopup = _this$state.shouldOpenHealthOrgRoundPopup,\n          personBuyReagent = _this$state.personBuyReagent,\n          reagent = _this$state.reagent,\n          listHealthOrgRound = _this$state.listHealthOrgRound,\n          reagentLot = _this$state.reagentLot,\n          orderTest = _this$state.orderTest,\n          reagentExpiryDate = _this$state.reagentExpiryDate,\n          testDate = _this$state.testDate,\n          dateSubmitResults = _this$state.dateSubmitResults,\n          technician = _this$state.technician,\n          healthOrgRound = _this$state.healthOrgRound,\n          incubationTemp = _this$state.incubationTemp,\n          incubationPeriod = _this$state.incubationPeriod,\n          incubationTempWithPlus = _this$state.incubationTempWithPlus,\n          incubationPeriodWithPlus = _this$state.incubationPeriodWithPlus,\n          incubationTempWithSubstrate = _this$state.incubationTempWithSubstrate,\n          incubationPeriodWithSubstrate = _this$state.incubationPeriodWithSubstrate,\n          details = _this$state.details,\n          note = _this$state.note,\n          isFinalResult = _this$state.isFinalResult,\n          isManagementUnit = _this$state.isManagementUnit,\n          reagentUnBoxDate = _this$state.reagentUnBoxDate,\n          loading = _this$state.loading,\n          item = _this$state.item;\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000,\n        testType: 1\n      };\n      var technicianSearchObject = {\n        pageIndex: 0,\n        pageSize: 1000000,\n        searchByHealthOrg: true,\n        healthOrg: ((_this$state$item3 = this.state.item) === null || _this$state$item3 === void 0 ? void 0 : _this$state$item3.healthOrgRound) && ((_this$state$item4 = this.state.item) === null || _this$state$item4 === void 0 ? void 0 : _this$state$item4.healthOrgRound.healthOrg) && ((_this$state$item5 = this.state.item) === null || _this$state$item5 === void 0 ? void 0 : _this$state$item5.healthOrgRound.healthOrg.id) ? {\n          id: (_this$state$item6 = this.state.item) === null || _this$state$item6 === void 0 ? void 0 : _this$state$item6.healthOrgRound.healthOrg.id\n        } : null\n      };\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          classes = _this$props2.classes,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var columns = [{\n        title: t(\"EQAResultReportElisa.sampleCode\"),\n        field: \"sampleTube.code\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"40px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"40px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.ODvalue\"),\n        field: \"oDvalue\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"80px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"80px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            disabled: isRoleAdmin,\n            className: \"w-80\",\n            onChange: function onChange(oDvalue) {\n              return _this4.handleRowDataCellChange(rowData, oDvalue);\n            } //type=\"number\"\n            ,\n            type: \"text\",\n            validators: ['isFloat'],\n            errorMessages: t('general.isFloat'),\n            value: rowData.oDvalue ? rowData.oDvalue : '',\n            name: \"oDvalue\",\n            step: 0.0001,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 28\n            }\n          });\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.cutOff\"),\n        field: \"cutOff\",\n        align: \"left\",\n        width: \"200\",\n        headerStyle: {\n          minWidth: \"120px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"120px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            disabled: isRoleAdmin,\n            className: \"w-80\",\n            value: rowData.cutOff ? rowData.cutOff : '',\n            onChange: function onChange(cutOff) {\n              return _this4.handleRowDataCellChange(rowData, cutOff);\n            } //type=\"number\"\n            ,\n            type: \"text\",\n            validators: ['isFloat'],\n            errorMessages: t('general.isFloat'),\n            name: \"cutOff\",\n            step: 0.0001,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.ratioOdAndCutOff\"),\n        field: \"ratioOdAndCutOff\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            disabled: isRoleAdmin,\n            className: \"w-80\",\n            value: rowData.ratioOdAndCutOff ? rowData.ratioOdAndCutOff : '',\n            type: \"text\",\n            validators: ['isFloat'],\n            errorMessages: t('general.isFloat'),\n            name: \"itemRatioOdAndCutOff\",\n            step: 0.0001,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 16\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 22\n          }\n        }, \" * \"), t(\"EQAResultReportElisa.Result.title\")),\n        field: \"result\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(FormControl, {\n            className: \"w-80\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Select, {\n            disabled: isRoleAdmin,\n            value: rowData.result,\n            onChange: function onChange(result) {\n              return _this4.handleRowDataCellChange(rowData, result);\n            },\n            inputProps: {\n              name: \"result\",\n              id: \"result-simple\"\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 15\n            }\n          }, t(\"EQAResultReportElisa.Result.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.negative,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 15\n            }\n          }, t(\"EQAResultReportElisa.Result.negative\")), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }\n          }, t(\"EQAResultReportElisa.Result.indertermine\")), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.positive,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }\n          }, t(\"EQAResultReportElisa.Result.positive\"))));\n        }\n      }, {\n        title: t(\"SampleManagement.serum-bottle.note\"),\n        field: \"note\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            className: \"w-100\",\n            onChange: function onChange(note) {\n              return _this4.handleRowDataCellChange(rowData, note);\n            },\n            type: \"textarea\",\n            multiLine: true,\n            rowsMax: 4,\n            name: \"note\",\n            value: rowData.note ? rowData.note : '',\n            disabled: isRoleAdmin,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 11\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 7\n        }\n      }, this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogFinalResultClose,\n        onYesClick: this.handleFinalResult,\n        text: ((_this$state$item7 = this.state.item) === null || _this$state$item7 === void 0 ? void 0 : _this$state$item7.isFinalResult) ? t(\"EqaResult.unFinalResultConfirm\") : t(\"EqaResult.FinalResultConfirm\"),\n        Yes: t(\"general.Yes\"),\n        No: t(\"general.No\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }\n      }), this.state.shouldOpenConfirmation && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"general.noti\"),\n        open: this.state.shouldOpenConfirmation,\n        onYesClick: this.handleDialogFinalResultClose,\n        text: t(\"general.otherReagent\"),\n        Yes: t(\"general.Yes\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: this.props.listHealthOrgRound,\n        className: \"flex-end\",\n        disabled: isRoleAdmin,\n        getOptionLabel: function getOptionLabel(option) {\n          return option.healthOrg.name;\n        },\n        onChange: function onChange(event, healthOrgRound) {\n          return _this4.handleSelectHealthOrgRound(healthOrgRound);\n        },\n        value: (_this$state$item8 = this.state.item) === null || _this$state$item8 === void 0 ? void 0 : _this$state$item8.healthOrgRound,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: /*#__PURE__*/React.createElement(\"span\", {\n              className: \"font\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 25\n              }\n            }, t('EQAResultReportElisa.healthOrgName')),\n            variant: \"outlined\",\n            disabled: isRoleAdmin,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 43\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 19\n          }\n        }, \" * \"), t(\"EQAResultReportElisa.order\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"orderTest\",\n        value: (_this$state$item9 = this.state.item) === null || _this$state$item9 === void 0 ? void 0 : _this$state$item9.orderTest,\n        disabled: isRoleAdmin,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        className: \"w-100\",\n        margin: \"none\",\n        id: \"mui-pickers-testDate\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 25\n          }\n        }, t(\"EQAResultReportElisa.testDate\")),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        autoOk: true,\n        format: \"dd/MM/yyyy\",\n        value: ((_this$state$item10 = this.state.item) === null || _this$state$item10 === void 0 ? void 0 : _this$state$item10.testDate) ? (_this$state$item11 = this.state.item) === null || _this$state$item11 === void 0 ? void 0 : _this$state$item11.testDate : null,\n        disabled: isRoleAdmin,\n        onChange: function onChange(date) {\n          return _this4.handleDateChange(date, \"testDate\");\n        },\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 26\n          }\n        }, t(\"EQAResultReportElisa.technician\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"technician\",\n        value: technician,\n        disabled: isView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AsynchronousAutocomplete, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 19\n          }\n        }, \" * \"), t(\"EqaResult.reagent\")),\n        size: \"small\",\n        variant: \"outlined\",\n        disabled: isRoleAdmin,\n        searchFunction: reagentSearchByPage,\n        searchObject: searchObject,\n        defaultValue: (_this$state$item12 = this.state.item) === null || _this$state$item12 === void 0 ? void 0 : _this$state$item12.reagent,\n        value: (_this$state$item13 = this.state.item) === null || _this$state$item13 === void 0 ? void 0 : _this$state$item13.reagent,\n        displayLable: 'name',\n        valueTextValidator: (_this$state$item14 = this.state.item) === null || _this$state$item14 === void 0 ? void 0 : _this$state$item14.reagent,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        onSelect: this.selectReagent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 19\n          }\n        }, \" * \"), t(\"EQAResultReportElisa.reagentLot\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"reagentLot\",\n        value: (_this$state$item15 = this.state.item) === null || _this$state$item15 === void 0 ? void 0 : _this$state$item15.reagentLot,\n        disabled: isRoleAdmin,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        container: true,\n        spacing: 2,\n        lg: 6,\n        md: 6,\n        sm: 12,\n        xs: 12,\n        className: \"pr_mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        className: \"pr_mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 25\n          }\n        }, t(\"reagent.expirationDay\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"dayReagentExpiryDate\",\n        value: (_this$state$item16 = this.state.item) === null || _this$state$item16 === void 0 ? void 0 : _this$state$item16.dayReagentExpiryDate,\n        disabled: isRoleAdmin,\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        className: \"pr_mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 25\n          }\n        }, t(\"reagent.expirationMonth\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        name: \"monthReagentExpiryDate\",\n        disabled: isRoleAdmin,\n        value: (_this$state$item17 = this.state.item) === null || _this$state$item17 === void 0 ? void 0 : _this$state$item17.monthReagentExpiryDate,\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        className: \"pr_mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 25\n          }\n        }, t(\"reagent.expirationYear\")),\n        onChange: this.handleChange,\n        type: \"number\",\n        disabled: isRoleAdmin,\n        name: \"yeahReagentExpiryDate\",\n        value: (_this$state$item18 = this.state.item) === null || _this$state$item18 === void 0 ? void 0 : _this$state$item18.yeahReagentExpiryDate,\n        variant: \"outlined\",\n        size: \"small\",\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        fullWidth: true,\n        margin: \"none\",\n        id: \"mui-pickers-reagentExpiryDate\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 25\n          }\n        }, t('EQAResultReportElisa.reagentUnBoxDate')),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        disabled: isRoleAdmin,\n        autoOk: false,\n        format: \"dd/MM/yyyy\",\n        value: (_this$state$item19 = this.state.item) === null || _this$state$item19 === void 0 ? void 0 : _this$state$item19.reagentUnBoxDate,\n        disabled: isRoleAdmin,\n        onChange: function onChange(date) {\n          return _this4.handleDateChange(date, \"reagentUnBoxDate\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 23\n          }\n        }, t(\"EQAResultReportElisa.supplyOfReagent\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"supplyOfReagent\",\n        value: (_this$state$item20 = this.state.item) === null || _this$state$item20 === void 0 ? void 0 : _this$state$item20.supplyOfReagent,\n        disabled: isRoleAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 23\n          }\n        }, t(\"EQAResultReportElisa.personBuyReagent\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"personBuyReagent\",\n        value: (_this$state$item21 = this.state.item) === null || _this$state$item21 === void 0 ? void 0 : _this$state$item21.personBuyReagent,\n        disabled: isRoleAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 13\n        }\n      })), ((_this$state$item22 = this.state.item) === null || _this$state$item22 === void 0 ? void 0 : _this$state$item22.isFinalResult) && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        fullWidth: true,\n        margin: \"none\",\n        disabled: true,\n        id: \"mui-pickers-dateSubmitResults\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 27\n          }\n        }, t('EQAResultReportElisa.dateSubmitResults')),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        autoOk: false,\n        format: \"dd/MM/yyyy\",\n        value: (_this$state$item23 = this.state.item) === null || _this$state$item23 === void 0 ? void 0 : _this$state$item23.dateSubmitResults,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 17\n        }\n      }))), ((_this$state$item24 = this.state.item) === null || _this$state$item24 === void 0 ? void 0 : _this$state$item24.isFinalResult) && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          style: {\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 25\n          }\n        }, \" \", t('EQAResultReportFastTest.isFinalResult')),\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          checked: this.state.item.isFinalResult ? true : false,\n          onClick: function onClick(isFinalResult) {\n            return _this4.notificationFinalResult(isFinalResult);\n          } // this.handleChange(isFinalResult, 'isFinalResult')\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 27\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        disabled: isRoleAdmin,\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 907,\n            columnNumber: 23\n          }\n        }, t(\"SampleManagement.serum-bottle.note\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        size: \"small\",\n        variant: \"outlined\",\n        name: \"note\",\n        value: (_this$state$item25 = this.state.item) === null || _this$state$item25 === void 0 ? void 0 : _this$state$item25.note,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }\n      })), ((_this$state$item26 = this.state.item) === null || _this$state$item26 === void 0 ? void 0 : _this$state$item26.otherReagent) && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        disabled: isRoleAdmin,\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 23\n          }\n        }, t(\"reagent.note\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        size: \"small\",\n        variant: \"outlined\",\n        name: \"noteOtherReagent\",\n        value: (_this$state$item27 = this.state.item) === null || _this$state$item27 === void 0 ? void 0 : _this$state$item27.noteOtherReagent,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"\",\n        data: ((_this$state$item28 = this.state.item) === null || _this$state$item28 === void 0 ? void 0 : _this$state$item28.details) ? (_this$state$item29 = this.state.item) === null || _this$state$item29 === void 0 ? void 0 : _this$state$item29.details : [],\n        columns: columns,\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 953,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this4.data = rows;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return EQAResultReportElisaInformation;\n}(Component);\n\nexport default EQAResultReportElisaInformation;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportElisa/EQAResultReportElisaInformation.jsx"],"names":["React","Component","Dialog","Button","Grid","TextField","Icon","IconButton","FormControl","DialogTitle","DialogContent","DialogActions","Paper","InputAdornment","MenuItem","Checkbox","Select","FormControlLabel","ValidatorForm","TextValidator","getEQASampleTubeByHealthOrgEQARoundId","checkReagentByHealthOrgRound","Autocomplete","ConstantList","AsynchronousAutocomplete","HealthOrgEQARoundPopup","searchByPage","reagentSearchByPage","Draggable","Breadcrumb","ConfirmationDialog","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","LocalConstants","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","toast","getCurrentUser","getListHealthOrgByUser","configure","autoClose","draggable","limit","MaterialButton","props","item","onSelect","TableODColumn","isView","event","onChange","oDvalue","TableCOColumn","cutOff","TableODDeviceCOColumn","ratioOdAndCutOff","TableResultColumn","t","i18n","result","name","EQAResultReportDetail_TestValue","Not_Implemented","negative","indertermine","positive","TableNoteColumn","EQAResultReportElisaInformation","state","rowsPerPage","page","typeMethod","healthOrg","listHealthOrgRound","reagent","technician","details","reagentExpiryDate","testDate","reagentUnBoxDate","dateSubmitResults","roundLists","eqaRoundRegister","roundId","listReagent","reagentId","healthOrgRound","round","orderTest","shouldOpenSearchDialog","shouldOpenConfirmationDialog","shouldOpenHealthOrgRoundPopup","shouldOpenConfirmation","isViewButton","isFinalResult","isRoleAdmin","loading","handleDialogClose","setState","handleChange","source","target","value","persist","isActive","checked","handleRowDataCellChange","rowData","length","forEach","element","tableData","id","parseFloat","toFixed","warning","note","openCircularProgress","handleDateChange","date","selectReagent","handleHealthOrgRoundPopupClose","handleSelectHealthOrgRound","then","listEQASampleTube","data","tube","eQAResultReportDetail","sampleTube","eqaSampleSetDetail","orderNumber","push","notificationFinalResult","handleFinalResult","Date","handleDialogFinalResultClose","open","handleClose","isCheck","supplyOfReagent","personBuyReagent","reagentLot","incubationTemp","incubationPeriod","incubationTempWithPlus","incubationPeriodWithPlus","incubationTempWithSubstrate","incubationPeriodWithSubstrate","isManagementUnit","searchObject","pageIndex","pageSize","testType","technicianSearchObject","searchByHealthOrg","classes","columns","title","field","width","headerStyle","minWidth","paddingLeft","paddingRight","textAlign","cellStyle","align","render","color","option","params","dayReagentExpiryDate","monthReagentExpiryDate","yeahReagentExpiryDate","fontWeight","otherReagent","noteOtherReagent","selection","actionsColumnIndex","paging","search","rowStyle","index","backgroundColor","padding","toolbar","Toolbar","rows"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport\r\n  {\r\n    Dialog,\r\n    Button,\r\n    Grid,\r\n    TextField,\r\n    Icon,\r\n    IconButton,\r\n    FormControl,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Paper,\r\n    InputAdornment,\r\n    MenuItem,\r\n    Checkbox, Select,\r\n    FormControlLabel\r\n  } from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport\r\n  {\r\n    getEQASampleTubeByHealthOrgEQARoundId,\r\n    checkReagentByHealthOrgRound\r\n  } from \"./EQAResultReportElisaService\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ConstantList from \"../../appConfig\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\r\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\r\nimport Draggable from 'react-draggable';\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport LocalConstants from \"./Constants\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\r\nimport '../../../styles/views/_loadding.scss';\r\nimport '../../../styles/views/_style.scss';\r\n\r\ntoast.configure( {\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3\r\n} );\r\n// function PaperComponent(props) {\r\n//   return (\r\n//     <Draggable handle=\"#draggable-dialog\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n//       <Paper {...props} />\r\n//     </Draggable>\r\n//   );\r\n// }\r\nfunction MaterialButton ( props )\r\n{\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={ () => props.onSelect( item ) }>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\n\r\nfunction TableODColumn ( props )\r\n{\r\n  let item = props.item;\r\n  return <div>\r\n    <TextField\r\n      disabled={ props.isView }\r\n      className=\"w-80\"\r\n      onChange={ ( event ) => props.onChange( event, item ) }\r\n      type=\"number\"\r\n      value={ item.oDvalue }\r\n      name=\"itemODvalue\"\r\n    />\r\n  </div>;\r\n}\r\n\r\nfunction TableCOColumn ( props )\r\n{\r\n  let item = props.item;\r\n  return <div>\r\n    <TextField\r\n      disabled={ props.isView }\r\n      className=\"w-80\"\r\n      value={ item.cutOff }\r\n      onChange={ ( event ) => props.onChange( event, item ) }\r\n      type=\"number\"\r\n      name=\"itemcutOff\"\r\n    />\r\n  </div>;\r\n}\r\n\r\nfunction TableODDeviceCOColumn ( props )\r\n{\r\n\r\n  let item = props.item;\r\n  return <div>\r\n    <TextField\r\n      disabled={ props.isView }\r\n      className=\"w-80\"\r\n      value={ item.ratioOdAndCutOff }\r\n      type=\"number\"\r\n      name=\"itemRatioOdAndCutOff\"\r\n    />\r\n  </div>;\r\n}\r\n\r\nfunction TableResultColumn ( props )\r\n{\r\n  const { t, i18n } = useTranslation();\r\n  let item = props.item;\r\n  return <div>\r\n    <FormControl className=\"w-100\">\r\n      <Select\r\n        disabled={ props.isView }\r\n        value={ item.result }\r\n        onChange={ ( event ) => props.onChange( event, item ) }\r\n        inputProps={ {\r\n          name: \"result\",\r\n        } }\r\n      >\r\n        {/* <MenuItem value=''><em>None</em> </MenuItem> */ }\r\n        <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented }>{ t( \"EQAResultReportElisa.Result.none\" ) }</MenuItem>\r\n        <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.negative }>{ t( \"EQAResultReportElisa.Result.negative\" ) }</MenuItem>\r\n        <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.indertermine }>{ t( \"EQAResultReportElisa.Result.indertermine\" ) }</MenuItem>\r\n        <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.positive }>{ t( \"EQAResultReportElisa.Result.positive\" ) }</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  </div>;\r\n}\r\nfunction TableNoteColumn ( props )\r\n{\r\n  let item = props.item;\r\n  return <div>\r\n\r\n  </div>;\r\n}\r\nclass EQAResultReportElisaInformation extends Component\r\n{\r\n  state = {\r\n    rowsPerPage: 1000,\r\n    page: 0,\r\n    typeMethod: 1, healthOrg: [],\r\n    listHealthOrgRound: [],\r\n    reagent: null,\r\n    technician: null,\r\n    details: [],\r\n    healthOrg: null,\r\n    reagentExpiryDate: null,\r\n    testDate: null,\r\n    reagentUnBoxDate: null,\r\n    dateSubmitResults: null,\r\n    roundLists: [],\r\n    eqaRoundRegister: [],\r\n    roundId: \"\",\r\n    listReagent: [],\r\n    reagentId: '',\r\n    healthOrgRound: null,\r\n    round: null,\r\n    orderTest: '',\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenHealthOrgRoundPopup: false,\r\n    shouldOpenConfirmation: false,\r\n    isViewButton: false,\r\n    isFinalResult: false,\r\n    isRoleAdmin: false,\r\n    typeMethod: 1,\r\n    loading: false\r\n  };\r\n\r\n  constructor ( props )\r\n  {\r\n    super( props );\r\n  }\r\n\r\n  componentDidMount ()\r\n  {\r\n  }\r\n  handleDialogClose = () =>\r\n  {\r\n    this.setState( { shouldOpenConfirmationDialog: false, shouldOpenConfirmation: false } )\r\n  }\r\n  handleChange = ( event, source ) =>\r\n  {\r\n    let { item } = this.state\r\n    if ( item == null )\r\n    {\r\n      item = {}\r\n    }\r\n    let name = event.target.name\r\n    let value = event.target.value\r\n    event.persist();\r\n    if ( source === \"switch\" )\r\n    {\r\n      this.setState( { isActive: event.target.checked } );\r\n      return;\r\n    }\r\n    if ( source === \"isFinalResult\" )\r\n    {\r\n      item[ \"isFinalResult\" ] = event.target.checked\r\n      this.setState( { item: item } )\r\n    }\r\n    item[ name ] = value\r\n    this.setState( {\r\n      item: item\r\n    } );\r\n\r\n  };\r\n\r\n  handleRowDataCellChange = ( rowData, event ) =>\r\n  {\r\n    let { item } = this.state;\r\n    let { t } = this.props;\r\n    if ( item.details != null && item.details.length > 0 )\r\n    {\r\n      item.details.forEach( element =>\r\n      {\r\n        if ( element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id )\r\n        {\r\n          if ( event.target.name == \"oDvalue\" )\r\n          {\r\n            if ( element.oDvalue == '' )\r\n            {\r\n              element.cutOff = '';\r\n              element.ratioOdAndCutOff = '';\r\n              element.result = '';\r\n            }\r\n            element.oDvalue = event.target.value;\r\n            if ( parseFloat( element.cutOff ) > 0 && parseFloat( element.oDvalue ) > 0 )\r\n            {\r\n              element.ratioOdAndCutOff = ( parseFloat( element.oDvalue ) / parseFloat( element.cutOff ) ).toFixed( 2 );\r\n            }\r\n          } else if ( event.target.name == \"cutOff\" )\r\n          {\r\n            if ( element.oDvalue == \"\" || element.oDvalue == null )\r\n            {\r\n              toast.warning( t( \"EQAResultReportElisa.notODvalue\" ) )\r\n              return\r\n            }\r\n            element.cutOff = event.target.value;\r\n            if ( parseFloat( element.cutOff ) > 0 && parseFloat( element.oDvalue ) > 0 )\r\n            {\r\n              element.ratioOdAndCutOff = ( parseFloat( element.oDvalue ) / parseFloat( element.cutOff ) ).toFixed( 2 );\r\n            }\r\n          } else if ( event.target.name == \"result\" )\r\n          {\r\n            if ( event.target.value !== LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented && ( element.oDvalue === '' || element.oDvalue === null ) )\r\n            {\r\n              toast.warning( t( \"EQAResultReportElisa.notODvalue\" ) )\r\n              element.result = null\r\n              return\r\n            }\r\n\r\n            if ( event.target.value === LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented )\r\n            {\r\n              element.oDvalue = '';\r\n              element.cutOff = '';\r\n              element.ratioOdAndCutOff = '';\r\n            }\r\n            element.result = event.target.value;\r\n          } else if ( event.target.name == \"note\" )\r\n          {\r\n            element.note = event.target.value;\r\n          }\r\n        }\r\n      } );//forEach\r\n      this.setState( { item: item }, () =>\r\n      {\r\n\r\n      } );\r\n    }\r\n  };\r\n\r\n  openCircularProgress = () =>\r\n  {\r\n    this.setState( { loading: true } );\r\n  };\r\n\r\n\r\n  componentWillMount ()\r\n  {\r\n    let { open, handleClose, item, isRoleAdmin, isView } = this.props;\r\n\r\n    if ( item != null && item.reagent != null && item.reagent.name != null )\r\n    {\r\n      if ( item.reagent.name === \"Sinh phẩm khác\" )\r\n      {\r\n        item[ \"otherReagent\" ] = true\r\n      } else\r\n      {\r\n        item[ \"otherReagent\" ] = false\r\n      }\r\n    }\r\n    this.setState( { item: item }, () =>\r\n    {\r\n      if ( item.listHealthOrgRound != null )\r\n      {\r\n        this.setState( {\r\n          listHealthOrgRound: item.listHealthOrgRound,\r\n          healthOrgRound: item.listHealthOrgRound[ 0 ]\r\n        }, () =>\r\n        {\r\n          this.handleSelectHealthOrgRound( this.state.healthOrgRound );\r\n        } );\r\n      }\r\n    } );\r\n    this.setState( { isRoleAdmin: isRoleAdmin, isView: isView } )\r\n\r\n  }\r\n\r\n  handleDateChange = ( date, name ) =>\r\n  {\r\n    let { item } = this.state\r\n    if ( item == null )\r\n    {\r\n      item = {}\r\n    }\r\n    item[ name ] = date\r\n    this.setState( {\r\n      item: item\r\n    } );\r\n  };\r\n\r\n \r\n\r\n  selectReagent = ( reagent ) =>\r\n  {\r\n    let { item } = this.state\r\n    if ( item == null )\r\n    {\r\n      item = {}\r\n    }\r\n    if ( reagent != null && reagent.id != null )\r\n    {\r\n      if ( reagent.name === \"Sinh phẩm khác\" )\r\n      {\r\n        this.setState( { shouldOpenConfirmation: true } );\r\n        item[ \"otherReagent\" ] = true\r\n      } else\r\n      {\r\n        item[ \"otherReagent\" ] = false\r\n      }\r\n      item[ \"reagent\" ] = reagent\r\n      this.setState( { item: item }, function ()\r\n      {\r\n      } );\r\n    }\r\n  }\r\n\r\n  handleHealthOrgRoundPopupClose = () =>\r\n  {\r\n    this.setState( { shouldOpenHealthOrgRoundPopup: false }, function ()\r\n    {\r\n    } );\r\n  }\r\n\r\n  handleSelectHealthOrgRound = healthOrgRound =>\r\n  {\r\n    let { item } = this.state\r\n    if ( item == null )\r\n    {\r\n      item = {}\r\n    }\r\n    if ( healthOrgRound && healthOrgRound.id )\r\n    {\r\n      item[ \"healthOrgRound\" ] = healthOrgRound\r\n      this.setState( { item: item }, function ()\r\n      {\r\n        // let { healthOrgRound, details } = this.state;\r\n        let { item } = this.state;\r\n        let details = this.state.item?.details;\r\n        details = [];\r\n        getEQASampleTubeByHealthOrgEQARoundId( this.state.item?.healthOrgRound.id ).then( ( result ) =>\r\n        {\r\n          let listEQASampleTube = result.data;\r\n          if ( listEQASampleTube != null && listEQASampleTube.length > 0 )\r\n          {\r\n            listEQASampleTube.forEach( tube =>\r\n            {\r\n              let eQAResultReportDetail = {};\r\n              eQAResultReportDetail.sampleTube = tube;\r\n              if ( tube.eqaSampleSetDetail && tube.eqaSampleSetDetail.orderNumber )\r\n              {\r\n                eQAResultReportDetail.orderNumber = tube.eqaSampleSetDetail.orderNumber;\r\n              }\r\n              eQAResultReportDetail.cutOff = '';\r\n              eQAResultReportDetail.oDvalue = '';\r\n              eQAResultReportDetail.ratioOdAndCutOff = '';\r\n              eQAResultReportDetail.result = '';\r\n              details.push( eQAResultReportDetail );\r\n            } );\r\n          }\r\n          item[ \"details\" ] = details\r\n          this.setState( { item: item } );\r\n        } );\r\n      } );\r\n    }\r\n    this.handleHealthOrgRoundPopupClose();\r\n  }\r\n  notificationFinalResult = () =>\r\n  {\r\n    this.setState( { shouldOpenConfirmationDialog: true } )\r\n  }\r\n  handleFinalResult = () =>\r\n  {\r\n    let { item } = this.state\r\n    if ( item.isFinalResult == null || !item.isFinalResult )\r\n    {\r\n      item[ \"isFinalResult\" ] = true;\r\n      item[ \"dateSubmitResults\" ] = new Date();\r\n      this.setState( { item: item }, () =>\r\n      {\r\n      } )\r\n      this.handleDialogClose();\r\n      return\r\n    }\r\n    if ( item.isFinalResult )\r\n    {\r\n      item[ \"isFinalResult\" ] = false;\r\n      item[ \"dateSubmitResults\" ] = null;\r\n      this.setState( { item: item }, () =>\r\n      {\r\n      } )\r\n      this.handleDialogClose();\r\n      return\r\n    }\r\n  }\r\n  handleDialogFinalResultClose = () =>\r\n  {\r\n    this.handleDialogClose()\r\n  }\r\n  render ()\r\n  {\r\n    let {\r\n      isRoleAdmin,\r\n      isView,\r\n      isCheck,\r\n      id,\r\n      isViewButton,\r\n      supplyOfReagent,\r\n      shouldOpenHealthOrgRoundPopup,\r\n      personBuyReagent,\r\n      reagent,\r\n      listHealthOrgRound,\r\n      reagentLot,\r\n      orderTest,\r\n      reagentExpiryDate,\r\n      testDate,\r\n      dateSubmitResults,\r\n      technician,\r\n      healthOrgRound,\r\n      incubationTemp,\r\n      incubationPeriod,\r\n      incubationTempWithPlus,\r\n      incubationPeriodWithPlus,\r\n      incubationTempWithSubstrate,\r\n      incubationPeriodWithSubstrate,\r\n      details, note, isFinalResult, isManagementUnit,\r\n      reagentUnBoxDate, loading, item\r\n    } = this.state;\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000, testType: 1 };\r\n    let technicianSearchObject = { pageIndex: 0, pageSize: 1000000, searchByHealthOrg: true, healthOrg: ( this.state.item?.healthOrgRound && this.state.item?.healthOrgRound.healthOrg && this.state.item?.healthOrgRound.healthOrg.id ) ? { id: this.state.item?.healthOrgRound.healthOrg.id } : null };\r\n    let { open, handleClose, classes, t, i18n } = this.props;\r\n    let columns = [\r\n      {\r\n        title: t( \"EQAResultReportElisa.sampleCode\" ),\r\n        field: \"sampleTube.code\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"40px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"40px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t( \"EQAResultReportElisa.ODvalue\" ),\r\n        field: \"oDvalue\",\r\n        align: \"left\",\r\n        width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"80px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"80px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => <TextValidator\r\n          disabled={ isRoleAdmin }\r\n          className=\"w-80\"\r\n          onChange={ ( oDvalue ) => this.handleRowDataCellChange( rowData, oDvalue ) }\r\n          //type=\"number\"\r\n          type=\"text\"\r\n          validators={ [ 'isFloat' ] }\r\n          errorMessages={ t( 'general.isFloat' ) }\r\n          value={ rowData.oDvalue ? rowData.oDvalue : '' }\r\n          name=\"oDvalue\"\r\n          step={ 0.0001 }\r\n        />\r\n      },\r\n      {\r\n        title: t( \"EQAResultReportElisa.cutOff\" ),\r\n        field: \"cutOff\",\r\n        align: \"left\",\r\n        width: \"200\",\r\n        headerStyle: {\r\n          minWidth: \"120px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"120px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <TextValidator\r\n            disabled={ isRoleAdmin }\r\n            className=\"w-80\"\r\n            value={ rowData.cutOff ? rowData.cutOff : '' }\r\n            onChange={ ( cutOff ) => this.handleRowDataCellChange( rowData, cutOff ) }\r\n            //type=\"number\"\r\n            type=\"text\"\r\n            validators={ [ 'isFloat' ] }\r\n            errorMessages={ t( 'general.isFloat' ) }\r\n            name=\"cutOff\"\r\n            step={ 0.0001 }\r\n          />\r\n      },\r\n      {\r\n        title: t( \"EQAResultReportElisa.ratioOdAndCutOff\" ),\r\n        field: \"ratioOdAndCutOff\",\r\n        align: \"left\",\r\n        width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"100px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"100px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <TextValidator\r\n            disabled={ isRoleAdmin }\r\n            className=\"w-80\"\r\n            value={ rowData.ratioOdAndCutOff ? rowData.ratioOdAndCutOff : '' }\r\n            type=\"text\"\r\n            validators={ [ 'isFloat' ] }\r\n            errorMessages={ t( 'general.isFloat' ) }\r\n            name=\"itemRatioOdAndCutOff\"\r\n            step={ 0.0001 }\r\n          />\r\n      },\r\n      {\r\n        title: <span><span style={ { color: \"red\" } }> * </span>\r\n          { t( \"EQAResultReportElisa.Result.title\" ) }\r\n        </span>,\r\n        field: \"result\",\r\n        width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <FormControl className=\"w-80\">\r\n            <Select\r\n              disabled={ isRoleAdmin }\r\n              value={ rowData.result }\r\n              onChange={ ( result ) => this.handleRowDataCellChange( rowData, result ) }\r\n              inputProps={ {\r\n                name: \"result\",\r\n                id: \"result-simple\"\r\n              } }\r\n            >\r\n              {/* <MenuItem value=''><em>None</em> </MenuItem> */ }\r\n              <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented }>{ t( \"EQAResultReportElisa.Result.none\" ) }</MenuItem>\r\n              <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.negative }>{ t( \"EQAResultReportElisa.Result.negative\" ) }</MenuItem>\r\n              <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.indertermine }>{ t( \"EQAResultReportElisa.Result.indertermine\" ) }</MenuItem>\r\n              <MenuItem value={ LocalConstants.EQAResultReportDetail_TestValue.positive }>{ t( \"EQAResultReportElisa.Result.positive\" ) }</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n      },\r\n      {\r\n        title: t( \"SampleManagement.serum-bottle.note\" ),\r\n        field: \"note\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <TextValidator\r\n            className=\"w-100\"\r\n            onChange={ note => this.handleRowDataCellChange( rowData, note ) }\r\n            type=\"textarea\"\r\n            multiLine\r\n            rowsMax={ 4 }\r\n            name=\"note\"\r\n            value={ rowData.note ? rowData.note : '' }\r\n            disabled={ isRoleAdmin }\r\n          />\r\n      }\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.shouldOpenConfirmationDialog && (\r\n          <ConfirmationDialog\r\n            title={ t( \"confirm\" ) }\r\n            open={ this.state.shouldOpenConfirmationDialog }\r\n            onConfirmDialogClose={ this.handleDialogFinalResultClose }\r\n            onYesClick={ this.handleFinalResult }\r\n            text={ this.state.item?.isFinalResult ? t( \"EqaResult.unFinalResultConfirm\" ) : t( \"EqaResult.FinalResultConfirm\" ) }\r\n            Yes={ t( \"general.Yes\" ) }\r\n            No={ t( \"general.No\" ) }\r\n          />\r\n        ) }\r\n        {this.state.shouldOpenConfirmation && (\r\n          <ConfirmationDialog\r\n            title={ t( \"general.noti\" ) }\r\n            open={ this.state.shouldOpenConfirmation }\r\n            onYesClick={ this.handleDialogFinalResultClose }\r\n            text={ t( \"general.otherReagent\" ) }\r\n            Yes={ t( \"general.Yes\" ) }\r\n\r\n          />\r\n        ) }\r\n        <Grid container spacing={ 2 }>\r\n          <Grid item lg={ 4 } md={ 4 } sm={ 12 } xs={ 12 }>\r\n            <Autocomplete\r\n              size=\"small\"\r\n              id=\"combo-box\"\r\n              options={ this.props.listHealthOrgRound }\r\n              className=\"flex-end\"\r\n              disabled={ isRoleAdmin }\r\n              getOptionLabel={ ( option ) => option.healthOrg.name }\r\n              onChange={ ( event, healthOrgRound ) => this.handleSelectHealthOrgRound( healthOrgRound ) }\r\n              value={ this.state.item?.healthOrgRound }\r\n              renderInput={ ( params ) => <TextField { ...params }\r\n                label={ <span className=\"font\">{ t( 'EQAResultReportElisa.healthOrgName' ) }</span> }\r\n                variant=\"outlined\"\r\n                disabled={ isRoleAdmin }\r\n              /> }\r\n            />\r\n          </Grid>\r\n          <Grid item lg={ 2 } md={ 2 } sm={ 12 } xs={ 12 }>\r\n            <TextValidator\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className=\"w-100\"\r\n              label={\r\n                <span className=\"font\">\r\n                  <span style={ { color: \"red\" } }> * </span>\r\n                  { t( \"EQAResultReportElisa.order\" ) }\r\n                </span>\r\n              }\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"orderTest\"\r\n              value={ this.state.item?.orderTest }\r\n              disabled={ isRoleAdmin }\r\n              validators={ [ \"required\" ] }\r\n              errorMessages={ t( 'general.errorMessages_required' ) }\r\n            />\r\n          </Grid>\r\n          <Grid item lg={ 3 } md={ 3 } sm={ 12 } xs={ 12 }>\r\n            <MuiPickersUtilsProvider utils={ DateFnsUtils }>\r\n              <KeyboardDatePicker\r\n                size=\"small\"\r\n                className=\"w-100\"\r\n                margin=\"none\"\r\n                id=\"mui-pickers-testDate\"\r\n                label={ <span className=\"font\">{ t( \"EQAResultReportElisa.testDate\" ) }</span> }\r\n                inputVariant=\"outlined\"\r\n                type=\"text\"\r\n                autoOk={ true }\r\n                format=\"dd/MM/yyyy\"\r\n                value={ this.state.item?.testDate ? this.state.item?.testDate : null }\r\n                disabled={ isRoleAdmin }\r\n                onChange={ date => this.handleDateChange( date, \"testDate\" ) }\r\n                fullWidth\r\n                validators={ [ \"required\" ] }\r\n                errorMessages={ t( 'general.errorMessages_required' ) }\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\">{t(\"EQAResultReportElisa.technician\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"technician\"\r\n                  value={technician}\r\n                  disabled={isView }\r\n                />\r\n              </Grid>\r\n\r\n          <Grid item lg={ 4 } md={ 4 } sm={ 12 } xs={ 12 }>\r\n            <AsynchronousAutocomplete\r\n              label={\r\n                <span className=\"font\">\r\n                  <span style={ { color: \"red\" } }> * </span>\r\n                  { t( \"EqaResult.reagent\" ) }\r\n                </span>\r\n              }\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              disabled={ isRoleAdmin }\r\n              searchFunction={ reagentSearchByPage }\r\n              searchObject={ searchObject }\r\n              defaultValue={ this.state.item?.reagent }\r\n              value={ this.state.item?.reagent }\r\n              displayLable={ 'name' }\r\n              valueTextValidator={ this.state.item?.reagent }\r\n              validators={ [ \"required\" ] }\r\n              errorMessages={ t( 'general.errorMessages_required' ) }\r\n              onSelect={ this.selectReagent }\r\n            />\r\n          </Grid>\r\n          <Grid item lg={ 2 } md={ 2 } sm={ 12 } xs={ 12 }>\r\n            <TextValidator\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className=\"w-100\"\r\n              label={\r\n                <span className=\"font\">\r\n                  <span style={ { color: \"red\" } }> * </span>\r\n                  { t( \"EQAResultReportElisa.reagentLot\" ) }\r\n                </span>\r\n              }\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"reagentLot\"\r\n              value={ this.state.item?.reagentLot }\r\n              disabled={ isRoleAdmin }\r\n              validators={ [ \"required\" ] }\r\n              errorMessages={ t( 'general.errorMessages_required' ) }\r\n            />\r\n          </Grid>\r\n          <Grid item container spacing={ 2 } lg={ 6 } md={ 6 } sm={ 12 } xs={ 12 } className=\"pr_mobile\">\r\n            <Grid item lg={ 4 } md={ 4 } sm={ 12 } xs={ 12 } className=\"pr_mobile\">\r\n              <TextValidator\r\n                className=\"w-100\"\r\n                label={ <span className=\"font\">{ t( \"reagent.expirationDay\" ) }</span> }\r\n                onChange={ this.handleChange }\r\n                type=\"number\"\r\n                name=\"dayReagentExpiryDate\"\r\n                value={ this.state.item?.dayReagentExpiryDate }\r\n                disabled={ isRoleAdmin }\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg={ 4 } md={ 4 } sm={ 12 } xs={ 12 } className=\"pr_mobile\">\r\n              <TextValidator\r\n                className=\"w-100\"\r\n                label={ <span className=\"font\">{ t( \"reagent.expirationMonth\" ) }</span> }\r\n                onChange={ this.handleChange }\r\n                type=\"number\"\r\n                name=\"monthReagentExpiryDate\"\r\n                disabled={ isRoleAdmin }\r\n                value={ this.state.item?.monthReagentExpiryDate }\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              />\r\n            </Grid>\r\n            <Grid item lg={ 4 } md={ 4 } sm={ 12 } xs={ 12 } className=\"pr_mobile\">\r\n              <TextValidator\r\n                className=\"w-100\"\r\n                label={ <span className=\"font\">{ t( \"reagent.expirationYear\" ) }</span> }\r\n                onChange={ this.handleChange }\r\n                type=\"number\"\r\n                disabled={ isRoleAdmin }\r\n                name=\"yeahReagentExpiryDate\"\r\n                value={ this.state.item?.yeahReagentExpiryDate }\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                validators={ [ \"required\" ] }\r\n                errorMessages={ t( 'general.errorMessages_required' ) }\r\n              />\r\n            </Grid>\r\n\r\n          </Grid>\r\n          <Grid item lg={ 3 } md={ 3 } sm={ 12 } xs={ 12 }>\r\n            <MuiPickersUtilsProvider utils={ DateFnsUtils }>\r\n              <KeyboardDatePicker\r\n                size=\"small\"\r\n                fullWidth\r\n                margin=\"none\"\r\n                id=\"mui-pickers-reagentExpiryDate\"\r\n                label={ <span className=\"font\">{ t( 'EQAResultReportElisa.reagentUnBoxDate' ) }</span> }\r\n                inputVariant=\"outlined\"\r\n                type=\"text\"\r\n                disabled={ isRoleAdmin }\r\n                autoOk={ false }\r\n                format=\"dd/MM/yyyy\"\r\n                value={ this.state.item?.reagentUnBoxDate }\r\n                disabled={ isRoleAdmin }\r\n                onChange={ date => this.handleDateChange( date, \"reagentUnBoxDate\" ) }\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </Grid>\r\n          <Grid item lg={ 4 } md={ 4 } sm={ 12 } xs={ 12 }>\r\n            <TextValidator\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className=\"w-100\"\r\n              label={ <span className=\"font\">{ t( \"EQAResultReportElisa.supplyOfReagent\" ) }</span> }\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"supplyOfReagent\"\r\n              value={ this.state.item?.supplyOfReagent }\r\n              disabled={ isRoleAdmin }\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item lg={ 5 } md={ 5 } sm={ 12 } xs={ 12 }>\r\n            <TextValidator\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              className=\"w-100 \"\r\n              label={ <span className=\"font\">{ t( \"EQAResultReportElisa.personBuyReagent\" ) }</span> }\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              name=\"personBuyReagent\"\r\n              value={ this.state.item?.personBuyReagent }\r\n              disabled={ isRoleAdmin }\r\n            />\r\n          </Grid>\r\n          { this.state.item?.isFinalResult && (\r\n            <Grid item lg={ 3 } md={ 3 } sm={ 12 } xs={ 12 }>\r\n              <MuiPickersUtilsProvider utils={ DateFnsUtils }>\r\n                <KeyboardDatePicker\r\n                  size=\"small\"\r\n                  fullWidth\r\n                  margin=\"none\"\r\n                  disabled={ true }\r\n                  id=\"mui-pickers-dateSubmitResults\"\r\n                  label={ <span className=\"font\">{ t( 'EQAResultReportElisa.dateSubmitResults' ) }</span> }\r\n                  inputVariant=\"outlined\"\r\n                  type=\"text\"\r\n                  autoOk={ false }\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={ this.state.item?.dateSubmitResults }\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid> ) }\r\n          { this.state.item?.isFinalResult && (\r\n            <Grid item lg={ 3 } md={ 3 } sm={ 12 } xs={ 12 }>\r\n              <FormControlLabel\r\n                label={ <span className=\"font\" style={ { fontWeight: \"bold\" } }> { t( 'EQAResultReportFastTest.isFinalResult' ) }</span> }\r\n                control={ <Checkbox checked={ this.state.item.isFinalResult ? true : false }\r\n                  onClick={ ( isFinalResult ) =>\r\n                    this.notificationFinalResult( isFinalResult )\r\n                    // this.handleChange(isFinalResult, 'isFinalResult')\r\n                  }\r\n                /> }\r\n\r\n              />\r\n            </Grid>\r\n          ) }\r\n\r\n          <Grid item lg={ 12 } md={ 12 } sm={ 12 } xs={ 12 }>\r\n            <TextValidator\r\n              disabled={ isRoleAdmin }\r\n              className=\"w-100\"\r\n              label={ <span className=\"font\">{ t( \"SampleManagement.serum-bottle.note\" ) }</span> }\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              name=\"note\"\r\n              value={ this.state.item?.note }\r\n            />\r\n          </Grid>\r\n          { this.state.item?.otherReagent && ( <Grid item lg={ 12 } md={ 12 } sm={ 12 } xs={ 12 }>\r\n            <TextValidator\r\n              disabled={ isRoleAdmin }\r\n              className=\"w-100\"\r\n              label={ <span className=\"font\">{ t( \"reagent.note\" ) }</span> }\r\n              onChange={ this.handleChange }\r\n              type=\"text\"\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              name=\"noteOtherReagent\"\r\n              value={ this.state.item?.noteOtherReagent }\r\n              validators={ [ \"required\" ] }\r\n              errorMessages={ t( 'general.errorMessages_required' ) }\r\n            />\r\n          </Grid> ) }\r\n          <Grid item sm={ 12 } xs={ 12 }>\r\n            <MaterialTable\r\n              title={ \"\" }\r\n              data={ this.state.item?.details ? this.state.item?.details : [] }\r\n              columns={ columns }\r\n              options={ {\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: ( rowData, index ) => ( {\r\n                  backgroundColor: ( index % 2 === 1 ) ? '#EEE' : '#FFF',\r\n                } ),\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color: '#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              } }\r\n              components={ {\r\n                Toolbar: props => (\r\n                  <MTableToolbar { ...props } />\r\n                ),\r\n              } }\r\n              onSelectionChange={ ( rows ) =>\r\n              {\r\n                this.data = rows;\r\n              } }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAResultReportElisaInformation;\r\n"]},"metadata":{},"sourceType":"module"}