{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportConclusionAll\\\\EQANotResultReportConclusion.jsx\";\nimport { FormControl, Input, InputAdornment, Grid, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { saveItem, searchByPageHealthOrgRound } from \"./EQAResultReportConclusionAllServices\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport EQAResultReportConclusionAllDialog from \"./EQAResultReportConclusionDialog\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { Helmet } from \"react-helmet\";\nimport { saveAs } from 'file-saver';\nimport { toast } from \"react-toastify\";\ntoast.configure({\n  autoClose: 2000,\n  draggable: false,\n  limit: 3\n});\n\nvar eqaNotResultReportConclusion = /*#__PURE__*/function (_React$Component) {\n  _inherits(eqaNotResultReportConclusion, _React$Component);\n\n  var _super = _createSuper(eqaNotResultReportConclusion);\n\n  function eqaNotResultReportConclusion(props) {\n    var _this;\n\n    _classCallCheck(this, eqaNotResultReportConclusion);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      listEQARound: [],\n      keyword: \"\",\n      round: null\n    };\n\n    _this.handleTextSearchChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.search();\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.keyword;\n      searchObject.roundId = _this.state.roundId ? _this.state.roundId : null;\n      searchObject.hasConclusion = false;\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage; // console.log(searchObject);\n\n      searchByPageHealthOrgRound(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleFilterEQARound = function (event, round, reason, details) {\n      if (round != null) {\n        _this.setState({\n          round: round\n        }, function () {\n          var searchObject = {};\n          searchObject.roundId = round.id;\n          searchObject.hasConclusion = false;\n          searchObject.pageIndex = _this.state.page;\n          searchObject.pageSize = _this.state.rowsPerPage;\n          searchByPageHealthOrgRound(searchObject).then(function (_ref2) {\n            var data = _ref2.data;\n\n            _this.setState({\n              itemList: _toConsumableArray(data.content),\n              totalElements: data.totalElements,\n              round: round,\n              roundId: round.id\n            });\n          });\n        });\n\n        if (reason == \"clear\") {\n          _this.setState({\n            round: null\n          });\n        }\n      } else {\n        _this.setState({\n          round: null\n        }, function () {\n          var searchObject = {};\n          searchObject.roundId = null;\n          searchObject.hasConclusion = false;\n          searchObject.pageIndex = _this.state.page;\n          searchObject.pageSize = _this.state.rowsPerPage;\n          searchByPageHealthOrgRound(searchObject).then(function (_ref3) {\n            var data = _ref3.data;\n\n            _this.setState({\n              itemList: _toConsumableArray(data.content),\n              totalElements: data.totalElements,\n              round: null,\n              roundId: null\n            });\n          });\n        });\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleTextSearchChange = _this.handleTextSearchChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(eqaNotResultReportConclusion, [{\n    key: \"search\",\n    value: function search() {\n      var _this2 = this;\n\n      var searchObject = {};\n      searchObject.text = this.state.keyword.trim();\n      searchObject.roundId = this.state.roundId ? this.state.roundId : null;\n      searchObject.hasConclusion = false;\n      searchObject.pageIndex = 1;\n      searchObject.pageSize = this.state.rowsPerPage;\n      searchByPageHealthOrgRound(searchObject).then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this2.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000\n      };\n      searchByPageEQARound(searchObject).then(function (_ref5) {\n        var data = _ref5.data;\n\n        if (data != null && data.content.length > 0) {\n          _this3.setState({\n            listEQARound: _toConsumableArray(data.content)\n          }, function () {});\n        }\n      });\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          listEQARound = _this$state.listEQARound,\n          round = _this$state.round;\n      var columns = [//   {\n      //     title: t(\"Action\"),\n      //     field: \"custom\",\n      //     align: \"left\",\n      //     width: \"250\",\n      //     render: rowData => (\n      //       <MaterialButton\n      //         item={rowData}\n      //         onSelect={(rowData, method) => {\n      //           if (method === 0) {\n      //             getItemById(rowData.id).then(({ data }) => {\n      //               this.setState({\n      //                 item: data,\n      //                 shouldOpenEditorDialog: true\n      //               });\n      //             });\n      //           } else {\n      //             alert(\"Call Selected Here:\" + rowData.id);\n      //           }\n      //         }}\n      //       />\n      //     )\n      //   },\n      {\n        title: t(\"EQAResultReportConclusionAll.eqa_round\"),\n        field: \"round.code\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAResultReportConclusionAll.health_org\"),\n        field: \"healthOrg.name\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"Code\"),\n        field: \"healthOrg.code\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listEQARound,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.code;\n        },\n        onChange: this.handleFilterEQARound,\n        value: round,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t(\"general.fillterByRoundEQA\"),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        className: \"mt-8 search_box w-100 stylePlaceholder\",\n        type: \"text\",\n        name: \"keyword\",\n        value: keyword,\n        onChange: this.handleTextSearchChange,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        placeholder: t(\"general.enterSearch\"),\n        id: \"search_box\",\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 23\n          }\n        }, \" \", /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this4.search(keyword);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"List\"),\n        data: this.state.itemList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this4.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }), this.state.shouldOpenEditorDialog && /*#__PURE__*/React.createElement(EQAResultReportConclusionAllDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref6) {\n          var from = _ref6.from,\n              to = _ref6.to,\n              count = _ref6.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }))));\n    }\n  }]);\n\n  return eqaNotResultReportConclusion;\n}(React.Component);\n\nexport default eqaNotResultReportConclusion;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportConclusionAll/EQANotResultReportConclusion.jsx"],"names":["FormControl","Input","InputAdornment","Grid","MuiThemeProvider","IconButton","Icon","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","moment","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","saveItem","searchByPageHealthOrgRound","Breadcrumb","ConfirmationDialog","Link","SearchIcon","Autocomplete","VisibilityIcon","EQAResultReportConclusionAllDialog","searchByPage","searchByPageEQARound","Helmet","saveAs","toast","configure","autoClose","draggable","limit","eqaNotResultReportConclusion","props","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","listEQARound","keyword","round","handleTextSearchChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","updatePageData","searchObject","text","roundId","hasConclusion","pageIndex","pageSize","then","content","handleFilterEQARound","reason","details","id","setPage","setRowsPerPage","handleChangePage","newPage","bind","trim","length","t","i18n","columns","title","field","align","width","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","option","code","params","position","top","right","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","rowData","backgroundColor","tableData","maxBodyHeight","minBodyHeight","color","padding","toolbar","Toolbar","body","emptyDataSourceMessage","handleDialogClose","handleOKEditClose","item","from","to","count"],"mappings":"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","sourcesContent":["import {\r\n    FormControl,\r\n    Input,\r\n    InputAdornment,\r\n    Grid,\r\n    MuiThemeProvider,\r\n    IconButton,\r\n    Icon,\r\n    TextField,\r\n    Button,\r\n    TableHead,\r\n    TableCell,\r\n    TableRow,\r\n    Checkbox,\r\n    TablePagination\r\n  } from \"@material-ui/core\";\r\n  import moment from \"moment\";\r\n  import React, { Component } from \"react\";\r\n  import ReactDOM from \"react-dom\";\r\n  import MaterialTable, {\r\n    MTableToolbar,\r\n    Chip,\r\n    MTableBody,\r\n    MTableHeader\r\n  } from \"material-table\";\r\n  import { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\n  import {\r\n    saveItem,\r\n    searchByPageHealthOrgRound\r\n  } from \"./EQAResultReportConclusionAllServices\";\r\n  import { Breadcrumb, ConfirmationDialog } from \"egret\";\r\n  import { Link } from \"react-router-dom\";\r\n  import SearchIcon from \"@material-ui/icons/Search\";\r\n  import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n  import VisibilityIcon from \"@material-ui/icons/Visibility\";\r\n  import EQAResultReportConclusionAllDialog from \"./EQAResultReportConclusionDialog\";\r\n  import { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\n  import { Helmet } from \"react-helmet\";\r\n  import { saveAs } from 'file-saver';\r\n  import { toast } from \"react-toastify\";\r\n  toast.configure({\r\n    autoClose: 2000,\r\n    draggable: false,\r\n    limit:3\r\n  });\r\nclass eqaNotResultReportConclusion extends React.Component {\r\n    state = {\r\n        rowsPerPage: 10,\r\n        page: 0,\r\n        data: [],\r\n        totalElements: 0,\r\n        itemList: [],\r\n        shouldOpenEditorDialog: false,\r\n        shouldOpenConfirmationDialog: false,\r\n        listEQARound: [],\r\n        keyword: \"\",\r\n        round: null\r\n      };\r\n      constructor(props) {\r\n        super(props);\r\n        this.handleTextSearchChange = this.handleTextSearchChange.bind(this);\r\n      }\r\n    \r\n      handleTextSearchChange = event => {\r\n        this.setState({ keyword: event.target.value }, function() {});\r\n      };\r\n      handleKeyDownEnterSearch = e => {\r\n        if (e.key === \"Enter\") {\r\n          this.search();\r\n        }\r\n      };\r\n      search() {\r\n        var searchObject = {};\r\n        searchObject.text = this.state.keyword.trim();\r\n        searchObject.roundId = this.state.roundId ? this.state.roundId : null;\r\n        searchObject.hasConclusion = false;\r\n        searchObject.pageIndex = 1;\r\n        searchObject.pageSize = this.state.rowsPerPage;\r\n        searchByPageHealthOrgRound(searchObject).then(({ data }) => {\r\n            this.setState({\r\n              itemList: [...data.content],\r\n              totalElements: data.totalElements\r\n            });\r\n          }\r\n        );\r\n      }\r\n      componentDidMount() {\r\n        let searchObject = { pageIndex: 0, pageSize: 1000000 };\r\n        searchByPageEQARound(searchObject).then(({ data }) => {\r\n          if (data != null && data.content.length > 0) {\r\n            this.setState({ listEQARound: [...data.content] }, () => {});\r\n          }\r\n        });\r\n        this.updatePageData();\r\n      }\r\n      updatePageData = () => {\r\n        var searchObject = {};\r\n        searchObject.text = this.state.keyword;\r\n        searchObject.roundId = this.state.roundId ? this.state.roundId : null;\r\n        searchObject.hasConclusion = false;\r\n        searchObject.pageIndex = this.state.page + 1;\r\n        searchObject.pageSize = this.state.rowsPerPage;\r\n        // console.log(searchObject);\r\n        searchByPageHealthOrgRound(searchObject, this.state.page, this.state.rowsPerPage).then(\r\n          ({ data }) => {\r\n            this.setState({\r\n              itemList: [...data.content],\r\n              totalElements: data.totalElements\r\n            });\r\n          }\r\n        );\r\n      };\r\n\r\n      handleFilterEQARound = (event, round, reason, details) => {\r\n        if (round != null) {\r\n          this.setState({ round: round }, () => {\r\n            let searchObject = {};\r\n            searchObject.roundId = round.id;\r\n            searchObject.hasConclusion = false;\r\n            searchObject.pageIndex = this.state.page;\r\n            searchObject.pageSize = this.state.rowsPerPage;\r\n            searchByPageHealthOrgRound(searchObject).then(({ data }) => {\r\n              this.setState({\r\n                itemList: [...data.content],\r\n                totalElements: data.totalElements,\r\n                round: round,\r\n                roundId: round.id\r\n              });\r\n            });\r\n          });\r\n          if (reason == \"clear\") {\r\n            this.setState({ round: null });\r\n          }\r\n        } else {\r\n          this.setState({ round: null }, () => {\r\n            let searchObject = {};\r\n            searchObject.roundId = null;\r\n            searchObject.hasConclusion = false;\r\n            searchObject.pageIndex = this.state.page;\r\n            searchObject.pageSize = this.state.rowsPerPage;\r\n            searchByPageHealthOrgRound(searchObject).then(({ data }) => {\r\n              this.setState({\r\n                itemList: [...data.content],\r\n                totalElements: data.totalElements,\r\n                round: null,\r\n                roundId: null\r\n              });\r\n            });\r\n          });\r\n        }\r\n      };\r\n\r\n      setPage = page => {\r\n        this.setState({ page }, function() {\r\n          this.updatePageData();\r\n        });\r\n      };\r\n    \r\n      setRowsPerPage = event => {\r\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, function() {\r\n          this.updatePageData();\r\n        });\r\n      };\r\n    \r\n      handleChangePage = (event, newPage) => {\r\n        this.setPage(newPage);\r\n      };\r\n    \r\n    render() {\r\n        const { t, i18n } = this.props;\r\n        let { keyword, listEQARound, round } = this.state;\r\n    \r\n        let columns = [\r\n        //   {\r\n        //     title: t(\"Action\"),\r\n        //     field: \"custom\",\r\n        //     align: \"left\",\r\n        //     width: \"250\",\r\n        //     render: rowData => (\r\n        //       <MaterialButton\r\n        //         item={rowData}\r\n        //         onSelect={(rowData, method) => {\r\n        //           if (method === 0) {\r\n        //             getItemById(rowData.id).then(({ data }) => {\r\n        //               this.setState({\r\n        //                 item: data,\r\n        //                 shouldOpenEditorDialog: true\r\n        //               });\r\n        //             });\r\n        //           } else {\r\n        //             alert(\"Call Selected Here:\" + rowData.id);\r\n        //           }\r\n        //         }}\r\n        //       />\r\n        //     )\r\n        //   },\r\n          {\r\n            title: t(\"EQAResultReportConclusionAll.eqa_round\"),\r\n            field: \"round.code\",\r\n            align: \"left\",\r\n            width: \"150\",\r\n            headerStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n            },\r\n            cellStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              textAlign: \"left\",\r\n            },\r\n          },\r\n          {\r\n            title: t(\"EQAResultReportConclusionAll.health_org\"),\r\n            field: \"healthOrg.name\",\r\n            width: \"150\",\r\n            headerStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n            },\r\n            cellStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              textAlign: \"left\",\r\n            },\r\n          },\r\n          {\r\n            title: t(\"Code\"),\r\n            field: \"healthOrg.code\",\r\n            width: \"150\",\r\n            headerStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n            },\r\n            cellStyle: {\r\n              minWidth: \"150px\",\r\n              paddingLeft: \"10px\",\r\n              paddingRight: \"0px\",\r\n              textAlign: \"left\",\r\n            },\r\n          },\r\n        ];\r\n    return (\r\n        <div className=\"\">\r\n          <Grid container spacing={3}>\r\n            <Grid item lg={3} md={3} sm={12} xs={12}></Grid>\r\n            <Grid item lg={4} md={4} sm={12} xs={12}>\r\n              <Autocomplete\r\n                size=\"small\"\r\n                id=\"combo-box\"\r\n                options={listEQARound}\r\n                className=\"flex-end\"\r\n                getOptionLabel={option => option.code}\r\n                onChange={this.handleFilterEQARound}\r\n                value={round}\r\n                renderInput={params => (\r\n                  <TextField\r\n                    {...params}\r\n                    label={t(\"general.fillterByRoundEQA\")}\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item lg={5} md={5} sm={12} xs={12}>\r\n              <FormControl fullWidth>\r\n                <Input\r\n                  className=\"mt-8 search_box w-100 stylePlaceholder\"\r\n                  type=\"text\"\r\n                  name=\"keyword\"\r\n                  value={keyword}\r\n                  onChange={this.handleTextSearchChange}\r\n                  onKeyDown={this.handleKeyDownEnterSearch}\r\n                  placeholder={t(\"general.enterSearch\")}\r\n                  id=\"search_box\"\r\n                  startAdornment={\r\n                    <InputAdornment>\r\n                      <Link to=\"#\">\r\n                        {\" \"}\r\n                        <SearchIcon\r\n                          onClick={() => this.search(keyword)}\r\n                          style={{\r\n                            position: \"absolute\",\r\n                            top: \"0\",\r\n                            right: \"0\"\r\n                          }}\r\n                        />\r\n                      </Link>\r\n                    </InputAdornment>\r\n                  }\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <MaterialTable\r\n                title={t(\"List\")}\r\n                data={this.state.itemList}\r\n                columns={columns}\r\n                parentChildData={(row, rows) => {\r\n                  var list = rows.find(a => a.id === row.parentId);\r\n                  return list;\r\n                }}\r\n                options={{\r\n                  selection: false,\r\n                  actionsColumnIndex: -1,\r\n                  paging: false,\r\n                  search: false,\r\n                  rowStyle: rowData => ({\r\n                    backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                  }), \r\n                  maxBodyHeight: '450px',\r\n                  minBodyHeight: '370px',\r\n                  headerStyle: {\r\n                    backgroundColor: '#358600',\r\n                    color:'#fff',\r\n                  },\r\n                  padding: 'dense',\r\n                  toolbar: false\r\n                }}\r\n                components={{\r\n                  Toolbar: props => <MTableToolbar {...props} />\r\n                }}\r\n                onSelectionChange={rows => {\r\n                  this.data = rows;\r\n                }}\r\n                localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n              />\r\n              {this.state.shouldOpenEditorDialog && (\r\n                <EQAResultReportConclusionAllDialog\r\n                  t={t}\r\n                  i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={this.state.shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={this.state.item}\r\n                />\r\n              )}\r\n              <TablePagination\r\n                align=\"left\"\r\n                className=\"px-16\"\r\n                rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n                component=\"div\"\r\n                labelRowsPerPage={t('general.rows_per_page')}\r\n                labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n                count={this.state.totalElements}\r\n                rowsPerPage={this.state.rowsPerPage}\r\n                page={this.state.page}\r\n                backIconButtonProps={{\r\n                  \"aria-label\": \"Previous Page\"\r\n                }}\r\n                nextIconButtonProps={{\r\n                  \"aria-label\": \"Next Page\"\r\n                }}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.setRowsPerPage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default eqaNotResultReportConclusion;"]},"metadata":{},"sourceType":"module"}