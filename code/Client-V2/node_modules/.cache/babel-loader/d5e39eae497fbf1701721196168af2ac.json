{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\LanguageSelect.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar LanguageSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(LanguageSelect, _React$Component);\n\n  var _super = _createSuper(LanguageSelect);\n\n  function LanguageSelect() {\n    var _this;\n\n    _classCallCheck(this, LanguageSelect);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selected: 'vi',\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(LanguageSelect, [{\n    key: \"handleChange\",\n    value: function handleChange(value) {\n      //alert(t('description.part1'));\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          classes = _this$props.classes;\n      i18n.changeLanguage(value);\n      this.setState({\n        selected: value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          classes = _this$props2.classes;\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          hasError = _this$state.hasError;\n      var language = 'vi';\n\n      var changeLanguage = function changeLanguage(lng) {\n        i18n.changeLanguage(lng);\n      };\n\n      return /*#__PURE__*/React.createElement(\"form\", {\n        className: classes.root,\n        autoComplete: \"off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        error: hasError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, t('general.language')), /*#__PURE__*/React.createElement(Select, {\n        name: \"name\",\n        value: selected,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event.target.value);\n        },\n        input: /*#__PURE__*/React.createElement(Input, {\n          id: \"name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 20\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"vi\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, \"Ti\\u1EBFng Vi\\u1EC7t\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"en\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"English\")), hasError && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 24\n        }\n      }, \"This is required!\")));\n    }\n  }]);\n\n  return LanguageSelect;\n}(React.Component);\n\nLanguageSelect.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(LanguageSelect);","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/EgretLayout/SharedCompoents/LanguageSelect.jsx"],"names":["React","PropTypes","withStyles","Input","InputLabel","MenuItem","FormHelperText","FormControl","Select","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","LanguageSelect","state","selected","hasError","value","props","t","i18n","classes","changeLanguage","setState","language","lng","event","handleChange","target","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass LanguageSelect extends React.Component {\r\n\r\n\r\n  state = {\r\n    selected: 'vi',\r\n    hasError: false\r\n  };\r\n\r\n  handleChange(value) {\r\n    //alert(t('description.part1'));\r\n    const { t, i18n,classes } = this.props;\r\n    i18n.changeLanguage(value);\r\n    this.setState({ selected: value });\r\n  }\r\n  render() {\r\n    const { t, i18n,classes } = this.props;\r\n    const { selected, hasError } = this.state;\r\n    let language= 'vi';\r\n    const changeLanguage = lng => {\r\n      i18n.changeLanguage(lng);\r\n    };  \r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl className={classes.formControl} error={hasError}>\r\n          <InputLabel htmlFor=\"name\">{t('general.language')}</InputLabel>\r\n          <Select\r\n            name=\"name\"\r\n            value={selected}\r\n            onChange={event => this.handleChange(event.target.value)}\r\n            input={<Input id=\"name\" />}\r\n          >\r\n            <MenuItem value=\"vi\">Tiếng Việt</MenuItem>\r\n            {/* <MenuItem value=\"de\">Deutsch</MenuItem> */}\r\n            <MenuItem value=\"en\">English</MenuItem>\r\n          </Select>\r\n          {hasError && <FormHelperText>This is required!</FormHelperText>}\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nLanguageSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(LanguageSelect);\r\n"]},"metadata":{},"sourceType":"module"}