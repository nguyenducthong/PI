{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\auth\\\\Auth.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\";\nimport firebaseAuthService from \"../services/firebase/firebaseAuthService\";\nimport history from \"history.js\";\nimport ConstantList from \"../appConfig\";\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  var _super = _createSuper(Auth);\n\n  function Auth(props) {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n\n    _this.checkJwtAuth = function () {\n      jwtAuthService.loginWithToken().then(function (user) {\n        _this.props.setUserData(user);\n      });\n    };\n\n    _this.checkFirebaseAuth = function () {\n      firebaseAuthService.checkAuthStatus(function (user) {\n        if (user) {\n          console.log(user.uid);\n          console.log(user.email);\n          console.log(user.emailVerified);\n          console.log(user.getItem);\n        } else {\n          console.log(\"not logged in\");\n        }\n      });\n    };\n\n    var _user = localStorageService.getItem(\"auth_user\");\n\n    var token = localStorageService.getItem(\"jwt_token\"); //let tokenData = localStorageService.getSessionItem(\"token_data\");\n    //console.log(tokenData);\n\n    var expire_time = localStorageService.getItem(\"token_expire_time\");\n    var dateObj = new Date(expire_time); //alert('Auth:'+expire_time);\n\n    if (token) {\n      jwtAuthService.setSession(token);\n    }\n\n    var isExpired = false;\n\n    if (dateObj != null) {\n      if (dateObj < Date.now()) {\n        isExpired = true;\n      }\n    }\n\n    if (_user != null && isExpired == false) {\n      _this.props.setUserData(_user);\n    } else {\n      history.push(ConstantList.LOGIN_PAGE);\n    } //this.checkJwtAuth();\n    // this.checkFirebaseAuth();\n\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 12\n        }\n      }, children);\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setUserData: PropTypes.func.isRequired,\n    login: state.login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setUserData\n})(Auth);","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/auth/Auth.jsx"],"names":["React","Component","Fragment","connect","PropTypes","setUserData","jwtAuthService","localStorageService","firebaseAuthService","history","ConstantList","Auth","props","state","checkJwtAuth","loginWithToken","then","user","checkFirebaseAuth","checkAuthStatus","console","log","uid","email","emailVerified","getItem","token","expire_time","dateObj","Date","setSession","isExpired","now","push","LOGIN_PAGE","children","mapStateToProps","func","isRequired","login"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\";\nimport firebaseAuthService from \"../services/firebase/firebaseAuthService\";\nimport history from \"history.js\";\nimport ConstantList from \"../appConfig\";\nclass Auth extends Component {\n  state = {};\n  \n  constructor(props) {\n    super(props);\n    let user = localStorageService.getItem(\"auth_user\");\n    let token = localStorageService.getItem(\"jwt_token\");\n    //let tokenData = localStorageService.getSessionItem(\"token_data\");\n    //console.log(tokenData);\n    let expire_time= localStorageService.getItem(\"token_expire_time\");\n    let dateObj = new Date(expire_time);\n    //alert('Auth:'+expire_time);\n    if(token){\n      jwtAuthService.setSession(token);\n    }\n    var isExpired = false;\n    if(dateObj!=null){\n      if(dateObj<Date.now()){\n        isExpired=true;\n      }\n    }\n    if(user!=null && (isExpired==false)){      \n      this.props.setUserData(user);\n    }else {\n      history.push(ConstantList.LOGIN_PAGE)\n    }\n    \n    //this.checkJwtAuth();\n    // this.checkFirebaseAuth();\n  }\n\n  checkJwtAuth = () => {\n    jwtAuthService.loginWithToken().then(user => {\n      this.props.setUserData(user);\n    });\n  };\n\n  checkFirebaseAuth = () => {\n    firebaseAuthService.checkAuthStatus(user => {\n      if (user) {\n        console.log(user.uid);\n        console.log(user.email);\n        console.log(user.emailVerified);\n        console.log(user.getItem);\n      } else {\n        console.log(\"not logged in\");\n      }\n    });\n  };\n\n  render() {\n    const { children } = this.props;\n    return <Fragment>{children}</Fragment>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  setUserData: PropTypes.func.isRequired,\n  login: state.login\n});\n\nexport default connect(\n  mapStateToProps,\n  { setUserData }\n)(Auth);\n"]},"metadata":{},"sourceType":"module"}