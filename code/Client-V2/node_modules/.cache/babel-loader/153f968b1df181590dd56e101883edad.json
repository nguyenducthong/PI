{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport Mock from \"../mock\";\nimport * as _ from \"lodash\";\nimport shortId from \"shortid\";\nimport ConstantList from \"../../app/appConfig\"; // board => list => cardList\n\nvar ScrumBoardDB = {\n  boardList: [{\n    id: \"c5d7498bbcb84d81fc7454448871ac6a6e\",\n    title: \"Egret React\",\n    list: [{\n      id: shortId.generate(),\n      title: \"Drag and Drop\",\n      cardList: [{\n        id: shortId.generate(),\n        title: \"Beautiful DnD\",\n        coverImage: ConstantList.ROOT_PATH + \"assets/images/sq-9.jpg\",\n        members: [\"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: \"sky-life.jpg\",\n          size: \"1.2 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\"\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: \"7863a6802ez0e277a0f98534\",\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }, {\n        id: shortId.generate(),\n        title: \"Nested DnD\",\n        coverImage: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\",\n        members: [\"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: \"sky-life.jpg\",\n          size: \"1.2 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\"\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: \"323sa680b3249760ea21rt47\",\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }]\n    }, {\n      id: shortId.generate(),\n      title: \"Chat App\",\n      cardList: [{\n        id: shortId.generate(),\n        title: \"Beautiful DnD\",\n        coverImage: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\",\n        members: [\"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: \"sky-life.jpg\",\n          size: \"1.2 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\"\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: \"e929b1d790ab49968ed8e34648553df4\",\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }, {\n        id: shortId.generate(),\n        title: \"Nested DnD\",\n        coverImage: ConstantList.ROOT_PATH + \"assets/images/sq-13.jpg\",\n        members: [\"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n        attachments: [{\n          name: \"sky-life.jpg\",\n          size: \"1.2 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\"\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: \"e929b1d790ab49968ed8e34648553df4\",\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }]\n    }],\n    members: [// only member id\n    \"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"]\n  }, {\n    id: \"c5d7498bbcb84d81fc72168871ac6a6e\",\n    title: \"Egret Angular\",\n    list: [{\n      id: shortId.generate(),\n      title: \"Drag and Drop\",\n      cardList: [{\n        id: shortId.generate(),\n        title: \"Beautiful DnD\",\n        coverImage: ConstantList.ROOT_PATH + \"assets/images/sq-9.jpg\",\n        members: [\"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n        attachments: [{\n          name: \"sky-life.jpg\",\n          size: \"1.2 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\"\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: \"e929b1d790ab49968ed8e34648553df4\",\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }, {\n        id: shortId.generate(),\n        title: \"Nested DnD\",\n        coverImage: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\",\n        members: [\"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"],\n        labels: [2, 3, 4],\n        description: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n        attachments: [{\n          name: \"sky-life.jpg\",\n          size: \"1.2 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-9.jpg\"\n        }, {\n          name: \"stair.jpg\",\n          size: \"2.8 MB\",\n          url: ConstantList.ROOT_PATH + \"assets/images/sq-11.jpg\"\n        }],\n        comments: [{\n          id: shortId.generate(),\n          uid: \"e929b1d790ab49968ed8e34648553df4\",\n          text: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n          time: new Date()\n        }]\n      }]\n    }],\n    members: [// only member id\n    \"323sa680b3249760ea21rt47\", \"7863a6802ez0e277a0f98534\", \"14663a3406eb47ffa63d4fec9429cb71\", \"43bd9bc59d164b5aea498e3ae1c24c3c\", \"e929b1d790ab49968ed8e34648553df4\"]\n  }],\n  labels: [{\n    id: 1,\n    title: \"Active\",\n    color: \"primary\"\n  }, {\n    id: 2,\n    title: \"Complete\",\n    color: \"green\"\n  }, {\n    id: 3,\n    title: \"Ready\",\n    color: \"secondary\"\n  }, {\n    id: 4,\n    title: \"High Priority\",\n    color: \"error\"\n  }],\n  members: [{\n    id: \"1\",\n    name: \"John Doe\",\n    avatar: \"./assets/images/avatar.jpg\"\n  }, {\n    id: \"323sa680b3249760ea21rt47\",\n    name: \"Frank Powell\",\n    avatar: \"./assets/images/faces/13.jpg\"\n  }, {\n    id: \"7863a6802ez0e277a0f98534\",\n    name: \"John Doe\",\n    avatar: \"./assets/images/face-1.jpg\"\n  }, {\n    id: \"14663a3406eb47ffa63d4fec9429cb71\",\n    name: \"Betty Diaz\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/12.jpg\"\n  }, {\n    id: \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n    name: \"Brian Stephens\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/3.jpg\"\n  }, {\n    id: \"3fc8e01f3ce649d1caf884fbf4f698e4\",\n    name: \"Jacqueline Day\",\n    avatar: \"./assets/images/faces/16.jpg\"\n  }, {\n    id: \"e929b1d790ab49968ed8e34648553df4\",\n    name: \"Arthur Mendoza\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/10.jpg\"\n  }, {\n    id: \"d6caf04bba614632b5fecf91aebf4564\",\n    name: \"Jeremy Lee\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/9.jpg\"\n  }, {\n    id: \"be0fb188c8e242f097fafa24632107e4\",\n    name: \"Johnny Newman\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/5.jpg\"\n  }, {\n    id: \"dea902191b964a68ba5f2d93cff37e13\",\n    name: \"Jeffrey Little\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/15.jpg\"\n  }, {\n    id: \"0bf58f5ccc4543a9f8747350b7bda3c7\",\n    name: \"Barbara Romero\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/4.jpg\"\n  }, {\n    id: \"c5d7498bbcb84d81fc72168871ac6a6e\",\n    name: \"Daniel James\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/2.jpg\"\n  }, {\n    id: \"97bfbdd9413e46efdaca2010400fe18c\",\n    name: \"Alice Sanders\",\n    avatar: ConstantList.ROOT_PATH + \"assets/images/faces/17.jpg\"\n  }]\n}; // a little function to help us with reordering the result\n\nvar reorder = function reorder(list, startIndex, endIndex) {\n  var result = Array.from(list);\n\n  var _result$splice = result.splice(startIndex, 1),\n      _result$splice2 = _slicedToArray(_result$splice, 1),\n      removed = _result$splice2[0];\n\n  result.splice(endIndex, 0, removed);\n  return result;\n}; // Moves an item from one list to another list.\n\n\nvar move = function move(source, destination, droppableSource, droppableDestination) {\n  var sourceClone = Array.from(source);\n  var destClone = Array.from(destination);\n\n  var _sourceClone$splice = sourceClone.splice(droppableSource.index, 1),\n      _sourceClone$splice2 = _slicedToArray(_sourceClone$splice, 1),\n      removed = _sourceClone$splice2[0];\n\n  destClone.splice(droppableDestination.index, 0, removed);\n  var result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n  return result;\n};\n\nvar getBoardWithMemberDetails = function getBoardWithMemberDetails(board) {\n  var members = board.members.map(function (id) {\n    return ScrumBoardDB.members.find(function (member) {\n      return member.id === id;\n    });\n  });\n  return _objectSpread(_objectSpread({}, board), {}, {\n    members\n  });\n};\n\nMock.onGet(\"/api/scrum-board/all-member\").reply(function (config) {\n  return [200, _toConsumableArray(ScrumBoardDB.members)];\n});\nMock.onGet(\"/api/scrum-board/all-label\").reply(function (config) {\n  return [200, _toConsumableArray(ScrumBoardDB.labels)];\n});\nMock.onGet(\"/api/scrum-board/all-board\").reply(function (config) {\n  var response = ScrumBoardDB.boardList.map(function (board) {\n    return _.pick(board, [\"id\", \"title\"]);\n  });\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/add-board\").reply(function (config) {\n  var title = config.data;\n  ScrumBoardDB.boardList.push({\n    id: shortId.generate(),\n    title,\n    list: [],\n    members: []\n  });\n  var response = ScrumBoardDB.boardList.map(function (board) {\n    return _.pick(board, [\"id\", \"title\"]);\n  });\n  return [200, response];\n});\nMock.onGet(\"/api/scrum-board\").reply(function (config) {\n  var id = config.data;\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === id;\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onGet(\"/api/scrum-board\").reply(function (config) {\n  var id = config.data;\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === id;\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/add-member\").reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n      boardId = _JSON$parse.boardId,\n      memberId = _JSON$parse.memberId;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  board.members.push(memberId);\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/delete-member\").reply(function (config) {\n  var _JSON$parse2 = JSON.parse(config.data),\n      boardId = _JSON$parse2.boardId,\n      memberId = _JSON$parse2.memberId;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  board.members.splice(board.members.indexOf(memberId), 1);\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/add-column\").reply(function (config) {\n  var _JSON$parse3 = JSON.parse(config.data),\n      boardId = _JSON$parse3.boardId,\n      listTitle = _JSON$parse3.listTitle;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  board.list.push({\n    id: shortId.generate(),\n    title: listTitle,\n    cardList: []\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/rename-column\").reply(function (config) {\n  var _JSON$parse4 = JSON.parse(config.data),\n      boardId = _JSON$parse4.boardId,\n      listTitle = _JSON$parse4.listTitle,\n      listId = _JSON$parse4.listId;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  board.list.map(function (column) {\n    if (column.id === listId) {\n      column.title = listTitle;\n    }\n\n    return column;\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/delete-column\").reply(function (config) {\n  var _JSON$parse5 = JSON.parse(config.data),\n      boardId = _JSON$parse5.boardId,\n      listId = _JSON$parse5.listId;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  var deleteIndex = null;\n  board.list.map(function (column, index) {\n    if (column.id === listId) deleteIndex = index;\n  });\n  board.list.splice(deleteIndex, 1);\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/add-card\").reply(function (config) {\n  var _JSON$parse6 = JSON.parse(config.data),\n      boardId = _JSON$parse6.boardId,\n      cardTitle = _JSON$parse6.cardTitle,\n      listId = _JSON$parse6.listId;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  var column = board.list.find(function (column) {\n    return column.id === listId;\n  });\n  column.cardList.push({\n    id: shortId.generate(),\n    title: cardTitle,\n    members: [],\n    labels: [],\n    comments: [],\n    attachments: []\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/update-card\").reply(function (config) {\n  var _JSON$parse7 = JSON.parse(config.data),\n      boardId = _JSON$parse7.boardId,\n      listId = _JSON$parse7.listId,\n      card = _JSON$parse7.card;\n\n  var boardList = ScrumBoardDB.boardList.map(function (board) {\n    if (board.id === boardId) {\n      return _objectSpread(_objectSpread({}, board), {}, {\n        list: board.list.map(function (column) {\n          if (column.id === listId) {\n            return _objectSpread(_objectSpread({}, column), {}, {\n              cardList: column.cardList.map(function (item) {\n                if (item.id === card.id) {\n                  return _objectSpread({}, card);\n                }\n\n                return _objectSpread({}, item);\n              })\n            });\n          }\n\n          return column;\n        })\n      });\n    }\n\n    return board;\n  });\n  ScrumBoardDB.boardList = _toConsumableArray(boardList);\n  var board = boardList.find(function (item) {\n    return item.id === boardId;\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/reorder-list\").reply(function (config) {\n  var _JSON$parse8 = JSON.parse(config.data),\n      boardId = _JSON$parse8.boardId,\n      startIndex = _JSON$parse8.startIndex,\n      endIndex = _JSON$parse8.endIndex;\n\n  ScrumBoardDB.boardList = ScrumBoardDB.boardList.map(function (board) {\n    if (board.id === boardId) {\n      return _objectSpread(_objectSpread({}, board), {}, {\n        list: reorder(board.list, startIndex, endIndex)\n      });\n    }\n\n    return board;\n  });\n  var board = ScrumBoardDB.boardList.find(function (item) {\n    return item.id === boardId;\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/reorder-card\").reply(function (config) {\n  var _JSON$parse9 = JSON.parse(config.data),\n      boardId = _JSON$parse9.boardId,\n      listId = _JSON$parse9.listId,\n      startIndex = _JSON$parse9.startIndex,\n      endIndex = _JSON$parse9.endIndex;\n\n  ScrumBoardDB.boardList = ScrumBoardDB.boardList.map(function (board) {\n    if (board.id === boardId) {\n      return _objectSpread(_objectSpread({}, board), {}, {\n        list: board.list.map(function (list) {\n          if (list.id === listId) {\n            return _objectSpread(_objectSpread({}, list), {}, {\n              cardList: reorder(list.cardList, startIndex, endIndex)\n            });\n          }\n\n          return list;\n        })\n      });\n    }\n\n    return board;\n  });\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});\nMock.onPost(\"/api/scrum-board/move-card\").reply(function (config) {\n  var _JSON$parse10 = JSON.parse(config.data),\n      boardId = _JSON$parse10.boardId,\n      sourcelistId = _JSON$parse10.sourcelistId,\n      destinationlistId = _JSON$parse10.destinationlistId,\n      source = _JSON$parse10.source,\n      destination = _JSON$parse10.destination;\n\n  var board = ScrumBoardDB.boardList.find(function (board) {\n    return board.id === boardId;\n  });\n\n  var _board$list$find$card = board.list.find(function (list) {\n    return list.id === sourcelistId;\n  }).cardList.splice(source.index, 1),\n      _board$list$find$card2 = _slicedToArray(_board$list$find$card, 1),\n      movedItem = _board$list$find$card2[0];\n\n  board.list.find(function (list) {\n    return list.id === destinationlistId;\n  }).cardList.splice(destination.index, 0, movedItem);\n  var response = getBoardWithMemberDetails(board);\n  return [200, response];\n});","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/fake-db/db/scrumBoard.js"],"names":["Mock","_","shortId","ConstantList","ScrumBoardDB","boardList","id","title","list","generate","cardList","coverImage","ROOT_PATH","members","labels","description","attachments","name","size","url","comments","uid","text","time","Date","color","avatar","reorder","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","getBoardWithMemberDetails","board","map","find","member","onGet","reply","config","response","pick","onPost","data","push","JSON","parse","boardId","memberId","indexOf","listTitle","listId","column","deleteIndex","cardTitle","card","item","sourcelistId","destinationlistId","movedItem"],"mappings":"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","sourcesContent":["import Mock from \"../mock\";\nimport * as _ from \"lodash\";\nimport shortId from \"shortid\";\nimport ConstantList from \"../../app/appConfig\";\n// board => list => cardList\n\nconst ScrumBoardDB = {\n  boardList: [\n    {\n      id: \"c5d7498bbcb84d81fc7454448871ac6a6e\",\n      title: \"Egret React\",\n      list: [\n        {\n          id: shortId.generate(),\n          title: \"Drag and Drop\",\n          cardList: [\n            {\n              id: shortId.generate(),\n              title: \"Beautiful DnD\",\n              coverImage: ConstantList.ROOT_PATH+\"assets/images/sq-9.jpg\",\n              members: [\n                \"323sa680b3249760ea21rt47\",\n                \"7863a6802ez0e277a0f98534\",\n                \"14663a3406eb47ffa63d4fec9429cb71\",\n                \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n                \"e929b1d790ab49968ed8e34648553df4\"\n              ],\n              labels: [2, 3, 4],\n              description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n              attachments: [\n                {\n                  name: \"sky-life.jpg\",\n                  size: \"1.2 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\"\n                }\n              ],\n              comments: [\n                {\n                  id: shortId.generate(),\n                  uid: \"7863a6802ez0e277a0f98534\",\n                  text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                  time: new Date()\n                }\n              ]\n            },\n            {\n              id: shortId.generate(),\n              title: \"Nested DnD\",\n              coverImage: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\",\n              members: [\n                \"323sa680b3249760ea21rt47\",\n                \"7863a6802ez0e277a0f98534\",\n                \"14663a3406eb47ffa63d4fec9429cb71\",\n                \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n                \"e929b1d790ab49968ed8e34648553df4\"\n              ],\n              labels: [2, 3, 4],\n              description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n              attachments: [\n                {\n                  name: \"sky-life.jpg\",\n                  size: \"1.2 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\"\n                }\n              ],\n              comments: [\n                {\n                  id: shortId.generate(),\n                  uid: \"323sa680b3249760ea21rt47\",\n                  text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                  time: new Date()\n                }\n              ]\n            }\n          ]\n        },\n        {\n          id: shortId.generate(),\n          title: \"Chat App\",\n          cardList: [\n            {\n              id: shortId.generate(),\n              title: \"Beautiful DnD\",\n              coverImage: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\",\n              members: [\n                \"323sa680b3249760ea21rt47\",\n                \"7863a6802ez0e277a0f98534\",\n                \"14663a3406eb47ffa63d4fec9429cb71\",\n                \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n                \"e929b1d790ab49968ed8e34648553df4\"\n              ],\n              labels: [2, 3, 4],\n              description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n              attachments: [\n                {\n                  name: \"sky-life.jpg\",\n                  size: \"1.2 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\"\n                }\n              ],\n              comments: [\n                {\n                  id: shortId.generate(),\n                  uid: \"e929b1d790ab49968ed8e34648553df4\",\n                  text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                  time: new Date()\n                }\n              ]\n            },\n            {\n              id: shortId.generate(),\n              title: \"Nested DnD\",\n              coverImage: ConstantList.ROOT_PATH+\"assets/images/sq-13.jpg\",\n              members: [\n                \"323sa680b3249760ea21rt47\",\n                \"7863a6802ez0e277a0f98534\",\n                \"14663a3406eb47ffa63d4fec9429cb71\",\n                \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n                \"e929b1d790ab49968ed8e34648553df4\"\n              ],\n              labels: [2, 3, 4],\n              description: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n              attachments: [\n                {\n                  name: \"sky-life.jpg\",\n                  size: \"1.2 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\"\n                }\n              ],\n              comments: [\n                {\n                  id: shortId.generate(),\n                  uid: \"e929b1d790ab49968ed8e34648553df4\",\n                  text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                  time: new Date()\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      members: [\n        // only member id\n        \"323sa680b3249760ea21rt47\",\n        \"7863a6802ez0e277a0f98534\",\n        \"14663a3406eb47ffa63d4fec9429cb71\",\n        \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n        \"e929b1d790ab49968ed8e34648553df4\"\n      ]\n    },\n    {\n      id: \"c5d7498bbcb84d81fc72168871ac6a6e\",\n      title: \"Egret Angular\",\n      list: [\n        {\n          id: shortId.generate(),\n          title: \"Drag and Drop\",\n          cardList: [\n            {\n              id: shortId.generate(),\n              title: \"Beautiful DnD\",\n              coverImage: ConstantList.ROOT_PATH+\"assets/images/sq-9.jpg\",\n              members: [\n                \"323sa680b3249760ea21rt47\",\n                \"7863a6802ez0e277a0f98534\",\n                \"14663a3406eb47ffa63d4fec9429cb71\",\n                \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n                \"e929b1d790ab49968ed8e34648553df4\"\n              ],\n              labels: [2, 3, 4],\n              description:\n                \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n              attachments: [\n                {\n                  name: \"sky-life.jpg\",\n                  size: \"1.2 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\"\n                }\n              ],\n              comments: [\n                {\n                  id: shortId.generate(),\n                  uid: \"e929b1d790ab49968ed8e34648553df4\",\n                  text: `Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.`,\n                  time: new Date()\n                }\n              ]\n            },\n            {\n              id: shortId.generate(),\n              title: \"Nested DnD\",\n              coverImage: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\",\n              members: [\n                \"323sa680b3249760ea21rt47\",\n                \"7863a6802ez0e277a0f98534\",\n                \"14663a3406eb47ffa63d4fec9429cb71\",\n                \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n                \"e929b1d790ab49968ed8e34648553df4\"\n              ],\n              labels: [2, 3, 4],\n              description:\n                \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever s\",\n              attachments: [\n                {\n                  name: \"sky-life.jpg\",\n                  size: \"1.2 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-9.jpg\"\n                },\n                {\n                  name: \"stair.jpg\",\n                  size: \"2.8 MB\",\n                  url: ConstantList.ROOT_PATH+\"assets/images/sq-11.jpg\"\n                }\n              ],\n              comments: [\n                {\n                  id: shortId.generate(),\n                  uid: \"e929b1d790ab49968ed8e34648553df4\",\n                  text:\n                    \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\",\n                  time: new Date()\n                }\n              ]\n            }\n          ]\n        }\n      ],\n      members: [\n        // only member id\n        \"323sa680b3249760ea21rt47\",\n        \"7863a6802ez0e277a0f98534\",\n        \"14663a3406eb47ffa63d4fec9429cb71\",\n        \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n        \"e929b1d790ab49968ed8e34648553df4\"\n      ]\n    }\n  ],\n\n  labels: [\n    {\n      id: 1,\n      title: \"Active\",\n      color: \"primary\"\n    },\n    {\n      id: 2,\n      title: \"Complete\",\n      color: \"green\"\n    },\n    {\n      id: 3,\n      title: \"Ready\",\n      color: \"secondary\"\n    },\n    {\n      id: 4,\n      title: \"High Priority\",\n      color: \"error\"\n    }\n  ],\n\n  members: [\n    {\n      id: \"1\",\n      name: \"John Doe\",\n      avatar: \"./assets/images/avatar.jpg\"\n    },\n    {\n      id: \"323sa680b3249760ea21rt47\",\n      name: \"Frank Powell\",\n      avatar: \"./assets/images/faces/13.jpg\"\n    },\n    {\n      id: \"7863a6802ez0e277a0f98534\",\n      name: \"John Doe\",\n      avatar: \"./assets/images/face-1.jpg\"\n    },\n    {\n      id: \"14663a3406eb47ffa63d4fec9429cb71\",\n      name: \"Betty Diaz\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/12.jpg\"\n    },\n    {\n      id: \"43bd9bc59d164b5aea498e3ae1c24c3c\",\n      name: \"Brian Stephens\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/3.jpg\"\n    },\n    {\n      id: \"3fc8e01f3ce649d1caf884fbf4f698e4\",\n      name: \"Jacqueline Day\",\n      avatar: \"./assets/images/faces/16.jpg\"\n    },\n    {\n      id: \"e929b1d790ab49968ed8e34648553df4\",\n      name: \"Arthur Mendoza\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/10.jpg\"\n    },\n    {\n      id: \"d6caf04bba614632b5fecf91aebf4564\",\n      name: \"Jeremy Lee\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/9.jpg\"\n    },\n    {\n      id: \"be0fb188c8e242f097fafa24632107e4\",\n      name: \"Johnny Newman\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/5.jpg\"\n    },\n    {\n      id: \"dea902191b964a68ba5f2d93cff37e13\",\n      name: \"Jeffrey Little\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/15.jpg\"\n    },\n    {\n      id: \"0bf58f5ccc4543a9f8747350b7bda3c7\",\n      name: \"Barbara Romero\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/4.jpg\"\n    },\n    {\n      id: \"c5d7498bbcb84d81fc72168871ac6a6e\",\n      name: \"Daniel James\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/2.jpg\"\n    },\n    {\n      id: \"97bfbdd9413e46efdaca2010400fe18c\",\n      name: \"Alice Sanders\",\n      avatar: ConstantList.ROOT_PATH+\"assets/images/faces/17.jpg\"\n    }\n  ]\n};\n\n// a little function to help us with reordering the result\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n// Moves an item from one list to another list.\nconst move = (source, destination, droppableSource, droppableDestination) => {\n  const sourceClone = Array.from(source);\n  const destClone = Array.from(destination);\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n  destClone.splice(droppableDestination.index, 0, removed);\n\n  const result = {};\n  result[droppableSource.droppableId] = sourceClone;\n  result[droppableDestination.droppableId] = destClone;\n\n  return result;\n};\n\nconst getBoardWithMemberDetails = board => {\n  const members = board.members.map(id => {\n    return ScrumBoardDB.members.find(member => member.id === id);\n  });\n  return { ...board, members };\n};\n\nMock.onGet(\"/api/scrum-board/all-member\").reply(config => {\n  return [200, [...ScrumBoardDB.members]];\n});\n\nMock.onGet(\"/api/scrum-board/all-label\").reply(config => {\n  return [200, [...ScrumBoardDB.labels]];\n});\n\nMock.onGet(\"/api/scrum-board/all-board\").reply(config => {\n  const response = ScrumBoardDB.boardList.map(board =>\n    _.pick(board, [\"id\", \"title\"])\n  );\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/add-board\").reply(config => {\n  let title = config.data;\n  ScrumBoardDB.boardList.push({\n    id: shortId.generate(),\n    title,\n    list: [],\n    members: []\n  });\n\n  const response = ScrumBoardDB.boardList.map(board =>\n    _.pick(board, [\"id\", \"title\"])\n  );\n\n  return [200, response];\n});\n\nMock.onGet(\"/api/scrum-board\").reply(config => {\n  const id = config.data;\n\n  const board = ScrumBoardDB.boardList.find(board => board.id === id);\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onGet(\"/api/scrum-board\").reply(config => {\n  const id = config.data;\n\n  const board = ScrumBoardDB.boardList.find(board => board.id === id);\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/add-member\").reply(config => {\n  let { boardId, memberId } = JSON.parse(config.data);\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n\n  board.members.push(memberId);\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/delete-member\").reply(config => {\n  let { boardId, memberId } = JSON.parse(config.data);\n\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.members.splice(board.members.indexOf(memberId), 1);\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/add-column\").reply(config => {\n  let { boardId, listTitle } = JSON.parse(config.data);\n\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.list.push({\n    id: shortId.generate(),\n    title: listTitle,\n    cardList: []\n  });\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/rename-column\").reply(config => {\n  let { boardId, listTitle, listId } = JSON.parse(config.data);\n\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  board.list.map(column => {\n    if (column.id === listId) {\n      column.title = listTitle;\n    }\n    return column;\n  });\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/delete-column\").reply(config => {\n  let { boardId, listId } = JSON.parse(config.data);\n\n  const board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  let deleteIndex = null;\n\n  board.list.map((column, index) => {\n    if (column.id === listId) deleteIndex = index;\n  });\n\n  board.list.splice(deleteIndex, 1);\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/add-card\").reply(config => {\n  let { boardId, cardTitle, listId } = JSON.parse(config.data);\n\n  let board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  let column = board.list.find(column => column.id === listId);\n\n  column.cardList.push({\n    id: shortId.generate(),\n    title: cardTitle,\n    members: [],\n    labels: [],\n    comments: [],\n    attachments: []\n  });\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/update-card\").reply(config => {\n  let { boardId, listId, card } = JSON.parse(config.data);\n\n  let boardList = ScrumBoardDB.boardList.map(board => {\n    if (board.id === boardId) {\n      return {\n        ...board,\n        list: board.list.map(column => {\n          if (column.id === listId) {\n            return {\n              ...column,\n              cardList: column.cardList.map(item => {\n                if (item.id === card.id) {\n                  return { ...card };\n                }\n                return { ...item };\n              })\n            };\n          }\n          return column;\n        })\n      };\n    }\n    return board;\n  });\n\n  ScrumBoardDB.boardList = [...boardList];\n\n  let board = boardList.find(item => item.id === boardId);\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/reorder-list\").reply(config => {\n  let { boardId, startIndex, endIndex } = JSON.parse(config.data);\n\n  ScrumBoardDB.boardList = ScrumBoardDB.boardList.map(board => {\n    if (board.id === boardId) {\n      return {\n        ...board,\n        list: reorder(board.list, startIndex, endIndex)\n      };\n    }\n    return board;\n  });\n\n  let board = ScrumBoardDB.boardList.find(item => item.id === boardId);\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/reorder-card\").reply(config => {\n  let { boardId, listId, startIndex, endIndex } = JSON.parse(config.data);\n\n  ScrumBoardDB.boardList = ScrumBoardDB.boardList.map(board => {\n    if (board.id === boardId) {\n      return {\n        ...board,\n        list: board.list.map(list => {\n          if (list.id === listId) {\n            return {\n              ...list,\n              cardList: reorder(list.cardList, startIndex, endIndex)\n            };\n          }\n          return list;\n        })\n      };\n    }\n    return board;\n  });\n\n  let board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n\nMock.onPost(\"/api/scrum-board/move-card\").reply(config => {\n  let {\n    boardId,\n    sourcelistId,\n    destinationlistId,\n    source,\n    destination\n  } = JSON.parse(config.data);\n  let board = ScrumBoardDB.boardList.find(board => board.id === boardId);\n\n  let [movedItem] = board.list\n    .find(list => list.id === sourcelistId)\n    .cardList.splice(source.index, 1);\n\n  board.list\n    .find(list => list.id === destinationlistId)\n    .cardList.splice(destination.index, 0, movedItem);\n\n  const response = getBoardWithMemberDetails(board);\n\n  return [200, response];\n});\n"]},"metadata":{},"sourceType":"module"}