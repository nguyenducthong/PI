{"ast":null,"code":"import _slicedToArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\NotificationBar.jsx\";\nimport React from \"react\";\nimport { Icon, Badge, MuiThemeProvider, Card, Button, IconButton, Drawer, Fab } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getNotification, deleteAllNotification, deleteNotification } from \"../../redux/actions/NotificationActions\";\n\nfunction NotificationBar(props) {\n  var container = props.container,\n      theme = props.theme,\n      settings = props.settings,\n      _props$notification = props.notification,\n      notifcationList = _props$notification === void 0 ? [] : _props$notification,\n      getNotification = props.getNotification,\n      deleteAllNotification = props.deleteAllNotification,\n      deleteNotification = props.deleteNotification;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      panelOpen = _React$useState2[0],\n      setPanelOpen = _React$useState2[1];\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n\n    setPanelOpen(!panelOpen);\n  }\n\n  var parentThemePalette = theme.palette; // console.log(theme);\n\n  return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  });\n}\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    getNotification: PropTypes.func.isRequired,\n    deleteNotification: PropTypes.func.isRequired,\n    deleteAllNotification: PropTypes.func.isRequired,\n    notification: state.notification,\n    settings: state.layout.settings\n  };\n};\n\nexport default withStyles({}, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  getNotification,\n  deleteNotification,\n  deleteAllNotification\n})(NotificationBar));","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/EgretLayout/SharedCompoents/NotificationBar.jsx"],"names":["React","Icon","Badge","MuiThemeProvider","Card","Button","IconButton","Drawer","Fab","Link","withStyles","getTimeDifference","PropTypes","connect","getNotification","deleteAllNotification","deleteNotification","NotificationBar","props","container","theme","settings","notification","notifcationList","useState","panelOpen","setPanelOpen","handleDrawerToggle","parentThemePalette","palette","themes","activeTheme","propTypes","object","isRequired","array","mapStateToProps","state","func","layout","withTheme"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,gBAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,GARF,QASO,mBATP;AAUA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,iBAAT,QAAkC,UAAlC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,eADF,EAEEC,qBAFF,EAGEC,kBAHF,QAIO,yCAJP;;AAMA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,MAE5BC,SAF4B,GAS1BD,KAT0B,CAE5BC,SAF4B;AAAA,MAG5BC,KAH4B,GAS1BF,KAT0B,CAG5BE,KAH4B;AAAA,MAI5BC,QAJ4B,GAS1BH,KAT0B,CAI5BG,QAJ4B;AAAA,4BAS1BH,KAT0B,CAK5BI,YAL4B;AAAA,MAKdC,eALc,oCAKI,EALJ;AAAA,MAM5BT,eAN4B,GAS1BI,KAT0B,CAM5BJ,eAN4B;AAAA,MAO5BC,qBAP4B,GAS1BG,KAT0B,CAO5BH,qBAP4B;AAAA,MAQ5BC,kBAR4B,GAS1BE,KAT0B,CAQ5BF,kBAR4B;;AAAA,wBAWIhB,KAAK,CAACwB,QAAN,CAAe,KAAf,CAXJ;AAAA;AAAA,MAWvBC,SAXuB;AAAA,MAWZC,YAXY;;AAa9B,WAASC,kBAAT,GAA8B;AAC5B,QAAI,CAACF,SAAL,EAAgB;AACdX,MAAAA,eAAe;AAChB;;AACDY,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AACD,MAAMG,kBAAkB,GAAGR,KAAK,CAACS,OAAjC,CAnB8B,CAoB9B;;AAEA,sBACE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAER,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACU,WAAzB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAsFD;;AAEDd,eAAe,CAACe,SAAhB,GAA4B;AAC1BX,EAAAA,QAAQ,EAAET,SAAS,CAACqB,MAAV,CAAiBC,UADD;AAE1BZ,EAAAA,YAAY,EAAEV,SAAS,CAACuB,KAAV,CAAgBD;AAFJ,CAA5B;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCvB,IAAAA,eAAe,EAAEF,SAAS,CAAC0B,IAAV,CAAeJ,UADA;AAEhClB,IAAAA,kBAAkB,EAAEJ,SAAS,CAAC0B,IAAV,CAAeJ,UAFH;AAGhCnB,IAAAA,qBAAqB,EAAEH,SAAS,CAAC0B,IAAV,CAAeJ,UAHN;AAIhCZ,IAAAA,YAAY,EAAEe,KAAK,CAACf,YAJY;AAKhCD,IAAAA,QAAQ,EAAEgB,KAAK,CAACE,MAAN,CAAalB;AALS,GAAL;AAAA,CAA7B;;AAQA,eAAeX,UAAU,CAAC,EAAD,EAAK;AAAE8B,EAAAA,SAAS,EAAE;AAAb,CAAL,CAAV,CACb3B,OAAO,CACLuB,eADK,EAEL;AAAEtB,EAAAA,eAAF;AAAmBE,EAAAA,kBAAnB;AAAuCD,EAAAA;AAAvC,CAFK,CAAP,CAGEE,eAHF,CADa,CAAf","sourcesContent":["import React from \"react\";\nimport {\n  Icon,\n  Badge,\n  MuiThemeProvider,\n  Card,\n  Button,\n  IconButton,\n  Drawer,\n  Fab\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotification,\n  deleteAllNotification,\n  deleteNotification\n} from \"../../redux/actions/NotificationActions\";\n\nfunction NotificationBar(props) {\n  const {\n    container,\n    theme,\n    settings,\n    notification: notifcationList = [],\n    getNotification,\n    deleteAllNotification,\n    deleteNotification\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n    setPanelOpen(!panelOpen);\n  }\n  const parentThemePalette = theme.palette;\n  // console.log(theme);\n\n  return (\n    <MuiThemeProvider theme={settings.themes[settings.activeTheme]}>\n      {/* <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={5}>\n          <Icon>notifications</Icon>\n        </Badge>\n      </IconButton> */}\n\n      {/* <Drawer\n        width={\"100px\"}\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"notification\">\n          <div className=\"notification__topbar flex flex-middle p-16 mb-24\">\n            <Icon color=\"primary\">notifications</Icon>\n            <h5 className=\"ml-8 my-0 font-weight-500\">Notifications</h5>\n          </div>\n\n          {notifcationList.map(notification => (\n            <div\n              key={notification.id}\n              className=\"notification__card position-relative\"\n            >\n              <IconButton\n                size=\"small\"\n                className=\"delete-button bg-light-gray mr-24\"\n                onClick={() => deleteNotification(notification.id)}\n              >\n                <Icon className=\"text-muted\" fontSize=\"small\">\n                  clear\n                </Icon>\n              </IconButton>\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\n                <Card className=\"mx-16 mb-24\" elevation={3}>\n                  <div className=\"card__topbar flex flex-middle flex-space-between p-8 bg-light-gray\">\n                    <div className=\"flex\">\n                      <div className=\"card__topbar__button\">\n                        <Icon\n                          className=\"card__topbar__icon\"\n                          fontSize=\"small\"\n                          color={notification.icon.color}\n                        >\n                          {notification.icon.name}\n                        </Icon>\n                      </div>\n                      <span className=\"ml-4 font-weight-500 text-muted\">\n                        {notification.heading}\n                      </span>\n                    </div>\n                    <small className=\"card__topbar__time text-muted\">\n                      {getTimeDifference(new Date(notification.timestamp))} ago\n                    </small>\n                  </div>\n                  <div className=\"px-16 pt-8 pb-16\">\n                    <p className=\"m-0\">{notification.title}</p>\n                    <small className=\"text-muted\">\n                      {notification.subtitle}\n                    </small>\n                  </div>\n                </Card>\n              </Link>\n            </div>\n          ))}\n\n          <div className=\"text-center\">\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\n          </div>\n        </div>\n      </Drawer> */}\n    </MuiThemeProvider>\n  );\n}\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  getNotification: PropTypes.func.isRequired,\n  deleteNotification: PropTypes.func.isRequired,\n  deleteAllNotification: PropTypes.func.isRequired,\n  notification: state.notification,\n  settings: state.layout.settings\n});\n\nexport default withStyles({}, { withTheme: true })(\n  connect(\n    mapStateToProps,\n    { getNotification, deleteNotification, deleteAllNotification }\n  )(NotificationBar)\n);\n"]},"metadata":{},"sourceType":"module"}