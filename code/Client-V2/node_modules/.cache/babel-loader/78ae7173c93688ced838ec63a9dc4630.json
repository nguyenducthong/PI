{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQARound\\\\EQARoundDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, FormControlLabel, MenuItem, FormControl, InputLabel, Select, Switch, FormHelperText, InputAdornment, Checkbox, Icon, IconButton } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\nimport { getByPage, deleteItem, saveItem, getItemById, checkCode } from \"./EQARoundService\";\nimport EQARoundDialog from \"./EQARoundDialog\";\nimport { generateRandomId } from \"utils\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { search as searchByPage } from \"../EQAPlanning/EQAPlanningService\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MuiPickersUtilsProvider, DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport EQAPlanningSearchDialog from \"./EQAPlanningSearchDialog\";\nimport '../../../styles/views/_style.scss';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport EQARoundTabs from \"./EQARoundTabs\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar OrganizationEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(OrganizationEditorDialog, _Component);\n\n  var _super = _createSuper(OrganizationEditorDialog);\n\n  function OrganizationEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, OrganizationEditorDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      level: 0,\n      parent: {},\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      startDate: new Date(),\n      //thời gian bắt đầu vòng ngoại kiểm\n      endDate: new Date(),\n      //thời gian kết thúc vòng ngoại kiểm\n      registrationStartDate: new Date(),\n      //thời gian bắt đầu đăng ký tham gia vòng ngoại kiểm\n      registrationExpiryDate: new Date(),\n      //thời gian kết thúc đăng ký tham gia vòng ngoại kiểm\n      sampleSubmissionDeadline: new Date(),\n      isManualSetCode: false,\n      isActive: true,\n      isView: false,\n      sampleNumber: null,\n      //số mẫu\n      sampleSetNumber: null,\n      //số bộ mẫu\n      executionTime: new Date(),\n      //thời gian thực hiện\n      healthOrgNumber: null,\n      //Số đơn vị tham gia\n      detailRound: [],\n      listPersonnel: [],\n      checkStartDate: false,\n      checkEndDate: false,\n      checkPersonnel: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"isManualSetCode\") {\n        _this.setState({\n          isManualSetCode: event.target.checked\n        });\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var _this$state$item = _this.state.item,\n          code = _this$state$item.code,\n          id = _this$state$item.id,\n          detailRound = _this$state$item.detailRound,\n          isManualSetCode = _this$state$item.isManualSetCode;\n      var _this$state = _this.state,\n          listPersonnel = _this$state.listPersonnel,\n          checkStartDate = _this$state.checkStartDate,\n          checkEndDate = _this$state.checkEndDate,\n          checkPersonnel = _this$state.checkPersonnel;\n      var t = _this.props.t;\n\n      _this.setState({\n        isView: true\n      });\n\n      if (checkStartDate == true) {\n        toast.warning(t(\"EQARound.emptyStartTime\"));\n\n        _this.setState({\n          isView: false\n        });\n\n        return;\n      } else if (checkEndDate == true) {\n        toast.warning(t(\"EQARound.emptyEndTime\"));\n\n        _this.setState({\n          isView: false\n        });\n\n        return;\n      } else if (checkPersonnel == true) {\n        toast.warning(t(\"EQARound.emptyPersonnel\"));\n\n        _this.setState({\n          isView: false\n        });\n\n        return;\n      } else {\n        if (isManualSetCode) {\n          checkCode(id, code).then(function (res) {\n            if (res.data) {\n              toast.warning(t(\"EQARound.duplicateCode\"));\n\n              _this.setState({\n                isView: false\n              });\n            } else {\n              if (id) {\n                saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                  if (response.data != null && response.status == 200) {\n                    // this.props.handleOKEditClose();\n                    _this.state.id = response.data.id;\n\n                    if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                      response.data.detailRound.sort(function (a, b) {\n                        return a.type - b.type;\n                      });\n                      response.data.detailRound.forEach(function (res) {\n                        if (res != null && res.personnel != null && res.personnel.id) {\n                          res.personnel = res.personnel.id;\n                        }\n                      });\n                      _this.state.item.detailRound = response.data.detailRound;\n                    }\n\n                    _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                      isView: false\n                    }));\n\n                    toast.success(t(\"EQARound.notify.editSucess\"));\n                  } else {\n                    _this.setState({\n                      isView: false\n                    });\n\n                    toast.error(t(\"EQARound.notify.error\"));\n                  }\n                }).catch(function () {\n                  _this.setState({\n                    isView: false\n                  });\n                });\n              } else {\n                saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                  if (response.data != null && response.status == 200) {\n                    // this.props.handleOKEditClose();\n                    _this.state.id = response.data.id;\n\n                    if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                      response.data.detailRound.sort(function (a, b) {\n                        return a.type - b.type;\n                      });\n                      response.data.detailRound.forEach(function (res) {\n                        if (res != null && res.personnel != null && res.personnel.id) {\n                          res.personnel = res.personnel.id;\n                        }\n                      });\n                      _this.state.item.detailRound = response.data.detailRound;\n                    }\n\n                    _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                      isView: false\n                    }));\n\n                    toast.success(t(\"EQARound.notify.addSucess\"));\n                  } else {\n                    _this.setState({\n                      isView: false\n                    });\n\n                    toast.error(t(\"EQARound.notify.error\"));\n                  }\n                }).catch(function () {\n                  _this.setState({\n                    isView: false\n                  });\n                });\n              }\n            }\n          });\n        } else {\n          if (id) {\n            saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n              if (response.data != null && response.status == 200) {\n                // this.props.handleOKEditClose();\n                _this.state.id = response.data.id;\n\n                if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                  response.data.detailRound.sort(function (a, b) {\n                    return a.type - b.type;\n                  });\n                  response.data.detailRound.forEach(function (res) {\n                    if (res != null && res.personnel != null && res.personnel.id) {\n                      res.personnel = res.personnel.id;\n                    }\n                  });\n                  _this.state.item.detailRound = response.data.detailRound;\n                }\n\n                _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                  isView: false\n                }));\n\n                toast.success(t(\"EQARound.notify.editSucess\"));\n              } else {\n                toast.error(t(\"EQARound.notify.error\"));\n\n                _this.setState({\n                  isView: false\n                });\n              }\n            }).catch(function () {\n              _this.setState({\n                isView: false\n              });\n            });\n          } else {\n            saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n              if (response.data != null && response.status == 200) {\n                // this.props.handleOKEditClose();\n                _this.state.id = response.data.id;\n\n                if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                  response.data.detailRound.sort(function (a, b) {\n                    return a.type - b.type;\n                  });\n                  response.data.detailRound.forEach(function (res) {\n                    if (res != null && res.personnel != null && res.personnel.id) {\n                      res.personnel = res.personnel.id;\n                    }\n                  });\n                  _this.state.item.detailRound = response.data.detailRound;\n                }\n\n                _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                  isView: false\n                }));\n\n                toast.success(t(\"EQARound.notify.addSucess\"));\n              } else {\n                toast.error(t(\"EQARound.notify.error\"));\n\n                _this.setState({\n                  isView: false\n                });\n              }\n            }).catch(function () {\n              _this.setState({\n                isView: false\n              });\n            });\n          }\n        }\n      }\n    };\n\n    _this.handleSelectPlaning = function (results) {\n      _this.setState({\n        eqaPlanning: results,\n        shouldPlanningSearchDialog: false\n      });\n    };\n\n    _this.handleSearchDialogClose = function () {\n      _this.setState({\n        shouldPlanningSearchDialog: false\n      });\n    };\n\n    _this.handleSelect = function (item) {\n      _this.setState({\n        eqaPlanning: item\n      });\n\n      _this.handleSearchDialogClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(OrganizationEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState({\n        item: item\n      }, function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          isView = _this$state2.isView;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }\n      }, \" \", (id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"EQARound.title\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 114\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EQARoundTabs, {\n        t: t,\n        i18n: i18n,\n        item: this.state.item,\n        listPersonnel: this.state.listPersonnel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      }, t(\"Cancel\")), !isView && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 26\n        }\n      }, t('Save')))));\n    }\n  }]);\n\n  return OrganizationEditorDialog;\n}(Component);\n\nexport default OrganizationEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQARound/EQARoundDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","FormControlLabel","MenuItem","FormControl","InputLabel","Select","Switch","FormHelperText","InputAdornment","Checkbox","Icon","IconButton","ValidatorForm","TextValidator","TextField","getByPage","deleteItem","saveItem","getItemById","checkCode","EQARoundDialog","generateRandomId","useTranslation","withTranslation","Trans","Breadcrumb","ConfirmationDialog","search","searchByPage","AsynchronousAutocomplete","DialogActions","DialogContent","DialogContentText","DialogTitle","Draggable","Paper","MuiPickersUtilsProvider","DatePicker","KeyboardDatePicker","DateFnsUtils","EQAPlanningSearchDialog","toast","EQARoundTabs","configure","autoClose","draggable","limit","PaperComponent","props","OrganizationEditorDialog","state","name","code","level","parent","shouldOpenSearchDialog","shouldOpenConfirmationDialog","startDate","Date","endDate","registrationStartDate","registrationExpiryDate","sampleSubmissionDeadline","isManualSetCode","isActive","isView","sampleNumber","sampleSetNumber","executionTime","healthOrgNumber","detailRound","listPersonnel","checkStartDate","checkEndDate","checkPersonnel","handleChange","event","source","persist","setState","target","checked","value","handleFormSubmit","item","id","t","warning","then","res","data","response","status","length","sort","a","b","type","forEach","personnel","success","error","catch","handleSelectPlaning","results","eqaPlanning","shouldPlanningSearchDialog","handleSearchDialogClose","handleSelect","open","handleClose","handleOKEditClose","i18n","cursor","position","right","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dialog,\n  Button,\n  Grid,\n  FormControlLabel,MenuItem,\n  FormControl, InputLabel, Select,\n  Switch,FormHelperText,\n  InputAdornment,\n  Checkbox,\n  Icon,\n  IconButton\n} from \"@material-ui/core\";\nimport {\n  ValidatorForm,\n  TextValidator,\n  TextField\n} from \"react-material-ui-form-validator\";\nimport {\n  getByPage,\n  deleteItem,\n  saveItem,\n  getItemById,\n  checkCode\n} from \"./EQARoundService\";\nimport EQARoundDialog from \"./EQARoundDialog\";\nimport { generateRandomId } from \"utils\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { search as searchByPage } from \"../EQAPlanning/EQAPlanningService\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { MuiPickersUtilsProvider, DatePicker,KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport EQAPlanningSearchDialog from \"./EQAPlanningSearchDialog\";\nimport '../../../styles/views/_style.scss';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport EQARoundTabs from \"./EQARoundTabs\"\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit:3\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable\n      handle=\"#draggable-dialog-title\"\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\n    >\n      <Paper {...props} />\n    </Draggable>\n  );\n}\nclass OrganizationEditorDialog extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n  state = {\n    name: \"\",\n    code: \"\",\n    level: 0,\n    parent: {},\n    shouldOpenSearchDialog: false,\n    shouldOpenConfirmationDialog: false,\n    startDate: new Date(), //thời gian bắt đầu vòng ngoại kiểm\n    endDate: new Date(), //thời gian kết thúc vòng ngoại kiểm\n    registrationStartDate: new Date(), //thời gian bắt đầu đăng ký tham gia vòng ngoại kiểm\n    registrationExpiryDate: new Date(), //thời gian kết thúc đăng ký tham gia vòng ngoại kiểm\n    sampleSubmissionDeadline: new Date(),\n    isManualSetCode: false,\n    isActive: true,\n    isView: false,\n    sampleNumber: null,//số mẫu\n    sampleSetNumber: null,//số bộ mẫu\n    executionTime: new Date(),//thời gian thực hiện\n    healthOrgNumber: null,//Số đơn vị tham gia\n    detailRound: [],\n    listPersonnel: [], \n    checkStartDate: false,\n    checkEndDate: false,\n    checkPersonnel: false\n  };\n\n  handleChange = (event, source) => {\n    event.persist();\n    if (source === \"switch\") {\n      this.setState({ isActive: event.target.checked });\n      return;\n    }\n    if (source === \"isManualSetCode\") {\n      this.setState({ isManualSetCode: event.target.checked })\n    }\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handleFormSubmit = () => {\n    let { code, id, detailRound, isManualSetCode } = this.state.item;\n    let { listPersonnel, checkStartDate, checkEndDate, checkPersonnel } = this.state;\n    let { t } = this.props;\n    \n    this.setState({isView:true});\n      if(checkStartDate == true){\n        toast.warning(t(\"EQARound.emptyStartTime\"));\n        this.setState({isView:false});\n        return\n      } else if(checkEndDate == true){\n        toast.warning(t(\"EQARound.emptyEndTime\"))\n        this.setState({isView:false});\n        return\n      }else if(checkPersonnel == true){\n        toast.warning(t(\"EQARound.emptyPersonnel\"))\n        this.setState({isView:false});\n        return\n      }else{\n          if(isManualSetCode){\n            checkCode(id, code).then(res =>{\n              if(res.data){\n                toast.warning(t(\"EQARound.duplicateCode\"));\n                this.setState({isView:false});\n              }else{\n                if (id) {\n                  saveItem({\n                    ...this.state.item\n                  }).then(response => {\n                    if (response.data != null && response.status == 200) {\n                      // this.props.handleOKEditClose();\n                      this.state.id = response.data.id;\n                      if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                        response.data.detailRound.sort( function (a, b){\n                         return a.type - b.type\n                        })\n                        response.data.detailRound.forEach(res => {\n                          if (res != null && res.personnel != null && res.personnel.id) {\n                            res.personnel = res.personnel.id;\n                          }\n                        });\n                        this.state.item.detailRound = response.data.detailRound;\n                      }\n                      this.setState({...this.state, isView:false});\n                      toast.success(t(\"EQARound.notify.editSucess\"));\n                    } else {\n                      this.setState({isView:false});\n                      toast.error(t(\"EQARound.notify.error\"));\n                    }\n                  }).catch(()=>{\n                    this.setState({isView:false});\n                  });\n                } else {\n                  saveItem({\n                    ...this.state.item\n                  }).then(response => {\n                    if (response.data != null && response.status == 200) {\n                      // this.props.handleOKEditClose();\n                      this.state.id = response.data.id;\n                      if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                        response.data.detailRound.sort( function (a, b){\n                          return a.type - b.type\n                         })\n                        response.data.detailRound.forEach(res => {\n                          if (res != null && res.personnel != null && res.personnel.id) {\n                            res.personnel = res.personnel.id;\n                          }\n                        });\n                        this.state.item.detailRound = response.data.detailRound;\n                      }\n                      this.setState({...this.state, isView:false});\n                      toast.success(t(\"EQARound.notify.addSucess\"));\n                    } else {\n                      this.setState({isView:false});\n                      toast.error(t(\"EQARound.notify.error\"));\n                    }\n                  }).catch(()=>{\n                    this.setState({isView:false});\n                  });\n                }\n              }\n            })\n          }else{\n            if (id) {\n              saveItem({\n                ...this.state.item\n              }).then(response => {\n                if (response.data != null && response.status == 200) {\n                  // this.props.handleOKEditClose();\n                  this.state.id = response.data.id;\n                  if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                    response.data.detailRound.sort( function (a, b){\n                      return a.type - b.type\n                     })\n                    response.data.detailRound.forEach(res => {\n                      if (res != null && res.personnel != null && res.personnel.id) {\n                        res.personnel = res.personnel.id;\n                      }\n                    });\n                    this.state.item.detailRound = response.data.detailRound;\n                  }\n                  this.setState({...this.state, isView:false});\n                  toast.success(t(\"EQARound.notify.editSucess\"));\n                } else {\n                  toast.error(t(\"EQARound.notify.error\"));\n                  this.setState({isView:false});\n                }\n              }).catch(()=>{\n                this.setState({isView:false});\n              });\n            } else {\n              saveItem({\n                ...this.state.item\n              }).then(response => {\n                if (response.data != null && response.status == 200) {\n                  // this.props.handleOKEditClose();\n                  this.state.id = response.data.id;\n                  if (response.data.detailRound != null && response.data.detailRound.length > 0) {\n                    response.data.detailRound.sort( function (a, b){\n                      return a.type - b.type\n                     })\n                    response.data.detailRound.forEach(res => {\n                      if (res != null && res.personnel != null && res.personnel.id) {\n                        res.personnel = res.personnel.id;\n                      }\n                    });\n                    this.state.item.detailRound = response.data.detailRound;\n                  }\n                  this.setState({...this.state, isView:false});\n                  toast.success(t(\"EQARound.notify.addSucess\"));\n                } else {\n                  toast.error(t(\"EQARound.notify.error\"));\n                  this.setState({isView:false});\n                }\n              }).catch(()=>{\n                this.setState({isView:false});\n              });\n            }\n          }\n      } \n  };\n\n  componentWillMount() {\n    let { open, handleClose, item } = this.props;\n  \n    this.setState({ item: item }, function () {\n    \n    });\n  }\n  handleSelectPlaning = results => {\n    this.setState({ eqaPlanning: results, shouldPlanningSearchDialog: false });\n  };\n  handleSearchDialogClose = () => {\n    this.setState({\n      shouldPlanningSearchDialog: false\n    });\n  };\n\n  handleSelect = item => {\n    this.setState({ eqaPlanning: item });\n    this.handleSearchDialogClose();\n  };\n  \n\n  render() {\n    let {\n      id,\n      isView,\n    } = this.state;\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\n    return (\n      <Dialog\n        open={open}\n        PaperComponent={PaperComponent}\n        maxWidth={\"lg\"}\n        fullWidth={true}\n      >\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\n          <span className=\"mb-20 styleColor\"> {(id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"EQARound.title\")} </span>\n          <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\n              title={t(\"close\")}>\n              close\n            </Icon>\n            </IconButton>\n          </DialogTitle>\n          <DialogContent dividers>\n            <Grid item xs={12}>\n                <EQARoundTabs\n                  t={t} i18n={i18n}\n                  item={this.state.item}\n                  listPersonnel = {this.state.listPersonnel}\n                />\n              </Grid>\n          </DialogContent>\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={() => this.props.handleClose()}\n            >\n              {t(\"Cancel\")}\n            </Button>\n            {(!isView && <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\">\n                {t('Save')}\n            </Button>)}\n          </DialogActions>\n        </ValidatorForm>\n      </Dialog>\n    );\n  }\n}\n\nexport default OrganizationEditorDialog;\n"]},"metadata":{},"sourceType":"module"}