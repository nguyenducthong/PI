{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\IntroduceTheProgram\\\\UploadImage.jsx\";\nimport { Fab, Icon, Card, Grid, Divider, Button, DialogActions, Dialog } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport '../../../styles/views/_style.scss';\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar UploadImage = /*#__PURE__*/function (_React$Component) {\n  _inherits(UploadImage, _React$Component);\n\n  var _super = _createSuper(UploadImage);\n\n  function UploadImage() {\n    var _this;\n\n    _classCallCheck(this, UploadImage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      dragClass: \"\",\n      files: [],\n      statusList: [],\n      isEmpty: true,\n      src: null,\n      crop: {\n        unit: '%',\n        width: 50,\n        height: 50\n      },\n      blobValue: null,\n      contentType: null\n    };\n\n    _this.onImageLoaded = function (image) {\n      _this.imageRef = image;\n    };\n\n    _this.onCropComplete = function (crop) {\n      _this.makeClientCrop(crop);\n    };\n\n    _this.onCropChange = function (crop, percentCrop) {\n      _this.setState({\n        crop\n      });\n    };\n\n    _this.handleFileUploadOnSelect = function (e) {\n      if (e.target.files && e.target.files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n      }\n    };\n\n    _this.handleFileSelect = function (e) {\n      if (e.target.files && e.target.files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result,\n            isEmpty: false\n          });\n        });\n        reader.readAsDataURL(e.target.files[0]);\n      } // let { t } = this.props;\n      // let files = event.target.files;\n      // let list = [];\n      // console.log(files);\n      // let acceptType = this.props.acceptType.split(\";\");\n      // for (const iterator of files) {\n      //   if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\n      //     console.log(acceptType);\n      //     console.log(iterator.type.split(\"/\"));\n      //     alert(t(\"general.type_not_accepted\"));\n      //     break;\n      //   }\n      //   list.push({\n      //     file: iterator,\n      //     uploading: false,\n      //     error: false,\n      //     progress: 0\n      //   });\n      // }\n      // this.setState({\n      //   files: [...list]\n      // });\n\n    };\n\n    _this.handleDragOver = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleDrop = function (event) {\n      event.preventDefault();\n      event.persist();\n      var files = event.dataTransfer.files; // this.fileUpload(files[0]).then(res => {\n      //   let url =ConstantList.API_ENPOINT+\"/public/file/downloadbyid/\"+res.data.id;\n      //   alert(url);\n      //   this.setState({imageUrl:url})\n      //   console.log(url);\n      //   //alert(\"File uploaded successfully.\")\n      // });\n\n      if (files && files.length > 0) {\n        var reader = new FileReader();\n        reader.addEventListener('load', function () {\n          return _this.setState({\n            src: reader.result\n          });\n        });\n        reader.readAsDataURL(files[0]);\n      }\n\n      return false;\n    };\n\n    _this.handleDragStart = function (event) {\n      _this.setState({\n        dragClass: \"drag-shadow\"\n      });\n    };\n\n    _this.handleSingleRemove = function (index) {\n      var files = _toConsumableArray(_this.state.files);\n\n      files.splice(index, 1);\n\n      _this.setState({\n        files: _toConsumableArray(files)\n      });\n    };\n\n    _this.handleAllRemove = function () {\n      _this.setState({\n        files: []\n      });\n    };\n\n    _this.uploadSingleFile = function (index) {\n      var t = _this.props.t;\n\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n\n      _this.fileUpload(file.file).then(function (res) {\n        alert(t(\"general.success\"));\n        window.location.reload();\n      });\n\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: true,\n        error: false\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.uploadAllFile = function () {\n      var allFiles = [];\n\n      _this.state.files.map(function (item) {\n        allFiles.push(_objectSpread(_objectSpread({}, item), {}, {\n          uploading: true,\n          error: false\n        }));\n        return item;\n      });\n\n      _this.setState({\n        files: [].concat(allFiles),\n        queProgress: 35\n      });\n    };\n\n    _this.handleSingleCancel = function (index) {\n      var allFiles = _toConsumableArray(_this.state.files);\n\n      var file = _this.state.files[index];\n      allFiles[index] = _objectSpread(_objectSpread({}, file), {}, {\n        uploading: false,\n        error: true\n      });\n\n      _this.setState({\n        files: _toConsumableArray(allFiles)\n      });\n    };\n\n    _this.fileUploadBlob = function () {\n      var url = ConstantList.API_ENPOINT + \"/api/users/updateavatar\";\n      var formData = new FormData();\n      formData.set('uploadfile', _this.state.blobValue); //formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          'Content-Type': 'image/jpg'\n        }\n      };\n      return axios.post(url, formData, config).then(function (response) {\n        var user = response.data;\n\n        _this.setState({\n          user: user\n        }); //console.log(user);\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UploadImage, [{\n    key: \"makeClientCrop\",\n    value: function () {\n      var _makeClientCrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(crop) {\n        var croppedImageUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(this.imageRef && crop.width && crop.height)) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.next = 3;\n                return this.getCroppedImg(this.imageRef, crop, 'newFile.jpeg');\n\n              case 3:\n                croppedImageUrl = _context.sent;\n                this.setState({\n                  croppedImageUrl\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function makeClientCrop(_x) {\n        return _makeClientCrop.apply(this, arguments);\n      }\n\n      return makeClientCrop;\n    }()\n  }, {\n    key: \"getCroppedImg\",\n    value: function getCroppedImg(image, crop, fileName) {\n      var _this2 = this;\n\n      var canvas = document.createElement('canvas');\n      var scaleX = image.naturalWidth / image.width;\n      var scaleY = image.naturalHeight / image.height;\n      canvas.width = crop.width;\n      canvas.height = crop.height;\n      var ctx = canvas.getContext('2d');\n      ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n      return new Promise(function (resolve, reject) {\n        canvas.toBlob(function (blob) {\n          if (!blob) {\n            //reject(new Error('Canvas is empty'));\n            console.error('Canvas is empty');\n            return;\n          }\n\n          blob.name = fileName;\n          window.URL.revokeObjectURL(_this2.fileUrl);\n          _this2.fileUrl = window.URL.createObjectURL(blob);\n\n          _this2.setState({\n            blobValue: blob\n          });\n\n          resolve(_this2.fileUrl);\n        }, 'image/jpeg');\n      });\n    }\n  }, {\n    key: \"fileUpload\",\n    value: function fileUpload(file) {\n      var url = this.props.uploadUrl;\n      var formData = new FormData();\n      formData.append('uploadfile', file); //Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      return axios.post(url, formData, config);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open,\n          user = _this$props.user,\n          handleUpdate = _this$props.handleUpdate;\n      var _this$state = this.state,\n          dragClass = _this$state.dragClass,\n          files = _this$state.files,\n          queProgress = _this$state.queProgress;\n      var isEmpty = files.length === 0;\n      var _this$state2 = this.state,\n          crop = _this$state2.crop,\n          croppedImageUrl = _this$state2.croppedImageUrl,\n          src = _this$state2.src;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperProps: {\n          style: {\n            width: 500,\n            maxHeight: 800,\n            alignContent: 'center' //backgroundColor: 'Blue',\n            //color:'black'\n\n          }\n        },\n        PaperComponent: PaperComponent,\n        maxWidth: 'md',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }\n      }, t(\"general.upload\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-form m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, this.state.isEmpty ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\".concat(dragClass, \" upload-drop-box flex flex-center flex-middle\"),\n        onDragEnter: this.handleDragStart,\n        onDragOver: this.handleDragOver,\n        onDrop: this.handleDrop,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 17\n        }\n      }, this.state.isEmpty ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }\n      }, \"Drop your files here\") : /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 23\n        }\n      }, files.length, \" file\", files.length > 1 ? \"s\" : \"\", \" selected...\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-wrap mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"upload-single-file\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        className: \"capitalize\",\n        component: \"span\",\n        variant: \"contained\",\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"pr-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 25\n        }\n      }, \"cloud_upload\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }\n      }, t('general.select_file'))))), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"display-none\",\n        onChange: this.handleFileSelect,\n        id: \"upload-single-file\",\n        type: \"file\",\n        accept: \"image/*\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 19\n        }\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, this.state.src && /*#__PURE__*/React.createElement(ReactCrop, {\n        style: {\n          maxWidth: '100%',\n          maxHeight: 400,\n          alignContent: 'center'\n        },\n        src: this.state.src,\n        crop: this.state.crop,\n        onImageLoaded: this.onImageLoaded,\n        onComplete: this.onCropComplete,\n        onChange: this.onCropChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-8 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose(_this3.state.user);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }\n      }, t('general.close')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-32 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return handleUpdate(_this3.state.blobValue);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }\n      }, t('general.update'))));\n    }\n  }]);\n\n  return UploadImage;\n}(React.Component);\n\nexport default UploadImage;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/IntroduceTheProgram/UploadImage.jsx"],"names":["Fab","Icon","Card","Grid","Divider","Button","DialogActions","Dialog","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FormControl","Select","Draggable","Paper","Breadcrumb","SimpleCard","EgretProgressBar","axios","ConstantList","ReactCrop","PaperComponent","props","UploadImage","state","dragClass","files","statusList","isEmpty","src","crop","unit","width","height","blobValue","contentType","onImageLoaded","image","imageRef","onCropComplete","makeClientCrop","onCropChange","percentCrop","setState","handleFileUploadOnSelect","e","target","length","reader","FileReader","addEventListener","result","readAsDataURL","handleFileSelect","handleDragOver","event","preventDefault","handleDrop","persist","dataTransfer","handleDragStart","handleSingleRemove","index","splice","handleAllRemove","uploadSingleFile","t","allFiles","file","fileUpload","then","res","alert","window","location","reload","uploading","error","uploadAllFile","map","item","push","queProgress","handleSingleCancel","fileUploadBlob","url","API_ENPOINT","formData","FormData","set","config","headers","post","response","user","data","getCroppedImg","croppedImageUrl","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","console","name","URL","revokeObjectURL","fileUrl","createObjectURL","uploadUrl","append","i18n","handleClose","handleSelect","selectedItem","open","handleUpdate","style","maxHeight","alignContent","cursor","maxWidth"],"mappings":"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","sourcesContent":["import { Fab, Icon, Card, Grid, Divider, Button, DialogActions, Dialog } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\r\nimport axios from \"axios\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport '../../../styles/views/_style.scss';\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass UploadImage extends React.Component {\r\n  // state = {\r\n  //   dragClass: \"\",\r\n  //   files: [],\r\n  //   statusList: [],\r\n  //   queProgress: 0\r\n  // };\r\n\r\n  state = {\r\n    dragClass: \"\",\r\n    files: [],\r\n    statusList: [],\r\n    isEmpty: true,\r\n    src: null,\r\n    crop: {\r\n      unit: '%',\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n    blobValue: null,\r\n    contentType: null\r\n  }\r\n  // If you setState the crop in here you should return false.\r\n  onImageLoaded = image => {\r\n    this.imageRef = image;\r\n  };\r\n\r\n  onCropComplete = crop => {\r\n    this.makeClientCrop(crop);\r\n  };\r\n\r\n  onCropChange = (crop, percentCrop) => {\r\n    this.setState({ crop });\r\n  };\r\n\r\n  async makeClientCrop(crop) {\r\n    if (this.imageRef && crop.width && crop.height) {\r\n      const croppedImageUrl = await this.getCroppedImg(\r\n        this.imageRef,\r\n        crop,\r\n        'newFile.jpeg'\r\n      );\r\n      this.setState({ croppedImageUrl });\r\n    }\r\n  }\r\n\r\n  getCroppedImg(image, crop, fileName) {\r\n    const canvas = document.createElement('canvas');\r\n    const scaleX = image.naturalWidth / image.width;\r\n    const scaleY = image.naturalHeight / image.height;\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x * scaleX,\r\n      crop.y * scaleY,\r\n      crop.width * scaleX,\r\n      crop.height * scaleY,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(blob => {\r\n        if (!blob) {\r\n          //reject(new Error('Canvas is empty'));\r\n          console.error('Canvas is empty');\r\n          return;\r\n        }\r\n        blob.name = fileName;\r\n        window.URL.revokeObjectURL(this.fileUrl);\r\n        this.fileUrl = window.URL.createObjectURL(blob);\r\n        this.setState({ blobValue: blob });\r\n        resolve(this.fileUrl);\r\n      }, 'image/jpeg');\r\n    });\r\n  }\r\n  handleFileUploadOnSelect = e => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n  }\r\n  // handleFileUploadOnSelect = event => {\r\n  //   let files = event.target.files;\r\n  //   this.fileUpload(files[0]).then(res => {\r\n  //     alert(\"File uploaded successfully.\")\r\n  //   });\r\n  // }\r\n  handleFileSelect = e => {\r\n\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () =>\r\n        this.setState({ src: reader.result, isEmpty: false })\r\n      );\r\n      reader.readAsDataURL(e.target.files[0]);\r\n    }\r\n    // let { t } = this.props;\r\n    // let files = event.target.files;\r\n    // let list = [];\r\n    // console.log(files);\r\n    // let acceptType = this.props.acceptType.split(\";\");\r\n    // for (const iterator of files) {\r\n    //   if (iterator.type.split(\"/\").length <= 0 || acceptType.indexOf(iterator.type.split(\"/\")[1]) < 0) {\r\n    //     console.log(acceptType);\r\n    //     console.log(iterator.type.split(\"/\"));\r\n    //     alert(t(\"general.type_not_accepted\"));\r\n    //     break;\r\n    //   }\r\n    //   list.push({\r\n    //     file: iterator,\r\n    //     uploading: false,\r\n    //     error: false,\r\n    //     progress: 0\r\n    //   });\r\n    // }\r\n\r\n    // this.setState({\r\n    //   files: [...list]\r\n    // });\r\n  };\r\n\r\n  handleDragOver = event => {\r\n    event.preventDefault();\r\n    this.setState({ dragClass: \"drag-shadow\" });\r\n  };\r\n  handleDrop = event => {\r\n    event.preventDefault();\r\n    event.persist();\r\n    let files = event.dataTransfer.files;\r\n    // this.fileUpload(files[0]).then(res => {\r\n    //   let url =ConstantList.API_ENPOINT+\"/public/file/downloadbyid/\"+res.data.id;\r\n    //   alert(url);\r\n    //   this.setState({imageUrl:url})\r\n    //   console.log(url);\r\n    //   //alert(\"File uploaded successfully.\")\r\n    // });\r\n    if (files && files.length > 0) {\r\n      const reader = new FileReader();\r\n      reader.addEventListener('load', () =>\r\n        this.setState({ src: reader.result })\r\n      );\r\n      reader.readAsDataURL(files[0]);\r\n    }\r\n    return false;\r\n  };\r\n  handleDragStart = event => {\r\n    this.setState({ dragClass: \"drag-shadow\" });\r\n  };\r\n\r\n  handleSingleRemove = index => {\r\n    let files = [...this.state.files];\r\n    files.splice(index, 1);\r\n    this.setState({\r\n      files: [...files]\r\n    });\r\n  };\r\n\r\n  handleAllRemove = () => {\r\n    this.setState({ files: [] });\r\n  };\r\n  fileUpload(file) {\r\n    const url = this.props.uploadUrl;\r\n    let formData = new FormData();\r\n    formData.append('uploadfile', file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n    return axios.post(url, formData, config)\r\n  }\r\n\r\n  uploadSingleFile = index => {\r\n    let { t } = this.props;\r\n    let allFiles = [...this.state.files];\r\n    let file = this.state.files[index];\r\n    this.fileUpload(file.file).then(res => {\r\n      alert(t(\"general.success\"))\r\n      window.location.reload();\r\n    })\r\n\r\n    allFiles[index] = { ...file, uploading: true, error: false };\r\n\r\n    this.setState({\r\n      files: [...allFiles]\r\n    });\r\n  };\r\n\r\n  uploadAllFile = () => {\r\n    let allFiles = [];\r\n\r\n    this.state.files.map(item => {\r\n      allFiles.push({\r\n        ...item,\r\n        uploading: true,\r\n        error: false\r\n      });\r\n\r\n      return item;\r\n    });\r\n\r\n    this.setState({\r\n      files: [...allFiles],\r\n      queProgress: 35\r\n    });\r\n  };\r\n\r\n  handleSingleCancel = index => {\r\n    let allFiles = [...this.state.files];\r\n    let file = this.state.files[index];\r\n\r\n    allFiles[index] = { ...file, uploading: false, error: true };\r\n\r\n    this.setState({\r\n      files: [...allFiles]\r\n    });\r\n  };\r\n  fileUploadBlob = () => {\r\n    const url = ConstantList.API_ENPOINT + \"/api/users/updateavatar\";\r\n    let formData = new FormData();\r\n    formData.set('uploadfile', this.state.blobValue)\r\n    //formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'image/jpg'\r\n      }\r\n    }\r\n    return axios.post(url, formData, config).then(response => {\r\n      let user = response.data;\r\n      this.setState({ user: user });\r\n      //console.log(user);\r\n    });\r\n  }\r\n  render() {\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open, user, handleUpdate } = this.props;\r\n    let { dragClass, files, queProgress } = this.state;\r\n\r\n    let isEmpty = files.length === 0;\r\n    const { crop, croppedImageUrl, src } = this.state;\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} PaperProps={{\r\n        style: {\r\n          width: 500,\r\n          maxHeight: 800,\r\n          alignContent: 'center'\r\n          //backgroundColor: 'Blue',\r\n          //color:'black'\r\n        },\r\n      }} PaperComponent={PaperComponent} maxWidth={'md'} fullWidth >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <span className=\"styleColor\">{t(\"general.upload\")}</span>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className=\"upload-form m-sm-30\">\r\n            {this.state.isEmpty ? (\r\n              <div>\r\n                <div\r\n                  className={`${dragClass} upload-drop-box flex flex-center flex-middle`}\r\n                  onDragEnter={this.handleDragStart}\r\n                  onDragOver={this.handleDragOver}\r\n                  onDrop={this.handleDrop}\r\n                >\r\n                  {this.state.isEmpty ? (\r\n                    <span>Drop your files here</span>\r\n                  ) : (\r\n                      <h5 className=\"m-0\">\r\n                        {files.length} file{files.length > 1 ? \"s\" : \"\"} selected...\r\n                      </h5>\r\n                    )}\r\n                </div>\r\n                <div className=\"flex flex-wrap mb-20\">\r\n                  <label htmlFor=\"upload-single-file\">\r\n                    <Button\r\n                      size=\"small\"\r\n                      className=\"capitalize\"\r\n                      component=\"span\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      <div className=\"flex flex-middle\">\r\n                        <Icon className=\"pr-8\">cloud_upload</Icon>\r\n                        <span>{t('general.select_file')}</span>\r\n                      </div>\r\n                    </Button>\r\n                  </label>\r\n                  <input\r\n                    className=\"display-none\"\r\n                    onChange={this.handleFileSelect}\r\n                    id=\"upload-single-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            ) : (\r\n                <div>\r\n                  {this.state.src && (\r\n                    <ReactCrop style={{ maxWidth: '100%', maxHeight: 400, alignContent: 'center' }}\r\n                      src={this.state.src}\r\n                      crop={this.state.crop}\r\n                      onImageLoaded={this.onImageLoaded}\r\n                      onComplete={this.onCropComplete}\r\n                      onChange={this.onCropChange}\r\n                    />\r\n                  )}\r\n                </div>\r\n              )}\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className=\"mb-16 mr-8 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => handleClose(this.state.user)}>{t('general.close')}\r\n          </Button>\r\n          <Button\r\n            className=\"mb-16 mr-32 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => handleUpdate(this.state.blobValue)}>{t('general.update')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nexport default UploadImage;"]},"metadata":{},"sourceType":"module"}