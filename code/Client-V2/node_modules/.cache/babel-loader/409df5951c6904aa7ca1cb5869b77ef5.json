{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrgRoundRegister\\\\EQAHealthOrgRoundRegisterEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, Checkbox, FormHelperText, FormControlLabel, Switch, InputAdornment, Icon, IconButton } from \"@material-ui/core\";\nimport { TabList, Tabs, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\nimport { getByPage, deleteItem, saveItem, getItemById, getTubeById } from \"./EQAHealthOrgRoundRegisterService\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport EQARoundSearchDialog from \"./EQARoundSearchDialog\";\nimport EQAHealthOrgSearchDialog from \"./EQAHealthOrgSearchDialog\";\nimport EQASampleSetSearchDialog from \"./EQASampleSetSearchDialog\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport LocalConstants from \"./Constants\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { searchByPage as searchByPageSet } from \"../EQASampleSet/EQASampleSetService\";\nimport { toast } from 'react-toastify';\nimport moment from \"moment\";\nimport '../../../styles/views/_style.scss';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing.unit * 2\n    }\n  };\n};\n\nvar EQAHealthOrgRoundRegisterEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQAHealthOrgRoundRegisterEditorDialog, _Component);\n\n  var _super = _createSuper(EQAHealthOrgRoundRegisterEditorDialog);\n\n  function EQAHealthOrgRoundRegisterEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, EQAHealthOrgRoundRegisterEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      status: 0,\n      healthOrg: null,\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      eqaSampleTubes: [],\n      eqaRoundId: \"\",\n      isView: false,\n      sampleRef: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n\n      if (source === \"hasResult\") {\n        _this.setState({\n          hasErrorResult: false\n        });\n      }\n\n      if (source === \"sampleRef\") {\n        _this.setState({\n          sampleRef: event.target.checked\n        });\n      }\n    };\n\n    _this.handleFormSubmit = function () {\n      var t = _this.props.t;\n\n      if (_this.state.hasResult == null) {\n        _this.setState({\n          hasErrorResult: true\n        });\n\n        return;\n      } else {\n        saveItem(_objectSpread({}, _this.state)).then(function (respone) {\n          if (respone.data.isDuplicateHealthOrg) {\n            toast.warning(t('EQAHealthOrgRoundRegister.notify.duplicatedHealthOrg'));\n          } else if (!respone.data.isDuplicateHealthOrg && respone.status == 200) {\n            toast.success(t('EQAHealthOrgRoundRegister.notify.updateSuccess')); // this.props.handleOKEditClose();\n          } else {\n            toast.error(t('EQAHealthOrgRoundRegister.notify.addFail'));\n          }\n        });\n      }\n    };\n\n    _this.handleRoundSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenRoundSearchDialog: false\n      });\n    };\n\n    _this.handleSelectRound = function (item) {\n      //alert('Test');\n      _this.setState({\n        round: item\n      });\n\n      if (item != null) {\n        _this.setState({\n          eqaRoundId: item.id\n        });\n      }\n\n      _this.handleRoundSearchDialogClose();\n    };\n\n    _this.handleHealthOrgSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgSearchDialog: false\n      });\n    };\n\n    _this.handleSelectHealthOrg = function (item) {\n      //alert('Test');\n      _this.setState({\n        healthOrg: item\n      });\n\n      _this.handleHealthOrgSearchDialogClose();\n    };\n\n    _this.handleSampleSetSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenSampleSetSearchDialog: false\n      });\n    };\n\n    _this.handleSelectSampleSet = function (item) {\n      //alert('Test');\n      _this.setState({\n        sampleSet: item,\n        sampleSetRes: item\n      });\n\n      _this.handleSampleSetSearchDialogClose();\n    };\n\n    _this.handleDateChange = function (date, name) {\n      _this.setState({\n        [name]: date\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAHealthOrgRoundRegisterEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          roundId = _this$props.roundId;\n      this.setState(_objectSpread({}, item));\n\n      if (item != null && item.sampleTransferStatus != null) {\n        if (item.sampleTransferStatus == 2 || item.sampleTransferStatus == 3) {\n          this.setState({\n            isView: true\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getTubeById(this.props.item.id).then(function (_ref) {\n        var data = _ref.data;\n        var eqaSampleTubeMain = [];\n        var eqaSampleTubeReference = [];\n        data.forEach(function (element) {\n          if (element != null) {\n            if (element.type == 0) {\n              eqaSampleTubeReference.push(element);\n            } else {\n              eqaSampleTubeMain.push(element);\n            }\n          }\n        });\n\n        _this2.setState({\n          eqaSampleTubes: data,\n          eqaSampleTubeReference,\n          eqaSampleTubeMain\n        });\n\n        var round = _this2.state.round;\n\n        if (round != null) {\n          _this2.setState({\n            eqaRoundId: round.id\n          });\n        }\n      });\n      this.setState({\n        hasErrorResult: false\n      }, function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          id = _this$state.id,\n          shouldOpenHealthOrgSearchDialog = _this$state.shouldOpenHealthOrgSearchDialog,\n          healthOrg = _this$state.healthOrg,\n          round = _this$state.round,\n          eqaRoundId = _this$state.eqaRoundId,\n          sampleSet = _this$state.sampleSet,\n          status = _this$state.status,\n          feeStatus = _this$state.feeStatus,\n          hasErrorResult = _this$state.hasErrorResult,\n          hasResult = _this$state.hasResult,\n          sampleRef = _this$state.sampleRef,\n          isView = _this$state.isView;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          item = _this$props2.item;\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000\n      };\n      var searchObjectSet = {\n        pageIndex: 0,\n        pageSize: 100,\n        eqaRoundId\n      };\n      var sampleColumns = [{\n        title: t(\"SampleManagement.sample-list.Code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"SampleManagement.sample-list.Result.title\"),\n        field: \"eqaSample.result\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.eqaSample.result == 1 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 11\n            }\n          }, t(\"SampleManagement.sample-list.Result.positive\")) : rowData.eqaSample.result == 0 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 11\n            }\n          }, t(\"SampleManagement.sample-list.Result.indertermine\")) : rowData.eqaSample.result == -1 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 11\n            }\n          }, t(\"SampleManagement.sample-list.Result.negative\")) : /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 14\n            }\n          }, t(\"SampleManagement.sample-list.Result.none\"));\n        }\n      }, // {\n      //   title: t(\"SampleManagement.sample-list.AdditiveThrombin\"), field: \"additiveThrombin\", width: \"150\"\n      // },\n      {\n        title: t(\"SampleManagement.sample-list.InactiveVirus.title\"),\n        field: \"inactiveVirus\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.eqaSample.inactiveVirus == true ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }\n          }, t(\"SampleManagement.sample-list.InactiveVirus.Yes\")) : /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 13\n            }\n          }, t(\"SampleManagement.sample-list.InactiveVirus.No\"));\n        }\n      }, {\n        title: t(\"SampleManagement.sample-list.dilutionLevel\"),\n        field: \"eqaSample.dilutionLevel\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"SampleManagement.sample-list.dilution\"),\n        field: \"eqaSample.dilution\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"SampleManagement.sample-list.performer\"),\n        field: \"eqaSample.personnel.displayName\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"SampleManagement.sample-list.endDate\"),\n        field: \"\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.eqaSample.endDate ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 11\n            }\n          }, moment(rowData.eqaSample.endDate).format('DD/MM/YYYY')) : \"\";\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        scroll: 'paper',\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }\n      }, \" \", (id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"EQAHealthOrgRoundRegister.title\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 114\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"stylePlaceholder\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 26\n          }\n        }, t(\"EQAHealthOrgRoundRegister.HealthOrgName\")),\n        placeholder: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        id: \"healthOrg\",\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        value: healthOrg != null ? healthOrg.name : '',\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 17\n        }\n      })), shouldOpenHealthOrgSearchDialog && /*#__PURE__*/React.createElement(EQAHealthOrgSearchDialog, {\n        open: this.state.shouldOpenHealthOrgSearchDialog,\n        handleSelect: this.handleSelectHealthOrg,\n        selectedItem: healthOrg != null ? healthOrg : {},\n        handleClose: this.handleHealthOrgSearchDialogClose,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(AsynchronousAutocomplete, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 49\n          }\n        }, \" * \"), t(\"EQARound.title\")),\n        size: \"small\",\n        variant: \"outlined\",\n        searchFunction: searchByPageEQARound,\n        searchObject: searchObject,\n        defaultValue: round,\n        value: round,\n        disabled: isView,\n        displayLable: 'code',\n        valueTextValidator: round,\n        onSelect: this.handleSelectRound,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 17\n        }\n      })), round != null && round.id != '' && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(AsynchronousAutocomplete, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 28\n          }\n        }, t(\"EQAHealthOrgRoundRegister.SetName\")),\n        size: \"small\",\n        variant: \"outlined\",\n        searchFunction: searchByPageSet,\n        searchObject: searchObjectSet,\n        defaultValue: sampleSet,\n        value: sampleSet // disabled={isView}\n        ,\n        displayLable: 'name',\n        valueTextValidator: sampleSet,\n        onSelect: this.handleSelectSampleSet,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 19\n        }\n      })), round != null && round.id != '' && sampleSet != null && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 28\n          }\n        }, t('EQAHealthOrgRoundRegister.sendMore')),\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          checked: sampleRef,\n          onChange: function onChange(sampleRef) {\n            return _this3.handleChange(sampleRef, 'sampleRef');\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 30\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        error: hasErrorResult,\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"hasResult\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 75\n        }\n      }, \" * \"), t(\"EQAHealthOrgRoundRegister.HasResult.title\"))), /*#__PURE__*/React.createElement(Select // name=\"hasResult\"\n      , {\n        value: hasResult,\n        onChange: function onChange(event) {\n          return _this3.handleChange(event, \"hasResult\");\n        } // input={<Input id=\"hasResult\" />}\n        ,\n        inputProps: {\n          id: \"hasResult\",\n          name: \"hasResult\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.HasResult.No\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.HasResult.Yes\"))), hasErrorResult && /*#__PURE__*/React.createElement(FormHelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 38\n        }\n      }, t(\"general.errorMessages_required\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"feeStatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 75\n        }\n      }, \" * \"), t(\"EQAHealthOrgRoundRegister.FeeStatus.title\"))), /*#__PURE__*/React.createElement(Select // name=\"feeStatus\"\n      , {\n        value: feeStatus,\n        onChange: function onChange(event) {\n          return _this3.handleChange(event);\n        } // input={<Input id=\"feeStatus\" />}\n        ,\n        inputProps: {\n          id: \"feeStatus\",\n          name: \"feeStatus\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.No\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.Yes\"))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 49\n        }\n      }, t(\"EQAHealthOrgRoundRegister.status\"))), /*#__PURE__*/React.createElement(Select // name=\"status\"\n      , {\n        value: status,\n        defaultValue: {\n          value: 0\n        },\n        onChange: function onChange(event) {\n          return _this3.handleChange(event);\n        } // input={<Input id=\"status\" />}\n        ,\n        inputProps: {\n          id: \"status\",\n          name: \"status\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: LocalConstants.EQAHealthOrgRoundRegister_Value.new,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.Status.New\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: LocalConstants.EQAHealthOrgRoundRegister_Value.confirmed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.Status.Confirmed\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: LocalConstants.EQAHealthOrgRoundRegister_Value.cancel_Registration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 21\n        }\n      }, t(\"EQAHealthOrgRoundRegister.Status.Cancel_Registration\"))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Tabs, {\n        defaultIndex: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TabList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Tab, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 26\n        }\n      }, t(\"EQAHealthOrgRoundRegister.tubeMain\"))), this.state.eqaSampleTubeReference != null && this.state.eqaSampleTubeReference.length > 0 && /*#__PURE__*/React.createElement(Tab, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 117\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 122\n        }\n      }, t(\"EQAHealthOrgRoundRegister.tubeReference\")))), /*#__PURE__*/React.createElement(TabPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"\",\n        data: this.state.eqaSampleTubeMain,\n        columns: sampleColumns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(TabPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"\",\n        data: this.state.eqaSampleTubeReference,\n        columns: sampleColumns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 21\n        }\n      })))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }\n      }, t('general.cancel')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }\n      }, t('general.save')))));\n    }\n  }]);\n\n  return EQAHealthOrgRoundRegisterEditorDialog;\n}(Component);\n\nexport default EQAHealthOrgRoundRegisterEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","Checkbox","FormHelperText","FormControlLabel","Switch","InputAdornment","Icon","IconButton","TabList","Tabs","Tab","TabPanel","ValidatorForm","TextValidator","TextField","getByPage","deleteItem","saveItem","getItemById","getTubeById","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","EQARoundSearchDialog","EQAHealthOrgSearchDialog","EQASampleSetSearchDialog","DialogContent","DialogTitle","Draggable","Paper","Input","InputLabel","MenuItem","FormControl","Select","LocalConstants","DialogActions","AsynchronousAutocomplete","searchByPage","searchByPageEQARound","searchByPageSet","toast","moment","configure","autoClose","draggable","limit","PaperComponent","props","styles","theme","root","display","flexWrap","formControl","margin","spacing","unit","minWidth","selectEmpty","marginTop","EQAHealthOrgRoundRegisterEditorDialog","state","status","healthOrg","shouldOpenSearchDialog","shouldOpenConfirmationDialog","eqaSampleTubes","eqaRoundId","isView","sampleRef","handleChange","event","source","persist","setState","target","name","value","hasErrorResult","checked","handleFormSubmit","t","hasResult","then","respone","data","isDuplicateHealthOrg","warning","success","error","handleRoundSearchDialogClose","shouldOpenRoundSearchDialog","handleSelectRound","item","round","id","handleHealthOrgSearchDialogClose","shouldOpenHealthOrgSearchDialog","handleSelectHealthOrg","handleSampleSetSearchDialogClose","shouldOpenSampleSetSearchDialog","handleSelectSampleSet","sampleSet","sampleSetRes","handleDateChange","date","open","handleClose","roundId","sampleTransferStatus","eqaSampleTubeMain","eqaSampleTubeReference","forEach","element","type","push","feeStatus","handleOKEditClose","i18n","searchObject","pageIndex","pageSize","searchObjectSet","sampleColumns","title","field","align","width","headerStyle","paddingLeft","paddingRight","cellStyle","textAlign","render","rowData","eqaSample","result","inactiveVirus","endDate","format","cursor","position","right","top","overflowY","flexDirection","color","EQAHealthOrgRoundRegister_Value","new","confirmed","cancel_Registration","length","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","search","rowStyle","backgroundColor","tableData","padding","toolbar","body","emptyDataSourceMessage","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  Switch, InputAdornment,\r\n  Icon, IconButton\r\n} from \"@material-ui/core\";\r\nimport { TabList, Tabs, Tab, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\r\nimport { getByPage, deleteItem, saveItem, getItemById, getTubeById } from \"./EQAHealthOrgRoundRegisterService\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport EQARoundSearchDialog from \"./EQARoundSearchDialog\";\r\nimport EQAHealthOrgSearchDialog from \"./EQAHealthOrgSearchDialog\";\r\nimport EQASampleSetSearchDialog from \"./EQASampleSetSearchDialog\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport LocalConstants from \"./Constants\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\nimport { searchByPage as searchByPageSet } from \"../EQASampleSet/EQASampleSetService\";\r\nimport { toast } from 'react-toastify';\r\nimport moment from \"moment\";\r\nimport '../../../styles/views/_style.scss';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 120\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2\r\n  }\r\n});\r\nclass EQAHealthOrgRoundRegisterEditorDialog extends Component {\r\n  state = {\r\n    status: 0,\r\n    healthOrg: null,\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    eqaSampleTubes: [],\r\n    eqaRoundId: \"\",\r\n    isView: false,\r\n    sampleRef: false\r\n  };\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n    if (source === \"hasResult\") {\r\n      this.setState({ hasErrorResult: false });\r\n    }\r\n    if (source === \"sampleRef\") {\r\n      this.setState({ sampleRef: event.target.checked });\r\n    }\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { t } = this.props;\r\n    if (this.state.hasResult == null) {\r\n      this.setState({ hasErrorResult: true });\r\n      return\r\n    } else {\r\n      saveItem({ ...this.state }).then((respone) => {\r\n\r\n        if (respone.data.isDuplicateHealthOrg) {\r\n          toast.warning(t('EQAHealthOrgRoundRegister.notify.duplicatedHealthOrg'));\r\n        }\r\n        else if (!respone.data.isDuplicateHealthOrg && respone.status == 200) {\r\n          toast.success(t('EQAHealthOrgRoundRegister.notify.updateSuccess'));\r\n          // this.props.handleOKEditClose();\r\n        } else {\r\n          toast.error(t('EQAHealthOrgRoundRegister.notify.addFail'));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRoundSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenRoundSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectRound = (item) => {\r\n    //alert('Test');\r\n    this.setState({ round: item });\r\n    if (item != null) {\r\n      this.setState({ eqaRoundId: item.id });\r\n    }\r\n    this.handleRoundSearchDialogClose();\r\n  }\r\n  componentWillMount() {\r\n    let { open, handleClose, item, roundId } = this.props;\r\n    this.setState({\r\n      ...item\r\n    });\r\n    if (item != null && item.sampleTransferStatus != null) {\r\n      if (item.sampleTransferStatus == 2 || item.sampleTransferStatus == 3) {\r\n        this.setState({ isView: true });\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    getTubeById(this.props.item.id).then(({ data }) => {\r\n      let eqaSampleTubeMain = [];\r\n      let eqaSampleTubeReference = [];\r\n      data.forEach(element => {\r\n        if (element != null) {\r\n          if (element.type == 0) {\r\n            eqaSampleTubeReference.push(element);\r\n          } else {\r\n            eqaSampleTubeMain.push(element);\r\n          }\r\n        }\r\n      });\r\n      this.setState({\r\n        eqaSampleTubes: data,\r\n        eqaSampleTubeReference,\r\n        eqaSampleTubeMain\r\n      })\r\n      let { round } = this.state;\r\n      if (round != null) {\r\n        this.setState({ eqaRoundId: round.id });\r\n      }\r\n    });\r\n    this.setState({\r\n      hasErrorResult: false\r\n    }, function () {\r\n    });\r\n  }\r\n  handleHealthOrgSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenHealthOrgSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectHealthOrg = (item) => {\r\n    //alert('Test');\r\n    this.setState({ healthOrg: item });\r\n    this.handleHealthOrgSearchDialogClose();\r\n  }\r\n\r\n  //Set mau\r\n  handleSampleSetSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSampleSetSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectSampleSet = (item) => {\r\n    //alert('Test');\r\n    this.setState({ sampleSet: item, sampleSetRes: item });\r\n    this.handleSampleSetSearchDialogClose();\r\n  }\r\n  handleDateChange = (date, name) => {\r\n    this.setState({\r\n      [name]: date\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      shouldOpenHealthOrgSearchDialog,\r\n      healthOrg,\r\n      round,\r\n      eqaRoundId,\r\n      sampleSet,\r\n      status,\r\n      feeStatus,\r\n      hasErrorResult,\r\n      hasResult,\r\n      sampleRef,\r\n      isView\r\n    } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n, item } = this.props;\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000 };\r\n    let searchObjectSet = { pageIndex: 0, pageSize: 100, eqaRoundId };\r\n    let sampleColumns = [\r\n      {\r\n        title: t(\"SampleManagement.sample-list.Code\"), field: \"code\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.Result.title\"), field: \"eqaSample.result\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => rowData.eqaSample.result == 1 ? (\r\n          <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\r\n            {t(\"SampleManagement.sample-list.Result.positive\")}\r\n          </small>\r\n        ) : rowData.eqaSample.result == 0 ? (\r\n          <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n            {t(\"SampleManagement.sample-list.Result.indertermine\")}\r\n          </small>\r\n        ) : rowData.eqaSample.result == -1 ? (\r\n          <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n            {t(\"SampleManagement.sample-list.Result.negative\")}\r\n          </small>\r\n        ) : (<small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n          {t(\"SampleManagement.sample-list.Result.none\")}\r\n        </small>\r\n              )\r\n      },\r\n      // {\r\n      //   title: t(\"SampleManagement.sample-list.AdditiveThrombin\"), field: \"additiveThrombin\", width: \"150\"\r\n      // },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.InactiveVirus.title\"), field: \"inactiveVirus\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => rowData.eqaSample.inactiveVirus == true ? (\r\n          <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\r\n            {t(\"SampleManagement.sample-list.InactiveVirus.Yes\")}\r\n          </small>\r\n        ) : (\r\n            <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n              {t(\"SampleManagement.sample-list.InactiveVirus.No\")}\r\n            </small>\r\n          )\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.dilutionLevel\"), field: \"eqaSample.dilutionLevel\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.dilution\"), field: \"eqaSample.dilution\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"175px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"175px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.performer\"), field: \"eqaSample.personnel.displayName\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"SampleManagement.sample-list.endDate\"), field: \"\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"175px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"175px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => rowData.eqaSample.endDate ? (\r\n          <span>{moment(rowData.eqaSample.endDate).format('DD/MM/YYYY')}</span>\r\n        ) : \"\"\r\n      },\r\n    ];\r\n    return (\r\n      <Dialog\r\n        scroll={'paper'}\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"lg\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\"> {(id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"EQAHealthOrgRoundRegister.title\")} </span>\r\n          <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              {/* <Grid item container spacing={2}> */}\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  className = \"stylePlaceholder\"\r\n                  label={<span className=\"font\">{t(\"EQAHealthOrgRoundRegister.HealthOrgName\")}</span>}\r\n                  placeholder={t(\"EQAHealthOrgRoundRegister.HealthOrgName\")}\r\n                  id=\"healthOrg\"\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  value={healthOrg != null ? healthOrg.name : ''}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              {shouldOpenHealthOrgSearchDialog && (\r\n                <EQAHealthOrgSearchDialog\r\n                  open={this.state.shouldOpenHealthOrgSearchDialog}\r\n                  handleSelect={this.handleSelectHealthOrg}\r\n                  selectedItem={healthOrg != null ? healthOrg : {}}\r\n                  handleClose={this.handleHealthOrgSearchDialogClose} t={t} i18n={i18n} />\r\n              )\r\n              }\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <AsynchronousAutocomplete\r\n                  label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"EQARound.title\")}\r\n                  </span>}\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  searchFunction={searchByPageEQARound}\r\n                  searchObject={searchObject}\r\n                  defaultValue={round}\r\n                  value={round}\r\n                  disabled={isView}\r\n                  displayLable={'code'}\r\n                  valueTextValidator={round}\r\n                  onSelect={this.handleSelectRound}\r\n                />\r\n              </Grid>\r\n              {round != null && round.id != '' && (\r\n                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                  <AsynchronousAutocomplete\r\n                    label={<span className=\"font\">{t(\"EQAHealthOrgRoundRegister.SetName\")}</span>}\r\n                    size=\"small\"\r\n                    variant = \"outlined\"\r\n                    searchFunction={searchByPageSet}\r\n                    searchObject={searchObjectSet}\r\n                    defaultValue={sampleSet}\r\n                    value={sampleSet}\r\n                    // disabled={isView}\r\n                    displayLable={'name'}\r\n                    valueTextValidator={sampleSet}\r\n                    onSelect={this.handleSelectSampleSet}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {round != null && round.id != '' && sampleSet != null && (\r\n                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                  <FormControlLabel\r\n                    label={<span className=\"font\">{t('EQAHealthOrgRoundRegister.sendMore')}</span>}\r\n                    control={<Checkbox checked={sampleRef}\r\n                      onChange={(sampleRef) =>\r\n                        this.handleChange(sampleRef, 'sampleRef')\r\n                      }\r\n                    />}\r\n\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {/* </Grid> */}\r\n              \r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <FormControl className=\"w-100\" error={hasErrorResult} size=\"small\" variant = \"outlined\">\r\n                  <InputLabel htmlFor=\"hasResult\">{<span className=\"font\"><span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"EQAHealthOrgRoundRegister.HasResult.title\")}\r\n                  </span>}</InputLabel>\r\n                  <Select\r\n                    // name=\"hasResult\"\r\n                    value={hasResult}\r\n                    onChange={event => this.handleChange(event, \"hasResult\")}\r\n                    // input={<Input id=\"hasResult\" />}\r\n                    inputProps ={{\r\n                      id: \"hasResult\",\r\n                      name: \"hasResult\"\r\n                    }\r\n                    }\r\n                  >\r\n                    <MenuItem value={false}>{t(\"EQAHealthOrgRoundRegister.HasResult.No\")}</MenuItem>\r\n                    <MenuItem value={true}>{t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")}</MenuItem>\r\n                  </Select>\r\n                  {hasErrorResult && <FormHelperText>{t(\"general.errorMessages_required\")}</FormHelperText>}\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <FormControl className=\"w-100\" size=\"small\" variant = \"outlined\">\r\n                  <InputLabel htmlFor=\"feeStatus\">{<span className=\"font\"><span style={{ color: \"red\" }}> * </span>\r\n                    {t(\"EQAHealthOrgRoundRegister.FeeStatus.title\")}\r\n                  </span>}</InputLabel>\r\n                  <Select\r\n                    // name=\"feeStatus\"\r\n                    value={feeStatus}\r\n                    onChange={event => this.handleChange(event)}\r\n                    // input={<Input id=\"feeStatus\" />}\r\n                    inputProps={{\r\n                      id:\"feeStatus\",\r\n                      name: \"feeStatus\"\r\n                    }}\r\n                  >\r\n                    <MenuItem value={0}>{t(\"EQAHealthOrgRoundRegister.FeeStatus.No\")}</MenuItem>\r\n                    <MenuItem value={1}>{t(\"EQAHealthOrgRoundRegister.FeeStatus.Yes\")}</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <FormControl className=\"w-100\" size=\"small\" variant = \"outlined\">\r\n                  <InputLabel htmlFor=\"status\">{<span className=\"font\">{t(\"EQAHealthOrgRoundRegister.status\")}</span>}</InputLabel>\r\n                  <Select\r\n                    // name=\"status\"\r\n                    value={status}\r\n                    defaultValue={{ value: 0 }}\r\n                    onChange={event => this.handleChange(event)}\r\n                    // input={<Input id=\"status\" />}\r\n                    inputProps={{\r\n                      id: \"status\",\r\n                      name:\"status\"\r\n                    }}  \r\n                  >\r\n                    <MenuItem value={LocalConstants.EQAHealthOrgRoundRegister_Value.new}>{t(\"EQAHealthOrgRoundRegister.Status.New\")}</MenuItem>\r\n                    <MenuItem value={LocalConstants.EQAHealthOrgRoundRegister_Value.confirmed} >{t(\"EQAHealthOrgRoundRegister.Status.Confirmed\")}</MenuItem>\r\n                    <MenuItem value={LocalConstants.EQAHealthOrgRoundRegister_Value.cancel_Registration} >{t(\"EQAHealthOrgRoundRegister.Status.Cancel_Registration\")}</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Tabs defaultIndex={0}>\r\n                  <TabList>\r\n                    <Tab><span className=\"styleColor\">{t(\"EQAHealthOrgRoundRegister.tubeMain\")}</span></Tab>\r\n                    {(this.state.eqaSampleTubeReference != null && this.state.eqaSampleTubeReference.length > 0) && <Tab><span className=\"styleColor\">{t(\"EQAHealthOrgRoundRegister.tubeReference\")}</span></Tab>}\r\n                    {/* <Tab>{t(\"EQAHealthOrgRoundRegister.tubeReference\")}</Tab> */}\r\n                  </TabList>\r\n                  <TabPanel>\r\n                    <MaterialTable\r\n                      title=\"\"\r\n                      data={this.state.eqaSampleTubeMain}\r\n                      columns={sampleColumns}\r\n                      parentChildData={(row, rows) => {\r\n                        var list = rows.find(a => a.id === row.parentId);\r\n                        return list;\r\n                      }}\r\n                      options={{\r\n                        selection: false,\r\n                        actionsColumnIndex: -1,\r\n                        paging: false,\r\n                        search: false,\r\n                        rowStyle: rowData => ({\r\n                          backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                        }),\r\n                        headerStyle: {\r\n                          backgroundColor: '#358600',\r\n                          color: '#fff',\r\n                        },\r\n                        padding: 'dense',\r\n                        toolbar: false\r\n                      }}\r\n                      localization={{\r\n                        body: {\r\n                          emptyDataSourceMessage: `${t(\r\n                            \"general.emptyDataMessageTable\"\r\n                          )}`,\r\n                        },\r\n              }}\r\n                    />\r\n                  </TabPanel>\r\n                  <TabPanel>\r\n                    <MaterialTable\r\n                      title=\"\"\r\n                      data={this.state.eqaSampleTubeReference}\r\n                      columns={sampleColumns}\r\n                      parentChildData={(row, rows) => {\r\n                        var list = rows.find(a => a.id === row.parentId);\r\n                        return list;\r\n                      }}\r\n                      options={{\r\n                        selection: false,\r\n                        actionsColumnIndex: -1,\r\n                        paging: false,\r\n                        search: false,\r\n                        rowStyle: (rowData, index) => ({\r\n                          backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                        }),\r\n                        headerStyle: {\r\n                          backgroundColor: '#358600',\r\n                          color: '#fff',\r\n                        },\r\n                        padding: 'dense',\r\n                        toolbar: false\r\n                      }}\r\n                      localization={{\r\n                        body: {\r\n                          emptyDataSourceMessage: `${t(\r\n                            \"general.emptyDataMessageTable\"\r\n                          )}`,\r\n                        },\r\n                      }}\r\n                    />\r\n                  </TabPanel>\r\n                </Tabs>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              className=\"mr-36 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => handleClose()}>{t('general.cancel')}\r\n            </Button>\r\n            <Button className=\"mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\">\r\n              {t('general.save')}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAHealthOrgRoundRegisterEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}