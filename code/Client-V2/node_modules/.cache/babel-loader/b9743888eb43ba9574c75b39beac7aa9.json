{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\EgretCustomizer\\\\Layout1Customizer.jsx\";\n\nimport React, { Fragment } from \"react\";\nimport { Tooltip, Radio, RadioGroup, FormGroup, Icon, Switch, Slider, FormControlLabel, FormControl, FormLabel, Paper } from \"@material-ui/core\";\nimport { get } from \"lodash\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\nvar sidebarBG = [\"/assets/images/sidebar/sidebar-bg-dark.jpg\", \"/assets/images/sidebar/sidebar-bg-light.jpg\"];\n\nvar Layout1Customizer = function Layout1Customizer(_ref) {\n  var settings = _ref.settings,\n      handleChange = _ref.handleChange,\n      handleControlChange = _ref.handleControlChange;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-16 mx-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Sidebar theme\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"colors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, mainSidebarThemes // .filter(c => themeColors[c].palette.type === \"dark\")\n  .map(function (color, i) {\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: i,\n      title: color,\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color\",\n      onClick: function onClick() {\n        return handleChange(\"layout1Settings.leftSidebar.theme\", color);\n      },\n      style: {\n        backgroundColor: themeColors[color].palette.primary.main\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, settings.layout1Settings.leftSidebar.theme === color && /*#__PURE__*/React.createElement(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: settings.themes[color].palette.type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-32 mx-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted mb-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Topbar theme\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"colors\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, topbarThemes.map(function (color, i) {\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: i,\n      title: color,\n      placement: \"top\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color\",\n      onClick: function onClick() {\n        return handleChange(\"layout1Settings.topbar.theme\", color);\n      },\n      style: {\n        backgroundColor: themeColors[color].palette.primary.main\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, settings.layout1Settings.topbar.theme === color && /*#__PURE__*/React.createElement(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"done\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: settings.themes[color].palette.type,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-12 mb-24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Sidebar mode\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    \"aria-label\": \"Sidebar\",\n    name: \"leftSidebar\",\n    value: settings.layout1Settings.leftSidebar.mode,\n    onChange: handleControlChange(\"layout1Settings.leftSidebar.mode\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"full\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 53\n      }\n    }),\n    label: \"Full\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"close\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 54\n      }\n    }),\n    label: \"Close\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"compact\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 24\n      }\n    }),\n    label: \"Compact\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-32 mx-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Sidebar background image\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"layout-boxes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, sidebarBG.map(function (bg, i) {\n    return /*#__PURE__*/React.createElement(BadgeSelected, {\n      key: i,\n      color: \"primary\",\n      className: \"layout-box\",\n      style: {\n        width: \"calc(25% - 8px)\"\n      },\n      badgeContent: /*#__PURE__*/React.createElement(Icon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, \"done\"),\n      invisible: settings.layout1Settings.leftSidebar.bgImgURL !== bg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      onClick: function onClick() {\n        return handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg);\n      },\n      style: {\n        height: \"160px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: bg,\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    })));\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-32 mx-12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-muted\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \"Sidebar background opacity\"), /*#__PURE__*/React.createElement(Slider, {\n    value: settings.layout1Settings.leftSidebar.bgOpacity,\n    onChange: function onChange(event, value) {\n      return handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value);\n    },\n    marks: true,\n    step: 0.02,\n    max: 1,\n    min: 0.5,\n    valueLabelDisplay: \"auto\",\n    \"aria-labelledby\": \"sidebar-bgOpacity\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-12 mb-24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Topbar\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: get(settings.layout1Settings.topbar, \"show\"),\n      onChange: handleControlChange(\"layout1Settings.topbar.show\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }),\n    label: \"Show\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Switch, {\n      checked: get(settings.layout1Settings.topbar, \"fixed\"),\n      onChange: handleControlChange(\"layout1Settings.topbar.fixed\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }),\n    label: \"Fixed\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Layout1Customizer;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/EgretLayout/SharedCompoents/EgretCustomizer/Layout1Customizer.jsx"],"names":["React","Fragment","Tooltip","Radio","RadioGroup","FormGroup","Icon","Switch","Slider","FormControlLabel","FormControl","FormLabel","Paper","get","themeColors","BadgeSelected","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","settings","handleChange","handleControlChange","map","color","i","backgroundColor","palette","primary","main","layout1Settings","leftSidebar","theme","themes","type","topbar","mode","bg","width","bgImgURL","height","bgOpacity","event","value"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  Tooltip,\n  Radio,\n  RadioGroup,\n  FormGroup,\n  Icon,\n  Switch,\n  Slider,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper\n} from \"@material-ui/core\";\nimport { get } from \"lodash\";\nimport { themeColors } from \"../../EgretTheme/themeColors\";\nimport BadgeSelected from \"./BadgeSelected\";\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\n\nconst sidebarBG = [\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\n];\n\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\n  return (\n    <Fragment>\n      <div className=\"mb-16 mx-12\">\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\n        <div className=\"colors\">\n          {mainSidebarThemes\n            // .filter(c => themeColors[c].palette.type === \"dark\")\n            .map((color, i) => (\n              <Tooltip key={i} title={color} placement=\"top\">\n                <div\n                  className=\"color\"\n                  onClick={() =>\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\n                  }\n                  style={{\n                    backgroundColor: themeColors[color].palette.primary.main\n                  }}\n                >\n                  {settings.layout1Settings.leftSidebar.theme === color && (\n                    <Icon>done</Icon>\n                  )}\n                  <div className={settings.themes[color].palette.type}></div>\n                </div>\n              </Tooltip>\n            ))}\n        </div>\n      </div>\n\n      <div className=\"mb-32 mx-12\">\n        <div className=\"text-muted mb-4\">Topbar theme</div>\n        <div className=\"colors\">\n          {topbarThemes\n            .map((color, i) => (\n              <Tooltip key={i} title={color} placement=\"top\">\n                <div\n                  className=\"color\"\n                  onClick={() =>\n                    handleChange(\"layout1Settings.topbar.theme\", color)\n                  }\n                  style={{\n                    backgroundColor: themeColors[color].palette.primary.main\n                  }}\n                >\n                  {settings.layout1Settings.topbar.theme === color && (\n                    <Icon>done</Icon>\n                  )}\n                  <div className={settings.themes[color].palette.type}></div>\n                </div>\n              </Tooltip>\n            ))}\n        </div>\n      </div>\n\n      <div className=\"mx-12 mb-24\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\n          <RadioGroup\n            aria-label=\"Sidebar\"\n            name=\"leftSidebar\"\n            value={settings.layout1Settings.leftSidebar.mode}\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\n          >\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\n            <FormControlLabel\n              value=\"compact\"\n              control={<Radio />}\n              label=\"Compact\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </div>\n\n      <div className=\"mb-32 mx-12\">\n        <div className=\"text-muted\">Sidebar background image</div>\n\n        <div className=\"layout-boxes\">\n          {sidebarBG.map((bg, i) => (\n            <BadgeSelected\n              key={i}\n              color=\"primary\"\n              className=\"layout-box\"\n              style={{ width: \"calc(25% - 8px)\" }}\n              badgeContent={<Icon>done</Icon>}\n              invisible={settings.layout1Settings.leftSidebar.bgImgURL !== bg}\n            >\n              <Paper\n                onClick={() =>\n                  handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\n                }\n                style={{ height: \"160px\" }}\n              >\n                <img src={bg} alt=\"\" />\n              </Paper>\n            </BadgeSelected>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"mb-32 mx-12\">\n        <div className=\"text-muted\">Sidebar background opacity</div>\n        <Slider\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\n          onChange={(event, value) =>\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\n          }\n          marks={true}\n          step={0.02}\n          max={1}\n          min={0.5}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"sidebar-bgOpacity\"\n        />\n      </div>\n\n      <div className=\"mx-12 mb-24\">\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">Topbar</FormLabel>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\n                />\n              }\n              label=\"Show\"\n            />\n\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\n                />\n              }\n              label=\"Fixed\"\n            />\n          </FormGroup>\n        </FormControl>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Layout1Customizer;\n"]},"metadata":{},"sourceType":"module"}