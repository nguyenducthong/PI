{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _TableCell = _interopRequireDefault(require(\"@material-ui/core/TableCell\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _parseISO = _interopRequireDefault(require(\"date-fns/parseISO\"));\n\nvar CommonValues = _interopRequireWildcard(require(\"../utils/common-values\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/* eslint-enable no-unused-vars */\n\n/* eslint-disable no-useless-escape */\n\n\nvar isoDateRegex = /^\\d{4}-(0[1-9]|1[0-2])-([12]\\d|0[1-9]|3[01])([T\\s](([01]\\d|2[0-3])\\:[0-5]\\d|24\\:00)(\\:[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3])\\:?([0-5]\\d)?)?)?$/;\n/* eslint-enable no-useless-escape */\n\nvar MTableCell = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(MTableCell, _React$Component);\n\n  var _super = _createSuper(MTableCell);\n\n  function MTableCell() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MTableCell);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"handleClickCell\", function (e) {\n      if (_this.props.columnDef.disableClick) {\n        e.stopPropagation();\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"getStyle\", function () {\n      var width = CommonValues.reducePercentsInCalc(_this.props.columnDef.tableData.width, _this.props.scrollWidth);\n      var cellStyle = {\n        color: \"inherit\",\n        width: width,\n        maxWidth: _this.props.columnDef.maxWidth,\n        minWidth: _this.props.columnDef.minWidth,\n        boxSizing: \"border-box\",\n        fontSize: \"inherit\",\n        fontFamily: \"inherit\",\n        fontWeight: \"inherit\"\n      };\n\n      if (typeof _this.props.columnDef.cellStyle === \"function\") {\n        cellStyle = (0, _objectSpread2[\"default\"])({}, cellStyle, _this.props.columnDef.cellStyle(_this.props.value, _this.props.rowData));\n      } else {\n        cellStyle = (0, _objectSpread2[\"default\"])({}, cellStyle, _this.props.columnDef.cellStyle);\n      }\n\n      if (_this.props.columnDef.disableClick) {\n        cellStyle.cursor = \"default\";\n      }\n\n      return (0, _objectSpread2[\"default\"])({}, _this.props.style, cellStyle);\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MTableCell, [{\n    key: \"getRenderValue\",\n    value: function getRenderValue() {\n      var dateLocale = this.props.columnDef.dateSetting && this.props.columnDef.dateSetting.locale ? this.props.columnDef.dateSetting.locale : undefined;\n\n      if (this.props.columnDef.emptyValue !== undefined && (this.props.value === undefined || this.props.value === null)) {\n        return this.getEmptyValue(this.props.columnDef.emptyValue);\n      }\n\n      if (this.props.columnDef.render) {\n        if (this.props.rowData) {\n          return this.props.columnDef.render(this.props.rowData, \"row\");\n        } else if (this.props.value) {\n          return this.props.columnDef.render(this.props.value, \"group\");\n        }\n      } else if (this.props.columnDef.type === \"boolean\") {\n        var style = {\n          textAlign: \"left\",\n          verticalAlign: \"middle\",\n          width: 48\n        };\n\n        if (this.props.value) {\n          return /*#__PURE__*/React.createElement(this.props.icons.Check, {\n            style: style\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(this.props.icons.ThirdStateCheck, {\n            style: style\n          });\n        }\n      } else if (this.props.columnDef.type === \"date\") {\n        if (this.props.value instanceof Date) {\n          return this.props.value.toLocaleDateString(dateLocale);\n        } else if (isoDateRegex.exec(this.props.value)) {\n          return (0, _parseISO[\"default\"])(this.props.value).toLocaleDateString(dateLocale);\n        } else {\n          return this.props.value;\n        }\n      } else if (this.props.columnDef.type === \"time\") {\n        if (this.props.value instanceof Date) {\n          return this.props.value.toLocaleTimeString();\n        } else if (isoDateRegex.exec(this.props.value)) {\n          return (0, _parseISO[\"default\"])(this.props.value).toLocaleTimeString(dateLocale);\n        } else {\n          return this.props.value;\n        }\n      } else if (this.props.columnDef.type === \"datetime\") {\n        if (this.props.value instanceof Date) {\n          return this.props.value.toLocaleString();\n        } else if (isoDateRegex.exec(this.props.value)) {\n          return (0, _parseISO[\"default\"])(this.props.value).toLocaleString(dateLocale);\n        } else {\n          return this.props.value;\n        }\n      } else if (this.props.columnDef.type === \"currency\") {\n        return this.getCurrencyValue(this.props.columnDef.currencySetting, this.props.value);\n      } else if (typeof this.props.value === \"boolean\") {\n        // To avoid forwardref boolean children.\n        return this.props.value.toString();\n      }\n\n      return this.props.value;\n    }\n  }, {\n    key: \"getEmptyValue\",\n    value: function getEmptyValue(emptyValue) {\n      if (typeof emptyValue === \"function\") {\n        return this.props.columnDef.emptyValue(this.props.rowData);\n      } else {\n        return emptyValue;\n      }\n    }\n  }, {\n    key: \"getCurrencyValue\",\n    value: function getCurrencyValue(currencySetting, value) {\n      if (currencySetting !== undefined) {\n        return new Intl.NumberFormat(currencySetting.locale !== undefined ? currencySetting.locale : \"en-US\", {\n          style: \"currency\",\n          currency: currencySetting.currencyCode !== undefined ? currencySetting.currencyCode : \"USD\",\n          minimumFractionDigits: currencySetting.minimumFractionDigits !== undefined ? currencySetting.minimumFractionDigits : 2,\n          maximumFractionDigits: currencySetting.maximumFractionDigits !== undefined ? currencySetting.maximumFractionDigits : 2\n        }).format(value !== undefined ? value : 0);\n      } else {\n        return new Intl.NumberFormat(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\"\n        }).format(value !== undefined ? value : 0);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          icons = _this$props.icons,\n          columnDef = _this$props.columnDef,\n          rowData = _this$props.rowData,\n          errorState = _this$props.errorState,\n          cellEditable = _this$props.cellEditable,\n          onCellEditStarted = _this$props.onCellEditStarted,\n          cellProps = (0, _objectWithoutProperties2[\"default\"])(_this$props, [\"icons\", \"columnDef\", \"rowData\", \"errorState\", \"cellEditable\", \"onCellEditStarted\"]);\n      var cellAlignment = columnDef.align !== undefined ? columnDef.align : [\"numeric\", \"currency\"].indexOf(this.props.columnDef.type) !== -1 ? \"right\" : \"left\";\n      var renderValue = this.getRenderValue();\n\n      if (cellEditable) {\n        renderValue = /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            borderBottom: \"1px dashed grey\",\n            cursor: \"pointer\",\n            width: \"max-content\"\n          },\n          onClick: function onClick(e) {\n            e.stopPropagation();\n            onCellEditStarted(_this2.props.rowData, _this2.props.columnDef);\n          }\n        }, renderValue);\n      }\n\n      return /*#__PURE__*/React.createElement(_TableCell[\"default\"], (0, _extends2[\"default\"])({\n        size: this.props.size\n      }, cellProps, {\n        style: this.getStyle(),\n        align: cellAlignment,\n        onClick: this.handleClickCell\n      }), this.props.children, renderValue);\n    }\n  }]);\n  return MTableCell;\n}(React.Component);\n\nexports[\"default\"] = MTableCell;\nMTableCell.defaultProps = {\n  columnDef: {},\n  value: undefined\n};\nMTableCell.propTypes = {\n  columnDef: _propTypes[\"default\"].object.isRequired,\n  value: _propTypes[\"default\"].any,\n  rowData: _propTypes[\"default\"].object,\n  errorState: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].bool])\n};","map":null,"metadata":{},"sourceType":"script"}