{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Checkbox = _interopRequireDefault(require(\"@material-ui/core/Checkbox\"));\n\nvar _TableCell = _interopRequireDefault(require(\"@material-ui/core/TableCell\"));\n\nvar _TableRow = _interopRequireDefault(require(\"@material-ui/core/TableRow\"));\n\nvar _IconButton = _interopRequireDefault(require(\"@material-ui/core/IconButton\"));\n\nvar _Icon = _interopRequireDefault(require(\"@material-ui/core/Icon\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"@material-ui/core/Tooltip\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar CommonValues = _interopRequireWildcard(require(\"../utils/common-values\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/* eslint-enable no-unused-vars */\n\n\nvar MTableBodyRow = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(MTableBodyRow, _React$Component);\n\n  var _super = _createSuper(MTableBodyRow);\n\n  function MTableBodyRow() {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MTableBodyRow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"rotateIconStyle\", function (isOpen) {\n      return {\n        transform: isOpen ? \"rotate(90deg)\" : \"none\"\n      };\n    });\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MTableBodyRow, [{\n    key: \"renderColumns\",\n    value: function renderColumns() {\n      var _this2 = this;\n\n      var size = CommonValues.elementSize(this.props);\n      var mapArr = this.props.columns.filter(function (columnDef) {\n        return !columnDef.hidden && !(columnDef.tableData.groupOrder > -1);\n      }).sort(function (a, b) {\n        return a.tableData.columnOrder - b.tableData.columnOrder;\n      }).map(function (columnDef, index) {\n        var value = _this2.props.getFieldValue(_this2.props.data, columnDef);\n\n        if (_this2.props.data.tableData.editCellList && _this2.props.data.tableData.editCellList.find(function (c) {\n          return c.tableData.id === columnDef.tableData.id;\n        })) {\n          return /*#__PURE__*/React.createElement(_this2.props.components.EditCell, {\n            components: _this2.props.components,\n            icons: _this2.props.icons,\n            localization: _this2.props.localization,\n            columnDef: columnDef,\n            size: size,\n            key: \"cell-\" + _this2.props.data.tableData.id + \"-\" + columnDef.tableData.id,\n            rowData: _this2.props.data,\n            cellEditable: _this2.props.cellEditable,\n            onCellEditFinished: _this2.props.onCellEditFinished,\n            scrollWidth: _this2.props.scrollWidth\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(_this2.props.components.Cell, {\n            size: size,\n            errorState: _this2.props.errorState,\n            icons: _this2.props.icons,\n            columnDef: (0, _objectSpread2[\"default\"])({\n              cellStyle: _this2.props.options.cellStyle\n            }, columnDef),\n            value: value,\n            key: \"cell-\" + _this2.props.data.tableData.id + \"-\" + columnDef.tableData.id,\n            rowData: _this2.props.data,\n            cellEditable: columnDef.editable !== \"never\" && !!_this2.props.cellEditable,\n            onCellEditStarted: _this2.props.onCellEditStarted,\n            scrollWidth: _this2.props.scrollWidth\n          });\n        }\n      });\n      return mapArr;\n    }\n  }, {\n    key: \"renderActions\",\n    value: function renderActions() {\n      var size = CommonValues.elementSize(this.props);\n      var actions = CommonValues.rowActions(this.props);\n      var width = actions.length * CommonValues.baseIconSize(this.props);\n      return /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n        size: size,\n        padding: \"none\",\n        key: \"key-actions-column\",\n        style: (0, _objectSpread2[\"default\"])({\n          width: width,\n          padding: \"0px 5px\",\n          boxSizing: \"border-box\"\n        }, this.props.options.actionsCellStyle)\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: \"flex\"\n        }\n      }, /*#__PURE__*/React.createElement(this.props.components.Actions, {\n        data: this.props.data,\n        actions: actions,\n        components: this.props.components,\n        size: size,\n        disabled: this.props.hasAnyEditingRow\n      })));\n    }\n  }, {\n    key: \"renderSelectionColumn\",\n    value: function renderSelectionColumn() {\n      var _this3 = this;\n\n      var checkboxProps = this.props.options.selectionProps || {};\n\n      if (typeof checkboxProps === \"function\") {\n        checkboxProps = checkboxProps(this.props.data);\n      }\n\n      var size = CommonValues.elementSize(this.props);\n      var selectionWidth = CommonValues.selectionMaxWidth(this.props, this.props.treeDataMaxLevel);\n      var styles = size === \"medium\" ? {\n        marginLeft: this.props.level * 9\n      } : {\n        padding: \"4px\",\n        marginLeft: 5 + this.props.level * 9\n      };\n      return /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n        size: size,\n        padding: \"none\",\n        key: \"key-selection-column\",\n        style: {\n          width: selectionWidth\n        }\n      }, /*#__PURE__*/React.createElement(_Checkbox[\"default\"], (0, _extends2[\"default\"])({\n        size: size,\n        checked: this.props.data.tableData.checked === true,\n        onClick: function onClick(e) {\n          return e.stopPropagation();\n        },\n        value: this.props.data.tableData.id.toString(),\n        onChange: function onChange(event) {\n          return _this3.props.onRowSelected(event, _this3.props.path, _this3.props.data);\n        },\n        style: styles\n      }, checkboxProps)));\n    }\n  }, {\n    key: \"renderDetailPanelColumn\",\n    value: function renderDetailPanelColumn() {\n      var _this4 = this;\n\n      var size = CommonValues.elementSize(this.props);\n\n      var CustomIcon = function CustomIcon(_ref) {\n        var icon = _ref.icon,\n            iconProps = _ref.iconProps;\n        return typeof icon === \"string\" ? /*#__PURE__*/React.createElement(_Icon[\"default\"], iconProps, icon) : React.createElement(icon, (0, _objectSpread2[\"default\"])({}, iconProps));\n      };\n\n      if (typeof this.props.detailPanel == \"function\") {\n        return /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n          size: size,\n          padding: \"none\",\n          key: \"key-detail-panel-column\",\n          style: (0, _objectSpread2[\"default\"])({\n            width: 42,\n            textAlign: \"center\"\n          }, this.props.options.detailPanelColumnStyle)\n        }, /*#__PURE__*/React.createElement(_IconButton[\"default\"], {\n          size: size,\n          style: (0, _objectSpread2[\"default\"])({\n            transition: \"all ease 200ms\"\n          }, this.rotateIconStyle(this.props.data.tableData.showDetailPanel)),\n          onClick: function onClick(event) {\n            _this4.props.onToggleDetailPanel(_this4.props.path, _this4.props.detailPanel);\n\n            event.stopPropagation();\n          }\n        }, /*#__PURE__*/React.createElement(this.props.icons.DetailPanel, null)));\n      } else {\n        return /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n          size: size,\n          padding: \"none\",\n          key: \"key-detail-panel-column\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: (0, _objectSpread2[\"default\"])({\n            width: 42 * this.props.detailPanel.length,\n            textAlign: \"center\",\n            display: \"flex\"\n          }, this.props.options.detailPanelColumnStyle)\n        }, this.props.detailPanel.map(function (panel, index) {\n          if (typeof panel === \"function\") {\n            panel = panel(_this4.props.data);\n          }\n\n          var isOpen = (_this4.props.data.tableData.showDetailPanel || \"\").toString() === panel.render.toString();\n          var iconButton = /*#__PURE__*/React.createElement(_this4.props.icons.DetailPanel, null);\n          var animation = true;\n\n          if (isOpen) {\n            if (panel.openIcon) {\n              iconButton = /*#__PURE__*/React.createElement(CustomIcon, {\n                icon: panel.openIcon,\n                iconProps: panel.iconProps\n              });\n              animation = false;\n            } else if (panel.icon) {\n              iconButton = /*#__PURE__*/React.createElement(CustomIcon, {\n                icon: panel.icon,\n                iconProps: panel.iconProps\n              });\n            }\n          } else if (panel.icon) {\n            iconButton = /*#__PURE__*/React.createElement(CustomIcon, {\n              icon: panel.icon,\n              iconProps: panel.iconProps\n            });\n            animation = false;\n          }\n\n          iconButton = /*#__PURE__*/React.createElement(_IconButton[\"default\"], {\n            size: size,\n            key: \"key-detail-panel-\" + index,\n            style: (0, _objectSpread2[\"default\"])({\n              transition: \"all ease 200ms\"\n            }, _this4.rotateIconStyle(animation && isOpen)),\n            disabled: panel.disabled,\n            onClick: function onClick(event) {\n              _this4.props.onToggleDetailPanel(_this4.props.path, panel.render);\n\n              event.stopPropagation();\n            }\n          }, iconButton);\n\n          if (panel.tooltip) {\n            iconButton = /*#__PURE__*/React.createElement(_Tooltip[\"default\"], {\n              key: \"key-detail-panel-\" + index,\n              title: panel.tooltip\n            }, iconButton);\n          }\n\n          return iconButton;\n        })));\n      }\n    }\n  }, {\n    key: \"renderTreeDataColumn\",\n    value: function renderTreeDataColumn() {\n      var _this5 = this;\n\n      var size = CommonValues.elementSize(this.props);\n\n      if (this.props.data.tableData.childRows && this.props.data.tableData.childRows.length > 0) {\n        return /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n          size: size,\n          padding: \"none\",\n          key: \"key-tree-data-column\",\n          style: {\n            width: 48 + 9 * (this.props.treeDataMaxLevel - 2)\n          }\n        }, /*#__PURE__*/React.createElement(_IconButton[\"default\"], {\n          size: size,\n          style: (0, _objectSpread2[\"default\"])({\n            transition: \"all ease 200ms\",\n            marginLeft: this.props.level * 9\n          }, this.rotateIconStyle(this.props.data.tableData.isTreeExpanded)),\n          onClick: function onClick(event) {\n            _this5.props.onTreeExpandChanged(_this5.props.path, _this5.props.data);\n\n            event.stopPropagation();\n          }\n        }, /*#__PURE__*/React.createElement(this.props.icons.DetailPanel, null)));\n      } else {\n        return /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n          padding: \"none\",\n          key: \"key-tree-data-column\"\n        });\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, level) {\n      var style = {\n        transition: \"all ease 300ms\"\n      };\n\n      if (typeof this.props.options.rowStyle === \"function\") {\n        style = (0, _objectSpread2[\"default\"])({}, style, this.props.options.rowStyle(this.props.data, index, level, this.props.hasAnyEditingRow));\n      } else if (this.props.options.rowStyle) {\n        style = (0, _objectSpread2[\"default\"])({}, style, this.props.options.rowStyle);\n      }\n\n      if (this.props.onRowClick) {\n        style.cursor = \"pointer\";\n      }\n\n      if (this.props.hasAnyEditingRow) {\n        style.opacity = style.opacity ? style.opacity : 0.2;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var size = CommonValues.elementSize(this.props);\n      var renderColumns = this.renderColumns();\n\n      if (this.props.options.selection) {\n        renderColumns.splice(0, 0, this.renderSelectionColumn());\n      }\n\n      if (this.props.actions && this.props.actions.filter(function (a) {\n        return a.position === \"row\" || typeof a === \"function\";\n      }).length > 0) {\n        if (this.props.options.actionsColumnIndex === -1) {\n          renderColumns.push(this.renderActions());\n        } else if (this.props.options.actionsColumnIndex >= 0) {\n          var endPos = 0;\n\n          if (this.props.options.selection) {\n            endPos = 1;\n          }\n\n          renderColumns.splice(this.props.options.actionsColumnIndex + endPos, 0, this.renderActions());\n        }\n      } // Then we add detail panel icon\n\n\n      if (this.props.detailPanel) {\n        if (this.props.options.detailPanelColumnAlignment === \"right\") {\n          renderColumns.push(this.renderDetailPanelColumn());\n        } else {\n          renderColumns.splice(0, 0, this.renderDetailPanelColumn());\n        }\n      } // Lastly we add tree data icon\n\n\n      if (this.props.isTreeData) {\n        renderColumns.splice(0, 0, this.renderTreeDataColumn());\n      }\n\n      this.props.columns.filter(function (columnDef) {\n        return columnDef.tableData.groupOrder > -1;\n      }).forEach(function (columnDef) {\n        renderColumns.splice(0, 0, /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n          size: size,\n          padding: \"none\",\n          key: \"key-group-cell\" + columnDef.tableData.id\n        }));\n      });\n      var _this$props = this.props,\n          icons = _this$props.icons,\n          data = _this$props.data,\n          columns = _this$props.columns,\n          components = _this$props.components,\n          detailPanel = _this$props.detailPanel,\n          getFieldValue = _this$props.getFieldValue,\n          isTreeData = _this$props.isTreeData,\n          onRowClick = _this$props.onRowClick,\n          onRowSelected = _this$props.onRowSelected,\n          onTreeExpandChanged = _this$props.onTreeExpandChanged,\n          onToggleDetailPanel = _this$props.onToggleDetailPanel,\n          onEditingCanceled = _this$props.onEditingCanceled,\n          onEditingApproved = _this$props.onEditingApproved,\n          options = _this$props.options,\n          hasAnyEditingRow = _this$props.hasAnyEditingRow,\n          treeDataMaxLevel = _this$props.treeDataMaxLevel,\n          localization = _this$props.localization,\n          actions = _this$props.actions,\n          errorState = _this$props.errorState,\n          cellEditable = _this$props.cellEditable,\n          onCellEditStarted = _this$props.onCellEditStarted,\n          onCellEditFinished = _this$props.onCellEditFinished,\n          rowProps = (0, _objectWithoutProperties2[\"default\"])(_this$props, [\"icons\", \"data\", \"columns\", \"components\", \"detailPanel\", \"getFieldValue\", \"isTreeData\", \"onRowClick\", \"onRowSelected\", \"onTreeExpandChanged\", \"onToggleDetailPanel\", \"onEditingCanceled\", \"onEditingApproved\", \"options\", \"hasAnyEditingRow\", \"treeDataMaxLevel\", \"localization\", \"actions\", \"errorState\", \"cellEditable\", \"onCellEditStarted\", \"onCellEditFinished\"]);\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_TableRow[\"default\"], (0, _extends2[\"default\"])({\n        selected: hasAnyEditingRow\n      }, rowProps, {\n        hover: onRowClick ? true : false,\n        style: this.getStyle(this.props.index, this.props.level),\n        onClick: function onClick(event) {\n          onRowClick && onRowClick(event, _this6.props.data, function (panelIndex) {\n            var panel = detailPanel;\n\n            if (Array.isArray(panel)) {\n              panel = panel[panelIndex || 0];\n\n              if (typeof panel === \"function\") {\n                panel = panel(_this6.props.data);\n              }\n\n              panel = panel.render;\n            }\n\n            onToggleDetailPanel(_this6.props.path, panel);\n          });\n        }\n      }), renderColumns), this.props.data.tableData && this.props.data.tableData.showDetailPanel && /*#__PURE__*/React.createElement(_TableRow[\"default\"] // selected={this.props.index % 2 === 0}\n      , null, /*#__PURE__*/React.createElement(_TableCell[\"default\"], {\n        size: size,\n        colSpan: renderColumns.length,\n        padding: \"none\"\n      }, this.props.data.tableData.showDetailPanel(this.props.data))), this.props.data.tableData.childRows && this.props.data.tableData.isTreeExpanded && this.props.data.tableData.childRows.map(function (data, index) {\n        if (data.tableData.editing) {\n          return /*#__PURE__*/React.createElement(_this6.props.components.EditRow, {\n            columns: _this6.props.columns.filter(function (columnDef) {\n              return !columnDef.hidden;\n            }),\n            components: _this6.props.components,\n            data: data,\n            icons: _this6.props.icons,\n            localization: _this6.props.localization,\n            getFieldValue: _this6.props.getFieldValue,\n            key: index,\n            mode: data.tableData.editing,\n            options: _this6.props.options,\n            isTreeData: _this6.props.isTreeData,\n            detailPanel: _this6.props.detailPanel,\n            onEditingCanceled: onEditingCanceled,\n            onEditingApproved: onEditingApproved,\n            errorState: _this6.props.errorState\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(_this6.props.components.Row, (0, _extends2[\"default\"])({}, _this6.props, {\n            data: data,\n            index: index,\n            key: index,\n            level: _this6.props.level + 1,\n            path: [].concat((0, _toConsumableArray2[\"default\"])(_this6.props.path), [index]),\n            onEditingCanceled: onEditingCanceled,\n            onEditingApproved: onEditingApproved,\n            hasAnyEditingRow: _this6.props.hasAnyEditingRow,\n            treeDataMaxLevel: treeDataMaxLevel,\n            errorState: _this6.props.errorState,\n            cellEditable: cellEditable,\n            onCellEditStarted: onCellEditStarted,\n            onCellEditFinished: onCellEditFinished\n          }));\n        }\n      }));\n    }\n  }]);\n  return MTableBodyRow;\n}(React.Component);\n\nexports[\"default\"] = MTableBodyRow;\nMTableBodyRow.defaultProps = {\n  actions: [],\n  index: 0,\n  data: {},\n  options: {},\n  path: []\n};\nMTableBodyRow.propTypes = {\n  actions: _propTypes[\"default\"].array,\n  icons: _propTypes[\"default\"].any.isRequired,\n  index: _propTypes[\"default\"].number.isRequired,\n  data: _propTypes[\"default\"].object.isRequired,\n  detailPanel: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].func]))]),\n  hasAnyEditingRow: _propTypes[\"default\"].bool,\n  options: _propTypes[\"default\"].object.isRequired,\n  onRowSelected: _propTypes[\"default\"].func,\n  path: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].number),\n  treeDataMaxLevel: _propTypes[\"default\"].number,\n  getFieldValue: _propTypes[\"default\"].func.isRequired,\n  columns: _propTypes[\"default\"].array,\n  onToggleDetailPanel: _propTypes[\"default\"].func.isRequired,\n  onRowClick: _propTypes[\"default\"].func,\n  onEditingApproved: _propTypes[\"default\"].func,\n  onEditingCanceled: _propTypes[\"default\"].func,\n  errorState: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].object, _propTypes[\"default\"].bool])\n};","map":null,"metadata":{},"sourceType":"script"}