{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar _a;\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar ReactTabulator_1 = require(\"./ReactTabulator\");\n\nvar DateEditor_1 = require(\"./editors/DateEditor\");\n\nvar MultiSelectEditor_1 = require(\"./editors/MultiSelectEditor\");\n\nvar MultiValueFormatter_1 = require(\"./formatters/MultiValueFormatter\");\n\nvar Utils_1 = require(\"./Utils\");\n\nfunction SimpleButton(props) {\n  var cellData = props.cell._cell.row.data;\n  return React.createElement(\"button\", {\n    onClick: function onClick() {\n      return alert(cellData.name);\n    }\n  }, \"Show\");\n}\n\nvar columns = [{\n  title: 'Name',\n  field: 'name',\n  width: 150\n}, {\n  title: 'Age',\n  field: 'age',\n  hozAlign: 'left',\n  formatter: 'progress'\n}, {\n  title: 'Favourite Color',\n  field: 'color'\n}, {\n  title: 'Date Of Birth',\n  field: 'dob',\n  sorter: 'date'\n}, {\n  title: 'Rating',\n  field: 'rating',\n  hozAlign: 'center',\n  formatter: 'star'\n}, {\n  title: 'Passed?',\n  field: 'passed',\n  hozAlign: 'center',\n  formatter: 'tickCross'\n}, {\n  title: 'Custom',\n  field: 'custom',\n  hozAlign: 'center',\n  formatter: Utils_1.reactFormatter(React.createElement(SimpleButton, null))\n}];\nvar data = [{\n  id: 1,\n  name: 'Oli Bob',\n  age: '12',\n  color: 'red',\n  dob: '01/01/1980',\n  rating: 5,\n  passed: true,\n  pets: ['cat', 'dog']\n}, {\n  id: 2,\n  name: 'Mary May',\n  age: '1',\n  color: 'green',\n  dob: '12/05/1989',\n  rating: 4,\n  passed: true,\n  pets: ['cat']\n}, {\n  id: 3,\n  name: 'Christine Lobowski',\n  age: '42',\n  color: 'green',\n  dob: '10/05/1985',\n  rating: 4,\n  passed: false\n}, {\n  id: 4,\n  name: 'Brendon Philips',\n  age: '125',\n  color: 'red',\n  dob: '01/08/1980',\n  rating: 4.5,\n  passed: true\n}, {\n  id: 5,\n  name: 'Margret Marmajuke',\n  age: '16',\n  color: 'yellow',\n  dob: '07/01/1999',\n  rating: 4,\n  passed: false\n}, {\n  id: 6,\n  name: 'Van Ng',\n  age: '37',\n  color: 'green',\n  dob: '06/10/1982',\n  rating: 4,\n  passed: true,\n  pets: ['dog', 'fish']\n}, {\n  id: 7,\n  name: 'Duc Ng',\n  age: '37',\n  color: 'yellow',\n  dob: '10/10/1982',\n  rating: 4,\n  passed: true,\n  pets: ['dog']\n}]; // Editable Example:\n\nvar colorOptions = (_a = {}, _a[''] = '&nbsp;', _a.red = 'red', _a.green = 'green', _a.yellow = 'yellow', _a);\nvar petOptions = [{\n  id: 'cat',\n  name: 'cat'\n}, {\n  id: 'dog',\n  name: 'dog'\n}, {\n  id: 'fish',\n  name: 'fish'\n}];\nvar editableColumns = [{\n  title: 'Name',\n  field: 'name',\n  width: 150,\n  editor: 'input',\n  headerFilter: 'input'\n}, {\n  title: 'Age',\n  field: 'age',\n  hozAlign: 'left',\n  formatter: 'progress',\n  editor: 'progress'\n}, {\n  title: 'Favourite Color',\n  field: 'color',\n  editor: 'select',\n  editorParams: {\n    allowEmpty: true,\n    showListOnEmpty: true,\n    values: colorOptions\n  },\n  headerFilter: 'select',\n  headerFilterParams: {\n    values: colorOptions\n  }\n}, {\n  title: 'Date Of Birth',\n  field: 'dob',\n  editor: DateEditor_1[\"default\"],\n  editorParams: {\n    format: 'MM/DD/YYYY'\n  }\n}, {\n  title: 'Pets',\n  field: 'pets',\n  editor: MultiSelectEditor_1[\"default\"],\n  editorParams: {\n    values: petOptions\n  },\n  formatter: MultiValueFormatter_1[\"default\"],\n  formatterParams: {\n    style: 'PILL'\n  }\n}, {\n  title: 'Passed?',\n  field: 'passed',\n  hozAlign: 'center',\n  formatter: 'tickCross',\n  editor: true\n}];\n\nvar default_1 =\n/** @class */\nfunction (_super) {\n  __extends(default_1, _super);\n\n  function default_1() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      data: [],\n      selectedName: ''\n    };\n    _this.ref = null;\n\n    _this.rowClick = function (e, row) {\n      console.log('ref table: ', _this.ref.table); // this is the Tabulator table instance\n\n      console.log('rowClick id: ${row.getData().id}', row, e);\n\n      _this.setState({\n        selectedName: row.getData().name\n      });\n    };\n\n    _this.setData = function () {\n      _this.setState({\n        data: data\n      });\n    };\n\n    _this.clearData = function () {\n      _this.setState({\n        data: []\n      });\n    };\n\n    _this.renderAjaxScrollExample = function () {\n      var columns = [{\n        title: 'First Name',\n        field: 'first_name',\n        width: 150\n      }, {\n        title: 'Last Name',\n        field: 'last_name',\n        width: 150\n      }, {\n        title: 'Email',\n        field: 'email',\n        width: 150\n      }];\n      var options = {\n        height: 150,\n        movableRows: true,\n        ajaxProgressiveLoad: 'scroll',\n        ajaxProgressiveLoadDelay: 200,\n        ajaxProgressiveLoadScrollMargin: 100,\n        ajaxURL: 'https://reqres.in/api/users',\n        paginationDataSent: {\n          page: 'page',\n          size: 'per_page' // change 'size' param to 'per_page'\n\n        },\n        paginationDataReceived: {\n          last_page: 'total_pages'\n        },\n        current_page: 1,\n        paginationSize: 3,\n        ajaxResponse: function ajaxResponse(url, params, response) {\n          console.log('ajaxResponse', url);\n          return response; //return the response data to tabulator\n        },\n        ajaxError: function ajaxError(error) {\n          console.log('ajaxError', error);\n        }\n      };\n      return React.createElement(ReactTabulator_1[\"default\"], {\n        ref: function ref(_ref) {\n          return _this.ref = _ref;\n        },\n        columns: columns,\n        data: [],\n        options: options\n      });\n    };\n\n    return _this;\n  }\n\n  default_1.prototype.render = function () {\n    var _this = this;\n\n    var options = {\n      height: 150,\n      movableRows: true\n    };\n    return React.createElement(\"div\", null, React.createElement(ReactTabulator_1[\"default\"], {\n      ref: function ref(_ref2) {\n        return _this.ref = _ref2;\n      },\n      columns: columns,\n      data: data,\n      rowClick: this.rowClick,\n      options: options,\n      \"data-custom-attr\": \"test-custom-attribute\",\n      className: \"custom-css-class\"\n    }), React.createElement(\"div\", null, \"Selected Name: \", this.state.selectedName), React.createElement(\"h3\", null, \"Asynchronous data: (e.g. fetch) - \", React.createElement(\"button\", {\n      onClick: this.setData\n    }, \"Set Data\"), ' ', React.createElement(\"button\", {\n      onClick: this.clearData\n    }, \"Clear\")), React.createElement(ReactTabulator_1[\"default\"], {\n      columns: columns,\n      data: this.state.data\n    }), React.createElement(\"h3\", null, \"Editable Table\"), React.createElement(ReactTabulator_1[\"default\"], {\n      columns: editableColumns,\n      data: data,\n      cellEdited: function cellEdited(cell) {\n        return console.log('cellEdited', cell);\n      },\n      dataEdited: function dataEdited(newData) {\n        return console.log('dataEdited', newData);\n      },\n      footerElement: React.createElement(\"span\", null, \"Footer\")\n    }), React.createElement(\"h3\", null, \"Infinite Scrolling with Ajax Requests\"), this.renderAjaxScrollExample(), React.createElement(\"p\", null, React.createElement(\"a\", {\n      href: \"https://github.com/ngduc/react-tabulator\",\n      target: \"_blank\"\n    }, \"Back to: Github Repo: react-tabulator\")), React.createElement(\"p\", null, React.createElement(\"a\", {\n      href: \"http://tabulator.info/examples/4.0\",\n      target: \"_blank\"\n    }, \"More Tabulator's Examples\")));\n  };\n\n  return default_1;\n}(React.Component);\n\nexports[\"default\"] = default_1;","map":null,"metadata":{},"sourceType":"script"}