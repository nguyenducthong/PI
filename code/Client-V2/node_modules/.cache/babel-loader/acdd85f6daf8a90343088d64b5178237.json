{"ast":null,"code":"/* eslint-disable no-cond-assign, no-continue */\nimport css from './css';\nimport height from './height';\nimport isDocument from './isDocument';\n/**\n * Find the first scrollable parent of an element.\n *\n * @param element Starting element\n * @param firstPossible Stop at the first scrollable parent, even if it's not currently scrollable\n */\n\nexport default function scrollParent(element, firstPossible) {\n  var position = css(element, 'position');\n  var excludeStatic = position === 'absolute';\n  var ownerDoc = element.ownerDocument;\n  if (position === 'fixed') return ownerDoc || document; // @ts-ignore\n\n  while ((element = element.parentNode) && !isDocument(element)) {\n    var isStatic = excludeStatic && css(element, 'position') === 'static';\n    var style = (css(element, 'overflow') || '') + (css(element, 'overflow-y') || '') + css(element, 'overflow-x');\n    if (isStatic) continue;\n\n    if (/(auto|scroll)/.test(style) && (firstPossible || height(element) < element.scrollHeight)) {\n      return element;\n    }\n  }\n\n  return ownerDoc || document;\n}","map":null,"metadata":{},"sourceType":"module"}