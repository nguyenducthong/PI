{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\IntroduceTheProgram\\\\MassageManagementDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControlLabel, Switch, DialogTitle, DialogContent, Icon, IconButton } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { generateRandomId } from \"utils\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\nimport EditorForm from \"./EditorForm\";\nimport { addNew, update, checkCode } from \"./IntroduceTheProgramService\";\nimport IntroduceTheProgramDialogTab from \"./IntroduceTheProgramDialogTab\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })));\n} //Dialog của bài viết\n\n\nvar MassageManagementDialog = /*#__PURE__*/function (_Component) {\n  _inherits(MassageManagementDialog, _Component);\n\n  var _super = _createSuper(MassageManagementDialog);\n\n  function MassageManagementDialog() {\n    var _this;\n\n    _classCallCheck(this, MassageManagementDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleChange = function (event, source) {\n      var item = _this.state.item;\n\n      if (item == null) {\n        item = {};\n      }\n\n      var name = event.target.name;\n      var value = event.target.value;\n\n      if (source == \"checked\") {\n        item[\"active\"] = event.target.checked;\n\n        _this.setState({\n          item: item\n        });\n\n        return;\n      }\n\n      item[name] = value;\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.handleChangeContent = function (content) {\n      var item = _this.state.item;\n      item[\"content\"] = content;\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.item.id;\n      var code = _this.state.item.code;\n      var t = _this.props.t;\n      checkCode(id, code).then(function (result) {\n        if (result.data) {\n          toast.warning(t(\"mess_code\"));\n        } else {\n          if (!id) {\n            addNew(_this.state.item).then(function (_ref) {\n              var data = _ref.data;\n\n              if (data != null && data.id != null) {\n                id = data.id;\n\n                _this.setState({\n                  item: data\n                });\n              }\n\n              toast.success(t(\"mess_add\"));\n            });\n          } else {\n            update(_this.state.item).then(function (_ref2) {\n              var data = _ref2.data;\n              toast.success(t(\"mess_edit\"));\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MassageManagementDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var t = this.props.t;\n      var item = this.state.item;\n      var _this$props2 = this.props,\n          handleClose = _this$props2.handleClose,\n          handleEditOk = _this$props2.handleEditOk,\n          open = _this$props2.open,\n          isView = _this$props2.isView;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, this.state.item.id ? t(\"update\") : t(\"Add\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-8\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }\n        }, \" * \"), t(\"Code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: item.code ? item.code : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }\n        }, \" * \"), t(\"Name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: item.name ? item.name : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(FormControlLabel, {\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          checked: item.active ? true : false,\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, \"checked\");\n          },\n          name: \"checkedB\",\n          color: \"primary\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 23\n          }\n        }),\n        label: t(\"isShow\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(EditorForm, {\n        content: item.content ? item.content : \"\",\n        handleChangeContent: this.handleChangeContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, t(\"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 15\n        }\n      }, t(\"Save\"))))));\n    }\n  }]);\n\n  return MassageManagementDialog;\n}(Component);\n\nexport default MassageManagementDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/IntroduceTheProgram/MassageManagementDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControlLabel","Switch","DialogTitle","DialogContent","Icon","IconButton","ValidatorForm","TextValidator","generateRandomId","Draggable","Paper","toast","EditorForm","addNew","update","checkCode","IntroduceTheProgramDialogTab","Checkbox","PaperComponent","props","MassageManagementDialog","handleChange","event","source","item","state","name","target","value","checked","setState","handleChangeContent","content","handleFormSubmit","id","code","t","then","result","data","warning","success","open","handleClose","isRoleAdmin","isView","handleEditOk","cursor","position","right","top","overflowY","display","flexDirection","color","active","e"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Icon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { generateRandomId } from \"utils\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport EditorForm from \"./EditorForm\";\r\nimport { addNew, update, checkCode } from \"./IntroduceTheProgramService\";\r\nimport IntroduceTheProgramDialogTab from \"./IntroduceTheProgramDialogTab\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n//Dialog của bài viết\r\nclass MassageManagementDialog extends Component {\r\n  componentWillMount() {\r\n    let { open, handleClose, item, isRoleAdmin, isView } = this.props;\r\n    this.setState({\r\n      item: item,\r\n    });\r\n  }\r\n\r\n  handleChange = (event, source) => {\r\n    let { item } = this.state;\r\n    if (item == null) {\r\n      item = {};\r\n    }\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    if (source == \"checked\") {\r\n      item[\"active\"] = event.target.checked;\r\n      this.setState({ item: item });\r\n      return;\r\n    }\r\n    item[name] = value;\r\n    this.setState({\r\n      item: item,\r\n    });\r\n  };\r\n  handleChangeContent = (content) => {\r\n    let { item } = this.state;\r\n    item[\"content\"] = content;\r\n    this.setState({ item: item });\r\n  };\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state.item;\r\n    let { code } = this.state.item;\r\n    let { t } = this.props;\r\n    checkCode(id, code).then((result) => {\r\n      if (result.data) {\r\n        toast.warning(t(\"mess_code\"));\r\n      } else {\r\n        if (!id) {\r\n          addNew(this.state.item).then(({ data }) => {\r\n            if (data != null && data.id != null) {\r\n              id = data.id;\r\n              this.setState({ item: data });\r\n            }\r\n            toast.success(t(\"mess_add\"));\r\n          });\r\n        } else {\r\n          update(this.state.item).then(({ data }) => {\r\n            toast.success(t(\"mess_edit\"));\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    let { t } = this.props;\r\n    let { item } = this.state;\r\n    let { handleClose, handleEditOk, open, isView } = this.props;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"lg\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {this.state.item.id ? t(\"update\") : t(\"Add\")}\r\n          </span>\r\n          <IconButton\r\n            style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n            onClick={() => handleClose()}\r\n          >\r\n            <Icon color=\"error\" title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <div>\r\n          <ValidatorForm\r\n            ref=\"form\"\r\n            onSubmit={this.handleFormSubmit}\r\n            style={{\r\n              overflowY: \"auto\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            <DialogContent dividers>\r\n              <Grid className=\"mb-8\" container spacing={4}>\r\n                <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                  <TextValidator\r\n                    className=\"w-100 mb-16\"\r\n                    label={\r\n                      <span className=\"font\">\r\n                        <span style={{ color: \"red\" }}> * </span>\r\n                        {t(\"Code\")}\r\n                      </span>\r\n                    }\r\n                    onChange={this.handleChange}\r\n                    type=\"text\"\r\n                    name=\"code\"\r\n                    value={item.code ? item.code : \"\"}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[t(\"general.errorMessages_required\")]}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                  <TextValidator\r\n                    className=\"w-100 mb-16\"\r\n                    label={\r\n                      <span className=\"font\">\r\n                        <span style={{ color: \"red\" }}> * </span>\r\n                        {t(\"Name\")}\r\n                      </span>\r\n                    }\r\n                    onChange={this.handleChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={item.name ? item.name : \"\"}\r\n                    validators={[\"required\"]}\r\n                    errorMessages={[t(\"general.errorMessages_required\")]}\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        checked={item.active ? true : false}\r\n                        onChange={(e) => this.handleChange(e, \"checked\")}\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={t(\"isShow\")}\r\n                  />\r\n                  <EditorForm\r\n                    content={item.content ? item.content : \"\"}\r\n                    handleChangeContent={this.handleChangeContent}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"Cancel\")}\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                {t(\"Save\")}\r\n              </Button>\r\n            </DialogActions>\r\n          </ValidatorForm>\r\n        </div>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MassageManagementDialog;\r\n"]},"metadata":{},"sourceType":"module"}