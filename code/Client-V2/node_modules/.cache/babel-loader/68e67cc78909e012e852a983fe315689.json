{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\n\nvar server_1 = require(\"react-dom/server\"); // .prettierignore    (to keep relevant props together)\n\n\nvar NOOPS = function NOOPS() {}; // get callbacks from props (default: NOOP) to set them to Tabulator options later.\n\n\nexports.propsToOptions = function (props) {\n  var output = {};\n  var defaultOptions = ['height', 'layout', 'layoutColumnsOnNewData', 'columnMinWidth', 'columnVertAlign', 'resizableColumns', 'resizableRows', 'autoResize', 'tooltips', 'tooltipsHeader', 'tooltipGenerationMode', 'initialSort', 'initialFilter', 'initialHeaderFilter', 'footerElement', 'index', 'keybindings', 'clipboard', 'clipboardCopyStyled', 'clipboardCopySelector', 'clipboardCopyFormatter', 'clipboardCopyHeader', 'clipboardPasteParser', 'clipboardPasteAction', 'rowFormatter', 'placeholder'];\n\n  for (var _i = 0, defaultOptions_1 = defaultOptions; _i < defaultOptions_1.length; _i++) {\n    var opt = defaultOptions_1[_i];\n\n    if (typeof props[opt] !== 'undefined') {\n      output[opt] = props[opt];\n    }\n  }\n\n  var callbackNames = ['tableBuilt', 'rowClick', 'rowDblClick', 'rowContext', 'rowTap', 'rowDblTap', 'rowTapHold', 'rowAdded', 'rowDeleted', 'rowMoved', 'rowUpdated', 'rowSelectionChanged', 'rowSelected', 'rowDeselected', 'rowResized', 'cellClick', 'cellDblClick', 'cellContext', 'cellTap', 'cellDblTap', 'cellTapHold', 'cellEditing', 'cellEdited', 'cellEditCancelled', 'columnMoved', 'columnResized', 'columnTitleChanged', 'columnVisibilityChanged', 'htmlImporting', 'htmlImported', 'dataLoading', 'dataLoaded', 'dataEdited', 'ajaxRequesting', 'ajaxResponse', 'ajaxError', 'dataFiltering', 'dataFiltered', 'dataSorting', 'dataSorted', 'renderStarted', 'renderComplete', 'pageLoaded', 'localized', 'dataGrouping', 'dataGrouped', 'groupVisibilityChanged', 'groupClick', 'groupDblClick', 'groupContext', 'groupTap', 'groupDblTap', 'groupTapHold', 'movableRowsSendingStart', 'movableRowsSent', 'movableRowsSentFailed', 'movableRowsSendingStop', 'movableRowsReceivingStart', 'movableRowsReceived', 'movableRowsReceivedFailed', 'movableRowsReceivingStop', 'validationFailed', 'clipboardCopied', 'clipboardPasted', 'clipboardPasteError', 'downloadDataFormatter', 'downloadReady', 'downloadComplete'];\n\n  for (var _a = 0, callbackNames_1 = callbackNames; _a < callbackNames_1.length; _a++) {\n    var callbackName = callbackNames_1[_a];\n    output[callbackName] = props[callbackName] || NOOPS;\n  }\n\n  if (typeof props['footerElement'] === 'object') {\n    // convert from JSX to HTML string (tabulator's footerElement accepts string)\n    output['footerElement'] = server_1.renderToString(props['footerElement']);\n  }\n\n  return output;\n};","map":null,"metadata":{},"sourceType":"script"}