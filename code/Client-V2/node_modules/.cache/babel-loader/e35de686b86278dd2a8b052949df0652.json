{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportSerodia\\\\EQAResultReportSerodiaEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, TextField, Icon, IconButton, FormControl, DialogTitle, DialogContent, DialogActions, Paper, FormHelperText, MenuItem, Checkbox, Select, FormControlLabel } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { technicianSearchByPage, saveItem, checkReagentByHealthOrgRound, getEQASampleTubeByHealthOrgEQARoundId } from \"./EQAResultReportSerodiaService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ConstantList from \"../../appConfig\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\nimport Draggable from \"react-draggable\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { MuiPickersUtilsProvider, DateTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport LocalConstants from \"./Constants\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport \"../../../styles/views/_loadding.scss\";\nimport \"../../../styles/views/_style.scss\";\nimport clsx from \"clsx\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport EQAResultReportSerodiaTabs from \"./EQAResultReportSerodiaTabs\";\nimport { exportToExcel } from \"./EQAResultReportSerodiaService\";\nimport { saveAs } from \"file-saver\";\nimport EQAResultReportSerodiaPrint from \"./EQAResultReportSerodiaPrint\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction MaterialButton(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Delete\")));\n}\n\nvar EQAResultReportSerodiaEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQAResultReportSerodiaEditorDialog, _Component);\n\n  var _super = _createSuper(EQAResultReportSerodiaEditorDialog);\n\n  //positive(1),//Dương tính\n  //indertermine(0),//Không xác định\n  //negative(-1),//Âm tính\n  //none(-2)//Không thực hiện\n  function EQAResultReportSerodiaEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportSerodiaEditorDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      technician: null,\n      round: null,\n      healthOrg: null,\n      rowsPerPage: 5,\n      page: 0,\n      listHealthOrgRound: [],\n      roundLists: [],\n      details: [],\n      orderTest: \"\",\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      listReagent: [],\n      listTechnician: [],\n      reagentExpiryDate: null,\n      testDate: new Date(),\n      reagentUnBoxDate: null,\n      dateSubmitResults: null,\n      isView: false,\n      isRoleAdmin: false,\n      typeMethod: 3,\n      isViewButton: false,\n      loading: false,\n      checkTheStatus: false,\n      shouldOpenPrintDialog: false\n    };\n    _this.listCheckValue = [{\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\n      name: \"Dương tính\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\n      name: \"Âm tính\"\n    }];\n    _this.listTestValue = [{\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\n      name: \"Dương tính\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n      name: \"Không xác định\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\n      name: \"Âm tính\"\n    }];\n    _this.listAgglomeration = [{\n      id: 1,\n      name: \" - \"\n    }, {\n      id: 2,\n      name: \" +/- \"\n    }, {\n      id: 3,\n      name: \" + \"\n    }, {\n      id: 4,\n      name: \" ++ \"\n    }];\n    _this.Results = [{\n      id: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n      name: \"Không thực hiện\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\n      name: \"Âm tính\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n      name: \"Không xác định\"\n    }, {\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\n      name: \"Dương tính\"\n    }];\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenConfirmationDialog: false,\n        shouldOpenPrintDialog: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"isFinalResult\") {\n        _this.setState({\n          isFinalResult: event.target.checked\n        });\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var details = _this.state.details;\n\n      if (details != null && details.length > 0) {\n        details.forEach(function (element) {\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name == \"checkValue\") {\n              if (event.target.value != \"\" && event.target.value != null) if (element.result == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.result = \"\";\n              }\n              element.checkValue = event.target.value;\n            } else if (event.target.name == \"testValue\") {\n              if (event.target.value != \"\" && event.target.value != null) if (element.result == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.result = \"\";\n              }\n              element.testValue = event.target.value;\n            } else if (event.target.name == \"agglomeration\") {\n              if (event.target.value != \"\" && event.target.value != null) if (element.result == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.result = \"\";\n              }\n              element.agglomeration = event.target.value;\n            } else if (event.target.name == \"result\") {\n              if (event.target.value == LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.agglomeration = \"\";\n                element.testValue = \"\";\n                element.checkValue = \"\";\n              }\n\n              element.result = event.target.value;\n            }\n          }\n        });\n\n        _this.setState({\n          details: details\n        });\n      }\n    };\n\n    _this.openCircularProgress = function () {\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleExportExcel = function () {\n      var t = _this.props.t;\n      exportToExcel(_this.state.id).then(function (res) {\n        toast.info(_this.props.t(\"general.successExport\"));\n        var blob = new Blob([res.data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n        });\n        saveAs(blob, \"Ketqua.xlsx\");\n      }).catch(function (err) {// console.log(err);\n      }); // console.log(this.state);\n    };\n\n    _this.handleFormSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var t, _this$state, checkTheStatus, item, _this$state$item, id, details, healthOrgRound, reagent, typeMethod, otherReagent, isCheck;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.openCircularProgress();\n\n            case 2:\n              t = _this.props.t;\n              _this$state = _this.state, checkTheStatus = _this$state.checkTheStatus, item = _this$state.item;\n              _this$state$item = _this.state.item, id = _this$state$item.id, details = _this$state$item.details, healthOrgRound = _this$state$item.healthOrgRound, reagent = _this$state$item.reagent, typeMethod = _this$state$item.typeMethod, otherReagent = _this$state$item.otherReagent;\n              isCheck = false; //Check null ket qua\n\n              if (details != null && details.length > 0) {\n                details.forEach(function (el) {\n                  if (el.result === null || el.result === \"\") {\n                    isCheck = true;\n                  }\n                });\n              } else {\n                isCheck = true;\n              }\n\n              if (!isCheck) {\n                _context.next = 11;\n                break;\n              }\n\n              toast.info(t(\"EQAResultReportElisa.notResult\"));\n\n              _this.setState({\n                loading: false\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 11:\n              if (checkTheStatus) {\n                item[\"isFinalResult\"] = true;\n                item[\"dateSubmitResults\"] = new Date();\n\n                _this.setState({\n                  item: item\n                });\n              } //Check null du lieu\n\n\n              if (!(healthOrgRound == null || healthOrgRound.id == null || reagent == null || reagent.id == null)) {\n                _context.next = 16;\n                break;\n              }\n\n              toast.info(t(\"EQAResultReportElisa.notData\"));\n\n              _this.setState({\n                loading: false\n              });\n\n              return _context.abrupt(\"return\");\n\n            case 16:\n              if (ConstantList.CHECK_ERROR_RESULT && !otherReagent) {\n                checkReagentByHealthOrgRound(id, healthOrgRound.id, reagent.id, typeMethod).then(function (res) {\n                  if (res.data) {\n                    toast.warning(t(\"EqaResult.dulicateReagent\"));\n\n                    _this.setState({\n                      loading: false\n                    });\n                  } else {\n                    if (id) {\n                      _this.setState({\n                        isView: true,\n                        isViewButton: true\n                      });\n\n                      saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                        if (response.data != null && response.status == 200) {\n                          _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                          toast.success(t(\"mess_edit\"));\n\n                          _this.setState({\n                            loading: false,\n                            isView: false,\n                            isViewButton: false\n                          });\n                        }\n                      }).catch(function () {\n                        toast.warning(t(\"mess_edit_error\"));\n\n                        _this.setState({\n                          loading: false,\n                          isView: false,\n                          isViewButton: false\n                        });\n                      });\n                    } else {\n                      _this.setState({\n                        isView: true,\n                        isViewButton: true\n                      });\n\n                      saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                        if (response.data != null && response.status == 200) {\n                          _this.state.item.id = response.data.id;\n\n                          _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                          toast.success(t(\"mess_add\"));\n\n                          _this.setState({\n                            loading: false,\n                            isView: false,\n                            isViewButton: false\n                          });\n                        }\n                      }).catch(function () {\n                        toast.warning(t(\"mess_add_error\"));\n\n                        _this.setState({\n                          loading: false,\n                          isView: false,\n                          isViewButton: false\n                        });\n                      });\n                    }\n                  }\n                });\n              } else {\n                if (id) {\n                  _this.setState({\n                    isView: true,\n                    isViewButton: true\n                  });\n\n                  saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                    if (response.data != null && response.status == 200) {\n                      _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                      toast.success(t(\"mess_edit\"));\n\n                      _this.setState({\n                        loading: false,\n                        isView: false,\n                        isViewButton: false\n                      });\n                    }\n                  }).catch(function () {\n                    toast.warning(t(\"mess_edit_error\"));\n\n                    _this.setState({\n                      loading: false,\n                      isView: false,\n                      isViewButton: false\n                    });\n                  });\n                } else {\n                  _this.setState({\n                    isView: true,\n                    isViewButton: true\n                  });\n\n                  saveItem(_objectSpread({}, _this.state.item)).then(function (response) {\n                    if (response.data != null && response.status == 200) {\n                      _this.state.item.id = response.data.id;\n\n                      _this.setState(_objectSpread({}, _this.state.item)); // this.props.handleOKEditClose();\n\n\n                      toast.success(t(\"mess_add\"));\n\n                      _this.setState({\n                        loading: false,\n                        isView: false,\n                        isViewButton: false\n                      });\n                    }\n                  }).catch(function () {\n                    _this.setState({\n                      loading: false,\n                      isView: false,\n                      isViewButton: false\n                    });\n\n                    toast.warning(t(\"mess_add_error\"));\n                  });\n                }\n              }\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.handleHealthOrgRoundPopupClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgRoundPopup: false\n      }, function () {});\n    };\n\n    _this.sendResults = function () {\n      var _this$state2 = _this.state,\n          item = _this$state2.item,\n          checkTheStatus = _this$state2.checkTheStatus;\n      checkTheStatus = true;\n\n      _this.setState({\n        checkTheStatus: checkTheStatus\n      }, function () {});\n    };\n\n    _this.handleSelectHealthOrgRound = function (healthOrgRound) {\n      if (healthOrgRound && healthOrgRound.id) {\n        _this.setState({\n          healthOrgRound\n        }, function () {\n          var _this2 = this;\n\n          var _this$state3 = this.state,\n              healthOrgRound = _this$state3.healthOrgRound,\n              details = _this$state3.details;\n          details = [];\n          getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(function (result) {\n            var listEQASampleTube = result.data;\n\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\n              listEQASampleTube.forEach(function (tube) {\n                var eQAResultReportDetail = {};\n                eQAResultReportDetail.sampleTube = tube;\n                eQAResultReportDetail.checkValue = \"\";\n                eQAResultReportDetail.testValue = \"\";\n                eQAResultReportDetail.agglomeration = \"\";\n                eQAResultReportDetail.result = \"\";\n                details.push(eQAResultReportDetail);\n              });\n\n              _this2.setState({\n                details\n              });\n            }\n          });\n        });\n      }\n\n      _this.handleHealthOrgRoundPopupClose();\n    };\n\n    _this.handleExportPDF = function () {\n      _this.setState({\n        shouldOpenPrintDialog: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportSerodiaEditorDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView,\n          listHealthOrgRound = _this$props.listHealthOrgRound;\n      this.setState({\n        isRoleAdmin: isRoleAdmin,\n        isView: isView\n      });\n\n      if (item == null) {\n        item = {};\n      }\n\n      if (item && item.details && item.details.length > 0) {\n        item.details.sort(function (a, b) {\n          return a.orderNumber > b.orderNumber ? 1 : a.orderNumber === b.orderNumber ? a.sampleTube.code > b.sampleTube.code ? 1 : -1 : -1;\n        });\n      }\n\n      if (item.id == null) {\n        item[\"id\"] = null;\n        item[\"typeMethod\"] = 3;\n        item[\"otherReagent\"] = false;\n      }\n\n      if (listHealthOrgRound != null && listHealthOrgRound.length > 0) {\n        item[\"healthOrgRound\"] = listHealthOrgRound[0];\n      }\n\n      this.setState({\n        item: item,\n        listHealthOrgRound: listHealthOrgRound\n      });\n      this.setState(_objectSpread({}, item), function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state4 = this.state,\n          isView = _this$state4.isView,\n          isViewButton = _this$state4.isViewButton,\n          isRoleAdmin = _this$state4.isRoleAdmin,\n          healthOrgRound = _this$state4.healthOrgRound,\n          loading = _this$state4.loading;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          classes = _this$props2.classes,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: clsx(\"wrapperButton\", !loading && \"hidden\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"buttonProgress\",\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }\n      })), this.state.shouldOpenPrintDialog && /*#__PURE__*/React.createElement(EQAResultReportSerodiaPrint, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenPrintDialog,\n        handleOKEditClose: handleOKEditClose,\n        item: this.state.item,\n        pdf: true // isRoleAdmin={this.state.isRoleAdmin}\n        // isView={this.state.isView}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 13\n        }\n      }, !isView ? t(\"SaveUpdate\") : t(\"Details\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 15\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EQAResultReportSerodiaTabs, {\n        t: t,\n        i18n: i18n,\n        item: this.state.item,\n        isView: this.props.isView,\n        isRoleAdmin: this.props.isRoleAdmin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 11\n        }\n      }, (!isView || this.state.isRoleAdmin) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        type: \"submit\",\n        color: \"inherit\",\n        onClick: function onClick() {\n          return _this3.sendResults();\n        },\n        style: {\n          backgroundColor: \"#4caf50\",\n          color: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 15\n        }\n      }, t(\"EQAResultReportFastTest.sendResult\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"mr-16\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }\n      }, \" \", t(\"Cancel\")), (!isView || this.state.isRoleAdmin) && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        disabled: isViewButton,\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 15\n        }\n      }, t(\"Save\")), this.state.id && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\" // disabled={isViewButton}\n        ,\n        color: \"primary\",\n        type: \"button\",\n        onClick: this.handleExportPDF,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 15\n        }\n      }, t(\"Xuất PDF\")))));\n    }\n  }]);\n\n  return EQAResultReportSerodiaEditorDialog;\n}(Component);\n\nexport default EQAResultReportSerodiaEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportSerodia/EQAResultReportSerodiaEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","TextField","Icon","IconButton","FormControl","DialogTitle","DialogContent","DialogActions","Paper","FormHelperText","MenuItem","Checkbox","Select","FormControlLabel","ValidatorForm","TextValidator","technicianSearchByPage","saveItem","checkReagentByHealthOrgRound","getEQASampleTubeByHealthOrgEQARoundId","Autocomplete","ConstantList","AsynchronousAutocomplete","HealthOrgEQARoundPopup","searchByPage","reagentSearchByPage","Draggable","Breadcrumb","ConfirmationDialog","MuiPickersUtilsProvider","DateTimePicker","KeyboardDatePicker","DateFnsUtils","LocalConstants","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","toast","getCurrentUser","getListHealthOrgByUser","clsx","CircularProgress","EQAResultReportSerodiaTabs","exportToExcel","saveAs","EQAResultReportSerodiaPrint","configure","autoClose","draggable","limit","PaperComponent","props","MaterialButton","item","onSelect","EQAResultReportSerodiaEditorDialog","state","technician","round","healthOrg","rowsPerPage","page","listHealthOrgRound","roundLists","details","orderTest","shouldOpenSearchDialog","shouldOpenConfirmationDialog","listReagent","listTechnician","reagentExpiryDate","testDate","Date","reagentUnBoxDate","dateSubmitResults","isView","isRoleAdmin","typeMethod","isViewButton","loading","checkTheStatus","shouldOpenPrintDialog","listCheckValue","id","EQAResultReportDetail_TestValue","positive","name","negative","listTestValue","indertermine","listAgglomeration","Results","Not_Implemented","handleDialogClose","setState","handleChange","event","source","persist","isActive","target","checked","isFinalResult","value","handleRowDataCellChange","rowData","length","forEach","element","tableData","result","checkValue","testValue","agglomeration","openCircularProgress","handleExportExcel","t","then","res","info","blob","Blob","data","type","catch","err","handleFormSubmit","healthOrgRound","reagent","otherReagent","isCheck","el","CHECK_ERROR_RESULT","warning","response","status","success","handleHealthOrgRoundPopupClose","shouldOpenHealthOrgRoundPopup","sendResults","handleSelectHealthOrgRound","listEQASampleTube","tube","eQAResultReportDetail","sampleTube","push","handleExportPDF","open","handleClose","sort","a","b","orderNumber","code","classes","handleOKEditClose","i18n","overflowY","display","flexDirection","cursor","position","right","top","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Icon,\r\n  IconButton,\r\n  FormControl,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Paper,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Checkbox,\r\n  Select,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  technicianSearchByPage,\r\n  saveItem,\r\n  checkReagentByHealthOrgRound,\r\n  getEQASampleTubeByHealthOrgEQARoundId,\r\n} from \"./EQAResultReportSerodiaService\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\r\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\r\nimport Draggable from \"react-draggable\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  DateTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport LocalConstants from \"./Constants\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\r\nimport \"../../../styles/views/_loadding.scss\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport clsx from \"clsx\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EQAResultReportSerodiaTabs from \"./EQAResultReportSerodiaTabs\";\r\nimport { exportToExcel } from \"./EQAResultReportSerodiaService\";\r\nimport { saveAs } from \"file-saver\";\r\nimport EQAResultReportSerodiaPrint from \"./EQAResultReportSerodiaPrint\";\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nfunction MaterialButton(props) {\r\n  const item = props.item;\r\n  return (\r\n    <div>\r\n      <IconButton onClick={() => props.onSelect(item, 0)}>\r\n        <Icon color=\"primary\">edit</Icon>\r\n      </IconButton>\r\n      <IconButton onClick={() => props.onSelect(item, 1)}>\r\n        <Icon color=\"error\">Delete</Icon>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass EQAResultReportSerodiaEditorDialog extends Component {\r\n  state = {\r\n    technician: null,\r\n    round: null,\r\n    healthOrg: null,\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    listHealthOrgRound: [],\r\n    roundLists: [],\r\n    details: [],\r\n    orderTest: \"\",\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    listReagent: [],\r\n    listTechnician: [],\r\n    reagentExpiryDate: null,\r\n    testDate: new Date(),\r\n    reagentUnBoxDate: null,\r\n    dateSubmitResults: null,\r\n    isView: false,\r\n    isRoleAdmin: false,\r\n    typeMethod: 3,\r\n    isViewButton: false,\r\n    loading: false,\r\n    checkTheStatus: false,\r\n    shouldOpenPrintDialog: false,\r\n  };\r\n\r\n  listCheckValue = [\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\r\n      name: \"Dương tính\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\r\n      name: \"Âm tính\",\r\n    },\r\n  ];\r\n\r\n  listTestValue = [\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\r\n      name: \"Dương tính\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\r\n      name: \"Không xác định\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\r\n      name: \"Âm tính\",\r\n    },\r\n  ];\r\n\r\n  listAgglomeration = [\r\n    { id: 1, name: \" - \" },\r\n    { id: 2, name: \" +/- \" },\r\n    { id: 3, name: \" + \" },\r\n    { id: 4, name: \" ++ \" },\r\n  ];\r\n\r\n  //positive(1),//Dương tính\r\n  //indertermine(0),//Không xác định\r\n  //negative(-1),//Âm tính\r\n  //none(-2)//Không thực hiện\r\n  Results = [\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\r\n      name: \"Không thực hiện\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.negative,\r\n      name: \"Âm tính\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\r\n      name: \"Không xác định\",\r\n    },\r\n    {\r\n      id: LocalConstants.EQAResultReportDetail_TestValue.positive,\r\n      name: \"Dương tính\",\r\n    },\r\n  ];\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {}\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenPrintDialog: false,\r\n    });\r\n  };\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    if (source === \"isFinalResult\") {\r\n      this.setState({ isFinalResult: event.target.checked });\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleRowDataCellChange = (rowData, event) => {\r\n    let { details } = this.state;\r\n    if (details != null && details.length > 0) {\r\n      details.forEach((element) => {\r\n        if (\r\n          element.tableData != null &&\r\n          rowData != null &&\r\n          rowData.tableData != null &&\r\n          element.tableData.id == rowData.tableData.id\r\n        ) {\r\n          if (event.target.name == \"checkValue\") {\r\n            if (event.target.value != \"\" && event.target.value != null)\r\n              if (\r\n                element.result ==\r\n                LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n              ) {\r\n                element.result = \"\";\r\n              }\r\n            element.checkValue = event.target.value;\r\n          } else if (event.target.name == \"testValue\") {\r\n            if (event.target.value != \"\" && event.target.value != null)\r\n              if (\r\n                element.result ==\r\n                LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n              ) {\r\n                element.result = \"\";\r\n              }\r\n            element.testValue = event.target.value;\r\n          } else if (event.target.name == \"agglomeration\") {\r\n            if (event.target.value != \"\" && event.target.value != null)\r\n              if (\r\n                element.result ==\r\n                LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n              ) {\r\n                element.result = \"\";\r\n              }\r\n            element.agglomeration = event.target.value;\r\n          } else if (event.target.name == \"result\") {\r\n            if (\r\n              event.target.value ==\r\n              LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented\r\n            ) {\r\n              element.agglomeration = \"\";\r\n              element.testValue = \"\";\r\n              element.checkValue = \"\";\r\n            }\r\n            element.result = event.target.value;\r\n          }\r\n        }\r\n      });\r\n      this.setState({ details: details });\r\n    }\r\n  };\r\n  openCircularProgress = () => {\r\n    this.setState({ loading: true });\r\n  };\r\n  handleExportExcel = () => {\r\n    let { t } = this.props;\r\n    exportToExcel(this.state.id)\r\n      .then((res) => {\r\n        toast.info(this.props.t(\"general.successExport\"));\r\n        let blob = new Blob([res.data], {\r\n          type:\r\n            \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n        });\r\n        saveAs(blob, \"Ketqua.xlsx\");\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err);\r\n      });\r\n    // console.log(this.state);\r\n  };\r\n\r\n  handleFormSubmit = async () => {\r\n    await this.openCircularProgress();\r\n    let { t } = this.props;\r\n    let { checkTheStatus, item } = this.state;\r\n    let {\r\n      id,\r\n      details,\r\n      healthOrgRound,\r\n      reagent,\r\n      typeMethod,\r\n      otherReagent,\r\n    } = this.state.item;\r\n    let isCheck = false;\r\n    //Check null ket qua\r\n    if (details != null && details.length > 0) {\r\n      details.forEach((el) => {\r\n        if (el.result === null || el.result === \"\") {\r\n          isCheck = true;\r\n        }\r\n      });\r\n    } else {\r\n      isCheck = true;\r\n    }\r\n    if (isCheck) {\r\n      toast.info(t(\"EQAResultReportElisa.notResult\"));\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n    if (checkTheStatus) {\r\n      item[\"isFinalResult\"] = true;\r\n      item[\"dateSubmitResults\"] = new Date();\r\n      this.setState({ item: item });\r\n    }\r\n    //Check null du lieu\r\n    if (\r\n      healthOrgRound == null ||\r\n      healthOrgRound.id == null ||\r\n      reagent == null ||\r\n      reagent.id == null\r\n    ) {\r\n      toast.info(t(\"EQAResultReportElisa.notData\"));\r\n      this.setState({ loading: false });\r\n      return;\r\n    }\r\n\r\n    if (ConstantList.CHECK_ERROR_RESULT && !otherReagent) {\r\n      checkReagentByHealthOrgRound(\r\n        id,\r\n        healthOrgRound.id,\r\n        reagent.id,\r\n        typeMethod\r\n      ).then((res) => {\r\n        if (res.data) {\r\n          toast.warning(t(\"EqaResult.dulicateReagent\"));\r\n          this.setState({ loading: false });\r\n        } else {\r\n          if (id) {\r\n            this.setState({ isView: true, isViewButton: true });\r\n            saveItem({\r\n              ...this.state.item,\r\n            })\r\n              .then((response) => {\r\n                if (response.data != null && response.status == 200) {\r\n                  this.setState({ ...this.state.item });\r\n                  // this.props.handleOKEditClose();\r\n                  toast.success(t(\"mess_edit\"));\r\n                  this.setState({\r\n                    loading: false,\r\n                    isView: false,\r\n                    isViewButton: false,\r\n                  });\r\n                }\r\n              })\r\n              .catch(() => {\r\n                toast.warning(t(\"mess_edit_error\"));\r\n                this.setState({\r\n                  loading: false,\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                });\r\n              });\r\n          } else {\r\n            this.setState({ isView: true, isViewButton: true });\r\n            saveItem({\r\n              ...this.state.item,\r\n            })\r\n              .then((response) => {\r\n                if (response.data != null && response.status == 200) {\r\n                  this.state.item.id = response.data.id;\r\n                  this.setState({ ...this.state.item });\r\n                  // this.props.handleOKEditClose();\r\n                  toast.success(t(\"mess_add\"));\r\n                  this.setState({\r\n                    loading: false,\r\n                    isView: false,\r\n                    isViewButton: false,\r\n                  });\r\n                }\r\n              })\r\n              .catch(() => {\r\n                toast.warning(t(\"mess_add_error\"));\r\n                this.setState({\r\n                  loading: false,\r\n                  isView: false,\r\n                  isViewButton: false,\r\n                });\r\n              });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      if (id) {\r\n        this.setState({ isView: true, isViewButton: true });\r\n        saveItem({\r\n          ...this.state.item,\r\n        })\r\n          .then((response) => {\r\n            if (response.data != null && response.status == 200) {\r\n              this.setState({ ...this.state.item });\r\n              // this.props.handleOKEditClose();\r\n              toast.success(t(\"mess_edit\"));\r\n              this.setState({\r\n                loading: false,\r\n                isView: false,\r\n                isViewButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            toast.warning(t(\"mess_edit_error\"));\r\n            this.setState({\r\n              loading: false,\r\n              isView: false,\r\n              isViewButton: false,\r\n            });\r\n          });\r\n      } else {\r\n        this.setState({ isView: true, isViewButton: true });\r\n        saveItem({\r\n          ...this.state.item,\r\n        })\r\n          .then((response) => {\r\n            if (response.data != null && response.status == 200) {\r\n              this.state.item.id = response.data.id;\r\n              this.setState({ ...this.state.item });\r\n              // this.props.handleOKEditClose();\r\n              toast.success(t(\"mess_add\"));\r\n              this.setState({\r\n                loading: false,\r\n                isView: false,\r\n                isViewButton: false,\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              loading: false,\r\n              isView: false,\r\n              isViewButton: false,\r\n            });\r\n            toast.warning(t(\"mess_add_error\"));\r\n          });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    let {\r\n      open,\r\n      handleClose,\r\n      item,\r\n      isRoleAdmin,\r\n      isView,\r\n      listHealthOrgRound,\r\n    } = this.props;\r\n    this.setState({ isRoleAdmin: isRoleAdmin, isView: isView });\r\n    if (item == null) {\r\n      item = {};\r\n    }\r\n    if (item && item.details && item.details.length > 0) {\r\n      item.details.sort((a, b) =>\r\n        a.orderNumber > b.orderNumber\r\n          ? 1\r\n          : a.orderNumber === b.orderNumber\r\n          ? a.sampleTube.code > b.sampleTube.code\r\n            ? 1\r\n            : -1\r\n          : -1\r\n      );\r\n    }\r\n    if (item.id == null) {\r\n      item[\"id\"] = null;\r\n      item[\"typeMethod\"] = 3;\r\n      item[\"otherReagent\"] = false;\r\n    }\r\n\r\n    if (listHealthOrgRound != null && listHealthOrgRound.length > 0) {\r\n      item[\"healthOrgRound\"] = listHealthOrgRound[0];\r\n    }\r\n    this.setState({ item: item, listHealthOrgRound: listHealthOrgRound });\r\n    this.setState(\r\n      {\r\n        ...item,\r\n      },\r\n      function () {}\r\n    );\r\n  }\r\n\r\n  handleHealthOrgRoundPopupClose = () => {\r\n    this.setState({ shouldOpenHealthOrgRoundPopup: false }, function () {});\r\n  };\r\n  sendResults = () => {\r\n    let { item, checkTheStatus } = this.state;\r\n    checkTheStatus = true;\r\n    this.setState({ checkTheStatus: checkTheStatus }, () => {});\r\n  };\r\n\r\n  handleSelectHealthOrgRound = (healthOrgRound) => {\r\n    if (healthOrgRound && healthOrgRound.id) {\r\n      this.setState({ healthOrgRound }, function () {\r\n        let { healthOrgRound, details } = this.state;\r\n        details = [];\r\n        getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(\r\n          (result) => {\r\n            let listEQASampleTube = result.data;\r\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\r\n              listEQASampleTube.forEach((tube) => {\r\n                let eQAResultReportDetail = {};\r\n                eQAResultReportDetail.sampleTube = tube;\r\n                eQAResultReportDetail.checkValue = \"\";\r\n                eQAResultReportDetail.testValue = \"\";\r\n                eQAResultReportDetail.agglomeration = \"\";\r\n                eQAResultReportDetail.result = \"\";\r\n                details.push(eQAResultReportDetail);\r\n              });\r\n              this.setState({ details });\r\n            }\r\n          }\r\n        );\r\n      });\r\n    }\r\n    this.handleHealthOrgRoundPopupClose();\r\n  };\r\n  handleExportPDF = () => {\r\n    this.setState({\r\n      shouldOpenPrintDialog: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      isView,\r\n      isViewButton,\r\n      isRoleAdmin,\r\n      healthOrgRound,\r\n      loading,\r\n    } = this.state;\r\n    let { open, handleClose, classes, handleOKEditClose, t, i18n } = this.props;\r\n\r\n    return (\r\n      <Dialog open={open} maxWidth={\"lg\"} fullWidth={true}>\r\n        <div className={clsx(\"wrapperButton\", !loading && \"hidden\")}>\r\n          <CircularProgress className=\"buttonProgress\" size={24} />\r\n        </div>\r\n        {this.state.shouldOpenPrintDialog && (\r\n          <EQAResultReportSerodiaPrint\r\n            t={t}\r\n            i18n={i18n}\r\n            handleClose={this.handleDialogClose}\r\n            open={this.state.shouldOpenPrintDialog}\r\n            handleOKEditClose={handleOKEditClose}\r\n            item={this.state.item}\r\n            pdf={true}\r\n            // isRoleAdmin={this.state.isRoleAdmin}\r\n            // isView={this.state.isView}\r\n          />\r\n        )}\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n            <span className=\"mb-20\">\r\n              {!isView ? t(\"SaveUpdate\") : t(\"Details\")}\r\n            </span>\r\n            <IconButton\r\n              style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n              onClick={() => handleClose()}\r\n            >\r\n              <Icon color=\"error\" title={t(\"close\")}>\r\n                close\r\n              </Icon>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          {/* {this.state.shouldOpenConfirmationDialog && (\r\n            <ConfirmationDialog\r\n              title={t(\"confirm\")}\r\n              open={this.state.shouldOpenConfirmationDialog}\r\n              onConfirmDialogClose={this.handleDialogFinalResultClose}\r\n              onYesClick={this.handleFinalResult}\r\n              text={isFinalResult ? t(\"EqaResult.unFinalResultConfirm\") : t(\"EqaResult.FinalResultConfirm\")}\r\n              Yes={t(\"general.Yes\")}\r\n              No={t(\"general.No\")}\r\n            />\r\n          )} */}\r\n          <DialogContent dividers>\r\n            <Grid item xs={12}>\r\n              <EQAResultReportSerodiaTabs\r\n                t={t}\r\n                i18n={i18n}\r\n                item={this.state.item}\r\n                isView={this.props.isView}\r\n                isRoleAdmin={this.props.isRoleAdmin}\r\n              />\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n          \r\n            {(!isView || this.state.isRoleAdmin) && (\r\n              <Button\r\n                variant=\"contained\"\r\n                type=\"submit\"\r\n                color=\"inherit\"\r\n                onClick={() => this.sendResults()}\r\n                style={{ backgroundColor: \"#4caf50\", color: \"#fff\" }}\r\n              >\r\n                {t(\"EQAResultReportFastTest.sendResult\")}\r\n              </Button>\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              className=\"mr-16\"\r\n              color=\"secondary\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              {\" \"}\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {(!isView || this.state.isRoleAdmin) && (\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                {t(\"Save\")}\r\n              </Button>\r\n            )}\r\n            {this.state.id && (\r\n              <Button\r\n                variant=\"contained\"\r\n                // disabled={isViewButton}\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={this.handleExportPDF}\r\n              >\r\n                {t(\"Xuất PDF\")}\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAResultReportSerodiaEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}