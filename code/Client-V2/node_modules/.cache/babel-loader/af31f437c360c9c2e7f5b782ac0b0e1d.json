{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\page-layouts\\\\ChangePasswordPopup.jsx\";\nimport { Fab, Icon, Card, Grid, Divider, Button, DialogActions, Dialog, TextField } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport axios from \"axios\";\nimport ConstantList from \"../../appConfig\";\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_style.scss';\ntoast.configure({\n  autoClose: 3000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar ChangePasswordPopup = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChangePasswordPopup, _React$Component);\n\n  var _super = _createSuper(ChangePasswordPopup);\n\n  function ChangePasswordPopup() {\n    var _this;\n\n    _classCallCheck(this, ChangePasswordPopup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      oldPassword: '',\n      password: '',\n      confirmPassword: ''\n    };\n\n    _this.handleChange = function (name) {\n      return function (event) {\n        _this.setState({\n          [name]: event.target.value\n        });\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangePasswordPopup, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ValidatorForm.addValidationRule('isPasswordMatch', function (value) {\n        if (value !== _this2.state.password) {\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"handleChangePassword\",\n    value: function () {\n      var _handleChangePassword = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user, handleClose) {\n        var _this3 = this;\n\n        var t, url, isChangedOK;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                t = this.props.t;\n                user.password = this.state.password;\n                user.oldPassword = this.state.oldPassword;\n                user.confirmPassword = this.state.confirmPassword;\n                url = ConstantList.API_ENPOINT + \"/api/users/password/self\";\n                isChangedOK = false;\n                _context.next = 8;\n                return axios.put(url, user).then(function (response) {\n                  // console.log(response);\n                  isChangedOK = true;\n                  toast.success(t('general.success_update_password')); // alert('Bạn đã đối mật khẩu thành công');//Thay bằng thông báo thành công chuẩn\n                }).catch(function (err) {\n                  toast.warning(\"general.errorMessages_update_password\"); // alert('Có lỗi trong quá trình đổi mật khẩu');//Thay bằng thông báo lỗi chuẩn\n\n                  _this3.setState({\n                    errorMessage: err.message\n                  });\n                });\n\n              case 8:\n                if (!isChangedOK) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _context.next = 11;\n                return JwtAuthService.logout();\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleChangePassword(_x, _x2) {\n        return _handleChangePassword.apply(this, arguments);\n      }\n\n      return handleChangePassword;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n,\n          handleClose = _this$props.handleClose,\n          handleSelect = _this$props.handleSelect,\n          selectedItem = _this$props.selectedItem,\n          open = _this$props.open,\n          user = _this$props.user;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        onClose: handleClose,\n        open: open,\n        PaperProps: {\n          style: {\n            width: 500,\n            maxHeight: 800,\n            alignContent: 'center' //backgroundColor: 'Blue',\n            //color:'black'\n\n          }\n        },\n        PaperComponent: PaperComponent,\n        maxWidth: 'md',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, t(\"user.changePass\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        margin: \"dense\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 51\n          }\n        }, \" * \"), t('user.current_password')),\n        id: \"password-current\",\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        name: \"oldPassword\",\n        type: \"password\",\n        value: this.state.oldPassword,\n        onChange: this.handleChange('oldPassword'),\n        validators: ['required'],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        margin: \"dense\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 51\n          }\n        }, \" * \"), t('user.pass')),\n        id: \"password-current\",\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        name: \"password\",\n        type: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange('password'),\n        validators: ['required'],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        margin: \"dense\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 51\n          }\n        }, \" * \"), t('user.confirm_password')),\n        size: \"small\",\n        variant: \"outlined\",\n        id: \"confirm-password\",\n        className: \"w-100\",\n        name: \"confirmPassword\",\n        type: \"password\",\n        value: this.state.confirmPassword,\n        onChange: this.handleChange('confirmPassword'),\n        validators: ['required', 'isPasswordMatch'],\n        errorMessages: [t(\"general.errorMessages_required\"), t(\"general.isPasswordMatch\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-8 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }\n      }, t('general.cancel')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this4.handleChangePassword(user, handleClose);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, t('general.update')))));\n    }\n  }]);\n\n  return ChangePasswordPopup;\n}(React.Component);\n\nexport default ChangePasswordPopup;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/page-layouts/ChangePasswordPopup.jsx"],"names":["Fab","Icon","Card","Grid","Divider","Button","DialogActions","Dialog","TextField","createMuiTheme","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","DateFnsUtils","ValidatorForm","TextValidator","DialogContent","DialogTitle","Input","InputLabel","MenuItem","FormControl","Select","Draggable","Paper","Breadcrumb","SimpleCard","EgretProgressBar","axios","ConstantList","ReactCrop","JwtAuthService","toast","configure","autoClose","draggable","limit","PaperComponent","props","ChangePasswordPopup","state","oldPassword","password","confirmPassword","handleChange","name","event","setState","target","value","addValidationRule","user","handleClose","t","url","API_ENPOINT","isChangedOK","put","then","response","success","catch","err","warning","errorMessage","message","logout","i18n","handleSelect","selectedItem","open","style","width","maxHeight","alignContent","cursor","color","handleChangePassword"],"mappings":"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","sourcesContent":["import { Fab, Icon, Card, Grid, Divider, Button, DialogActions, Dialog, TextField } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\r\nimport axios from \"axios\";\r\nimport ConstantList from \"../../appConfig\";\r\nimport ReactCrop from 'react-image-crop';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport JwtAuthService from \"../../services/jwtAuthService\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../styles/views/_style.scss';\r\n\r\n\r\ntoast.configure({\r\n  autoClose: 3000,\r\n  draggable: false,\r\n  limit: 3\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass ChangePasswordPopup extends React.Component {\r\n\r\n  // handleChange = (prop) => (event) => {\r\n  //   this.setState()\r\n  // };\r\n  state = {\r\n    oldPassword: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  }\r\n  componentDidMount() {\r\n    ValidatorForm.addValidationRule('isPasswordMatch', (value) => {\r\n      if (value !== this.state.password) {\r\n        return false\r\n      }\r\n      return true\r\n    })\r\n  }\r\n  async handleChangePassword(user, handleClose) {\r\n    let { t } = this.props;\r\n    user.password = this.state.password;\r\n    user.oldPassword = this.state.oldPassword;\r\n    user.confirmPassword = this.state.confirmPassword;\r\n    const url = ConstantList.API_ENPOINT + \"/api/users/password/self\";\r\n    let isChangedOK = false;\r\n\r\n    await axios.put(url, user).then(response => {\r\n      // console.log(response);\r\n      isChangedOK = true;\r\n      toast.success(t('general.success_update_password'));\r\n      // alert('Bạn đã đối mật khẩu thành công');//Thay bằng thông báo thành công chuẩn\r\n    }).catch(err => {\r\n      toast.warning(\"general.errorMessages_update_password\");\r\n      // alert('Có lỗi trong quá trình đổi mật khẩu');//Thay bằng thông báo lỗi chuẩn\r\n      this.setState({ errorMessage: err.message });\r\n    })\r\n    if (isChangedOK) {\r\n      await JwtAuthService.logout();\r\n    }\r\n  }\r\n  handleChange = name => event => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n  render() {\r\n    const { t, i18n, handleClose, handleSelect, selectedItem, open, user } = this.props;\r\n    return (\r\n      <Dialog onClose={handleClose} open={open} PaperProps={{\r\n        style: {\r\n          width: 500,\r\n          maxHeight: 800,\r\n          alignContent: 'center'\r\n          //backgroundColor: 'Blue',\r\n          //color:'black'\r\n        },\r\n      }} PaperComponent={PaperComponent} maxWidth={'md'} fullWidth={true} >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <span className=\"styleColor\">{t(\"user.changePass\")}</span>\r\n        </DialogTitle>\r\n        <ValidatorForm ref=\"form\">\r\n          <DialogContent>\r\n            <Grid container spacing={1}>\r\n              <Grid item md={12} sm={12} xs={12}>\r\n                <FormControl fullWidth margin=\"dense\">\r\n                  <TextValidator\r\n                    label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>{t('user.current_password')}</span>}\r\n                    id=\"password-current\"\r\n                    className=\"w-100\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    name=\"oldPassword\"\r\n                    type=\"password\"\r\n                    value={this.state.oldPassword}\r\n                    onChange={this.handleChange('oldPassword')}\r\n                    validators={['required']}\r\n                    errorMessages={[t(\"general.errorMessages_required\")]}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={12} sm={12} xs={12}>\r\n                <FormControl fullWidth margin=\"dense\">\r\n                  <TextValidator\r\n                    label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>{t('user.pass')}</span>}\r\n                    id=\"password-current\"\r\n                    size = \"small\"\r\n                    variant = \"outlined\"\r\n                    className=\"w-100\"\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange('password')}\r\n                    validators={['required']}\r\n                    errorMessages={[t(\"general.errorMessages_required\")]}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n\r\n              <Grid item md={12} sm={12} xs={12}>\r\n                <FormControl fullWidth margin=\"dense\">\r\n                  <TextValidator\r\n                    label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>{t('user.confirm_password')}</span>}\r\n                    size = \"small\"\r\n                    variant = \"outlined\"\r\n                    id=\"confirm-password\"\r\n                    className=\"w-100\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.handleChange('confirmPassword')}\r\n                    validators={['required', 'isPasswordMatch']}\r\n                    errorMessages={[\r\n                      t(\"general.errorMessages_required\"),\r\n                      t(\"general.isPasswordMatch\"),\r\n                    ]}\r\n                  />\r\n                </FormControl>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              className=\"mb-16 mr-8 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => handleClose()}>{t('general.cancel')}\r\n            </Button>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => this.handleChangePassword(user, handleClose)}>{t('general.update')}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\nexport default ChangePasswordPopup;"]},"metadata":{},"sourceType":"module"}