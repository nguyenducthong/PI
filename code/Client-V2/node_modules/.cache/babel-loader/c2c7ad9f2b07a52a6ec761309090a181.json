{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\EgretLayout\\\\SharedCompoents\\\\Sidenav.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { navigations } from \"../../navigations\";\nimport { EgretVerticalNav } from \"egret\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport ConstantList from \"../../appConfig\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport localStorageService from \"../../services/localStorageService\";\nvar ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\n\nvar Sidenav = /*#__PURE__*/function (_Component) {\n  _inherits(Sidenav, _Component);\n\n  var _super = _createSuper(Sidenav);\n\n  function Sidenav() {\n    var _this;\n\n    _classCallCheck(this, Sidenav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {};\n\n    _this.updateSidebarMode = function (sidebarSettings) {\n      var _this$props = _this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings;\n      var activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n      var activeLayoutSettings = settings[activeLayoutSettingsName];\n      setLayoutSettings(_objectSpread(_objectSpread({}, settings), {}, {\n        [activeLayoutSettingsName]: _objectSpread(_objectSpread({}, activeLayoutSettings), {}, {\n          leftSidebar: _objectSpread(_objectSpread({}, activeLayoutSettings.leftSidebar), sidebarSettings)\n        })\n      }));\n    };\n\n    _this.renderOverlay = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this.updateSidebarMode({\n            mode: \"close\"\n          });\n        },\n        className: \"sidenav__overlay\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Sidenav, [{\n    key: \"getNavigation\",\n    value: function getNavigation() {\n      //let navigation=localStorageService.getSessionItem(\"navigations\");\n      var navigation = localStorageService.getLocalStorageItem(\"navigations\");\n\n      if (navigation && navigation.length > 0) {\n        return navigation;\n      } else {\n        return navigations;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Scrollbar, {\n        option: {\n          suppressScrollX: true\n        },\n        className: \"scrollable position-relative mobile_scroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, this.props.children, /*#__PURE__*/React.createElement(ViewEgretVerticalNav, {\n        navigation: this.getNavigation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      })), this.renderOverlay());\n    }\n  }]);\n\n  return Sidenav;\n}(Component);\n\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: state.layout.settings\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings\n})(Sidenav));","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/EgretLayout/SharedCompoents/Sidenav.jsx"],"names":["React","Component","Fragment","Scrollbar","withRouter","connect","PropTypes","navigations","EgretVerticalNav","setLayoutSettings","ConstantList","useTranslation","withTranslation","Trans","JwtAuthService","localStorageService","ViewEgretVerticalNav","Sidenav","state","updateSidebarMode","sidebarSettings","props","settings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","renderOverlay","mode","navigation","getLocalStorageItem","length","suppressScrollX","children","getNavigation","propTypes","func","isRequired","object","mapStateToProps","layout"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,cAAT,EAAyBC,eAAzB,EAA0CC,KAA1C,QAAuD,eAAvD;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,IAAMC,oBAAoB,GAAGJ,eAAe,GAAGJ,gBAAH,CAA5C;;IACMS,O;;;;;;;;;;;;;;;UACFC,K,GAAQ,E;;UACRC,iB,GAAoB,UAACC,eAAD,EAAqB;AAAA,wBACC,MAAKC,KADN;AAAA,UAC/BC,QAD+B,eAC/BA,QAD+B;AAAA,UACrBb,iBADqB,eACrBA,iBADqB;AAErC,UAAIc,wBAAwB,GAAGD,QAAQ,CAACE,YAAT,GAAwB,UAAvD;AACA,UAAIC,oBAAoB,GAAGH,QAAQ,CAACC,wBAAD,CAAnC;AAEAd,MAAAA,iBAAiB,iCACVa,QADU;AAEb,SAACC,wBAAD,mCACOE,oBADP;AAEIC,UAAAA,WAAW,kCACJD,oBAAoB,CAACC,WADjB,GAEJN,eAFI;AAFf;AAFa,SAAjB;AAUH,K;;UAEDO,a,GAAgB;AAAA,0BACZ;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAKR,iBAAL,CAAuB;AAAES,YAAAA,IAAI,EAAE;AAAR,WAAvB,CAAN;AAAA,SADb;AAEI,QAAA,SAAS,EAAC,kBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY;AAAA,K;;;;;;;oCAMA;AACZ;AACA,UAAIC,UAAU,GAAGd,mBAAmB,CAACe,mBAApB,CAAwC,aAAxC,CAAjB;;AACA,UAAID,UAAU,IAAIA,UAAU,CAACE,MAAX,GAAoB,CAAtC,EAAyC;AACrC,eAAOF,UAAP;AACH,OAFD,MAEO;AACH,eAAOtB,WAAP;AACH;AACJ;;;6BACQ;AACL,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,MAAM,EAAE;AAAEyB,UAAAA,eAAe,EAAE;AAAnB,SADZ;AAEI,QAAA,SAAS,EAAC,4CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,KAAKX,KAAL,CAAWY,QAJhB,eAKI,oBAAC,oBAAD;AAAsB,QAAA,UAAU,EAAE,KAAKC,aAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,EAQK,KAAKP,aAAL,EARL,CADJ;AAYH;;;;EA/CiB1B,S;;AAiDtBgB,OAAO,CAACkB,SAAR,GAAoB;AAChB1B,EAAAA,iBAAiB,EAAEH,SAAS,CAAC8B,IAAV,CAAeC,UADlB;AAEhBf,EAAAA,QAAQ,EAAEhB,SAAS,CAACgC,MAAV,CAAiBD;AAFX,CAApB;;AAIA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACrB,KAAD;AAAA,SAAY;AAChCT,IAAAA,iBAAiB,EAAEH,SAAS,CAAC8B,IAAV,CAAeC,UADF;AAEhCf,IAAAA,QAAQ,EAAEJ,KAAK,CAACsB,MAAN,CAAalB;AAFS,GAAZ;AAAA,CAAxB;;AAIA,eAAelB,UAAU,CACrBC,OAAO,CAACkC,eAAD,EAAkB;AACrB9B,EAAAA;AADqB,CAAlB,CAAP,CAEGQ,OAFH,CADqB,CAAzB","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { EgretVerticalNav } from \"egret\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport ConstantList from \"../../appConfig\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport localStorageService from \"../../services/localStorageService\";\nconst ViewEgretVerticalNav = withTranslation()(EgretVerticalNav);\nclass Sidenav extends Component {\n    state = {};\n    updateSidebarMode = (sidebarSettings) => {\n        let { settings, setLayoutSettings } = this.props;\n        let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n        let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n        setLayoutSettings({\n            ...settings,\n            [activeLayoutSettingsName]: {\n                ...activeLayoutSettings,\n                leftSidebar: {\n                    ...activeLayoutSettings.leftSidebar,\n                    ...sidebarSettings,\n                },\n            },\n        });\n    };\n\n    renderOverlay = () => (\n        <div\n            onClick={() => this.updateSidebarMode({ mode: \"close\" })}\n            className=\"sidenav__overlay\"\n        />\n    );\n    getNavigation() {\n        //let navigation=localStorageService.getSessionItem(\"navigations\");\n        let navigation = localStorageService.getLocalStorageItem(\"navigations\");\n        if (navigation && navigation.length > 0) {\n            return navigation;\n        } else {\n            return navigations;\n        }\n    }\n    render() {\n        return (\n            <Fragment>\n                <Scrollbar\n                    option={{ suppressScrollX: true }}\n                    className=\"scrollable position-relative mobile_scroll\"\n                >\n                    {this.props.children}\n                    <ViewEgretVerticalNav navigation={this.getNavigation()} />\n                </Scrollbar>\n                {this.renderOverlay()}\n            </Fragment>\n        );\n    }\n}\nSidenav.propTypes = {\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: state.layout.settings,\n});\nexport default withRouter(\n    connect(mapStateToProps, {\n        setLayoutSettings,\n    })(Sidenav)\n);\n"]},"metadata":{},"sourceType":"module"}