{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\ReferenceResult\\\\ReferenceResultReagent.jsx\";\nimport { FormControl, Input, Radio, InputAdornment, MenuItem, Select, Grid, InputLabel, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { getListTestResult, getReportHealthOrgNameByReagent, searchByPage as reagentSearchByPage, exportToExcel, getEQASample, searchPlanning, getEQARoundsByPlanning, saveReferenceResult } from \"./ReferenceResultReagentService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport { Helmet } from 'react-helmet';\nimport { toast } from 'react-toastify';\nimport { saveAs } from 'file-saver';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_style.scss';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nvar ReportHealthOrgNameByReagent = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReportHealthOrgNameByReagent, _React$Component);\n\n  var _super = _createSuper(ReportHealthOrgNameByReagent);\n\n  function ReportHealthOrgNameByReagent(props) {\n    var _this;\n\n    _classCallCheck(this, ReportHealthOrgNameByReagent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 25,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      listEQARound: [],\n      keyword: '',\n      round: null,\n      shouldOpenConfirmationEditDialog: false,\n      shouldOpenDialog: false,\n      sample: null,\n      reagent: null,\n      testMethod: null\n    };\n\n    _this.handleTextSearchChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.saveAllReferenceResult = function () {\n      var t = _this.props.t;\n      var _this$state = _this.state,\n          sample = _this$state.sample,\n          sampleId = _this$state.sampleId,\n          reagent = _this$state.reagent,\n          reagentId = _this$state.reagentId,\n          testMethod = _this$state.testMethod,\n          roundId = _this$state.roundId;\n      var searchObject = {};\n\n      if (roundId == null || roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      } else {\n        searchObject.roundId = roundId;\n      }\n\n      if (sample == null || sampleId == null || sampleId == \"\") {\n        searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.sampleId = sampleId;\n      }\n\n      if (testMethod == null || testMethod == 0) {\n        searchObject.testMethod = 0;\n      } else {\n        searchObject.testMethod = testMethod;\n      }\n\n      if (reagent == null || reagentId == null || reagentId == \"\") {\n        searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.reagentId = reagentId;\n      }\n\n      saveReferenceResult(searchObject).then(function (_ref) {\n        var data = _ref.data;\n        // this.setState({ itemList: [...data] })\n        // console.log(data)\n        toast.info(t(\"EQAResultReportConclusion.update_result_success\"));\n      });\n    };\n\n    _this.updatePageData = function () {\n      var t = _this.props.t;\n      var _this$state2 = _this.state,\n          sample = _this$state2.sample,\n          sampleId = _this$state2.sampleId,\n          reagent = _this$state2.reagent,\n          reagentId = _this$state2.reagentId,\n          testMethod = _this$state2.testMethod,\n          roundId = _this$state2.roundId;\n      var searchObject = {};\n\n      if (roundId == null || roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      } else {\n        searchObject.roundId = roundId;\n      }\n\n      if (sample == null || sampleId == null || sampleId == \"\") {\n        searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.sampleId = sampleId;\n      }\n\n      if (testMethod == null || testMethod == 0) {\n        searchObject.testMethod = 0;\n      } else {\n        searchObject.testMethod = testMethod;\n      }\n\n      if (reagent == null || reagentId == null || reagentId == \"\") {\n        searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.reagentId = reagentId;\n      }\n\n      getListTestResult(searchObject).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data)\n        });\n      });\n    };\n\n    _this.handleFilterEQARound = function (event, round, reason, details) {\n      if (round != null) {\n        // console.log(round)\n        getEQASample(round.id).then(function (data) {\n          var p = {};\n          var listSample = [];\n\n          var list = _toConsumableArray(data.data);\n\n          list.forEach(function (element) {\n            p = _objectSpread({}, element.eqaSample);\n            listSample.push(p);\n          });\n\n          _this.setState({\n            sample: null,\n            listSample: list\n          }, function () {});\n        });\n\n        _this.setState({\n          HealthOrgEQARound: round,\n          round: round,\n          roundId: round.id\n        }, function () {\n          _this.updatePageData();\n        });\n\n        if (reason == 'clear') {\n          _this.setState({\n            round: null,\n            itemList: []\n          });\n        }\n      } else {\n        _this.setState({\n          HealthOrgEQARound: null,\n          sample: null,\n          listSample: [],\n          itemList: []\n        });\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.exportToExcel = function () {\n      var t = _this.props.t;\n      var _this$state3 = _this.state,\n          sample = _this$state3.sample,\n          sampleId = _this$state3.sampleId,\n          reagent = _this$state3.reagent,\n          reagentId = _this$state3.reagentId,\n          testMethod = _this$state3.testMethod,\n          roundId = _this$state3.roundId,\n          itemList = _this$state3.itemList;\n      var searchObject = {};\n\n      if (_this.state.roundId == null || _this.state.roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      } else {\n        searchObject.roundId = roundId;\n      }\n\n      if (sample == null || sampleId == null || sampleId == \"\") {\n        searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.sampleId = sampleId;\n      }\n\n      if (testMethod == null || testMethod == 0) {\n        searchObject.testMethod = 0;\n      } else {\n        searchObject.testMethod = testMethod;\n      }\n\n      if (reagent == null || reagentId == null || reagentId == \"\") {\n        searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.reagentId = reagentId;\n      }\n\n      if (itemList != null && itemList.length > 0) {\n        exportToExcel(searchObject).then(function (res) {\n          var blob = new Blob([res.data], {\n            type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n          });\n          saveAs(blob, 'EQAResultReport.xlsx');\n        }).catch(function (err) {// console.log(err)\n        });\n      } else {\n        toast.warning(t(\"no_data\"));\n      }\n    };\n\n    _this.handleFilterEQAPlanning = function (event, item) {\n      // console.log(item);\n      if (item != null && item.id != null) {\n        _this.setState({\n          planning: item ? item : null,\n          planningId: item ? item.id : null\n        }, function () {\n          if (_this.state.planningId != null) {\n            getEQARoundsByPlanning(_this.state.planningId).then(function (_ref3) {\n              var data = _ref3.data;\n\n              // console.log(data)\n              if (data != null && data.length > 0) {\n                _this.setState({\n                  HealthOrgEQARound: null,\n                  sample: null,\n                  itemList: [],\n                  listEQARound: _toConsumableArray(data)\n                });\n              }\n            });\n          }\n        });\n      } else {\n        _this.setState({\n          HealthOrgEQARound: null,\n          sample: null,\n          listEQARound: [],\n          listSample: [],\n          itemList: []\n        });\n      }\n    };\n\n    _this.handleFilterEQASample = function (event, item) {\n      _this.setState({\n        sample: item ? item : null,\n        sampleId: item ? item.id : null\n      }, function () {\n        if (_this.state.sampleId != null) {\n          _this.updatePageData();\n        }\n      });\n    };\n\n    _this.handleTestMethodChange = function (event, item) {\n      _this.setState({\n        testMethod: event.target.value,\n        reagent: null\n      }, function () {\n        _this.updatePageData();\n\n        var searchObject = {\n          pageIndex: 0,\n          pageSize: 1000000,\n          testType: _this.state.testMethod\n        };\n        reagentSearchByPage(searchObject).then(function (_ref4) {\n          var data = _ref4.data;\n\n          _this.setState({\n            listReagent: _toConsumableArray(data.content)\n          });\n        });\n      });\n    };\n\n    _this.selectReagent = function (event, item) {\n      _this.setState({\n        reagent: item ? item : null,\n        reagentId: item ? item.id : \"\"\n      }, function () {\n        if (_this.state.reagentId != null) {\n          _this.updatePageData();\n        }\n      });\n    };\n\n    _this.result = function () {\n      var t = _this.props.t;\n      var _this$state4 = _this.state,\n          sample = _this$state4.sample,\n          sampleId = _this$state4.sampleId,\n          reagent = _this$state4.reagent,\n          reagentId = _this$state4.reagentId,\n          testMethod = _this$state4.testMethod,\n          roundId = _this$state4.roundId;\n      var searchObject = {};\n\n      if (roundId == null || roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      } else {\n        searchObject.roundId = roundId;\n      }\n\n      if (sample == null || sampleId == null || sampleId == \"\") {\n        searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.sampleId = sampleId;\n      }\n\n      if (testMethod == null || testMethod == 0) {\n        searchObject.testMethod = 0;\n      } else {\n        searchObject.testMethod = testMethod;\n      }\n\n      if (reagent == null || reagentId == null || reagentId == \"\") {\n        searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.reagentId = reagentId;\n      }\n\n      getListTestResult(searchObject).then(function (_ref5) {\n        var data = _ref5.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data)\n        });\n      });\n    };\n\n    _this.handleTextSearchChange = _this.handleTextSearchChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReportHealthOrgNameByReagent, [{\n    key: \"search\",\n    value: function search() {\n      var _this2 = this;\n\n      var t = this.props.t;\n      var _this$state5 = this.state,\n          sample = _this$state5.sample,\n          sampleId = _this$state5.sampleId,\n          reagent = _this$state5.reagent,\n          reagentId = _this$state5.reagentId,\n          testMethod = _this$state5.testMethod,\n          roundId = _this$state5.roundId;\n      var searchObject = {};\n\n      if (roundId == null || roundId == \"\") {\n        toast.warn(t(\"EQASampleSet.please_select_eqa_round\"));\n        return;\n      } else {\n        searchObject.roundId = roundId;\n      }\n\n      if (sample == null || sampleId == null || sampleId == \"\") {\n        searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.sampleId = sampleId;\n      }\n\n      if (testMethod == null || testMethod == 0) {\n        searchObject.testMethod = 0;\n      } else {\n        searchObject.testMethod = testMethod;\n      }\n\n      if (reagent == null || reagentId == null || reagentId == \"\") {\n        searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\n      } else {\n        searchObject.reagentId = reagentId;\n      }\n\n      getListTestResult(searchObject).then(function (_ref6) {\n        var data = _ref6.data;\n\n        _this2.setState({\n          itemList: _toConsumableArray(data),\n          totalElements: data.length\n        }); // console.log(data)\n\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var searchObject = {\n        pageIndex: 1,\n        pageSize: 1000000\n      };\n      searchPlanning(searchObject).then(function (_ref7) {\n        var data = _ref7.data;\n\n        _this3.setState({\n          listPlanning: _toConsumableArray(data.content)\n        });\n      }); // this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state6 = this.state,\n          keyword = _this$state6.keyword,\n          listEQARound = _this$state6.listEQARound,\n          reagent = _this$state6.reagent,\n          listReagent = _this$state6.listReagent,\n          round = _this$state6.round,\n          sample = _this$state6.sample,\n          listSample = _this$state6.listSample,\n          listPlanning = _this$state6.listPlanning,\n          planning = _this$state6.planning,\n          HealthOrgEQARound = _this$state6.HealthOrgEQARound;\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000,\n        testType: this.state.testMethod\n      };\n      var columns = [{\n        title: t(\"ResultsOfTheUnits.STT\"),\n        width: \"50\",\n        align: \"left\",\n        headerStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.tableData.id + 1;\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.reagentName\"),\n        field: \"reagentName\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.sampleCode\"),\n        field: \"sampleCode\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.totalNumberOfTest\"),\n        field: \"totalNumberOfTest\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.negativeRatio\"),\n        field: \"negativeRatio\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 28\n            }\n          }, rowData.negativeRatio.toFixed(2), \"  % \");\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.indertermineRatio\"),\n        field: \"indertermineRatio\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 11\n            }\n          }, rowData.indertermineRatio.toFixed(2), \"  % \");\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.positiveRatio\"),\n        field: \"positiveRatio\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 11\n            }\n          }, rowData.positiveRatio.toFixed(2), \"  % \");\n        }\n      }, {\n        title: t(\"ReferenceResultReagent.referenceResult\"),\n        field: \"referenceResult\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.referenceResult == -3 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 12\n            }\n          }, t(\"SampleManagement.sample-list.Result.noEvaluate\")) : rowData.referenceResult == -2 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 14\n            }\n          }, t(\"SampleManagement.sample-list.Result.none\")) : rowData.referenceResult == -1 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4  px-8 py-2 \",\n            style: {\n              backgroundColor: \"#3366FF\"\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 16\n            }\n          }, t(\"SampleManagement.sample-list.Result.negative\")) : rowData.referenceResult == 0 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 18\n            }\n          }, t(\"SampleManagement.sample-list.Result.indertermine\")) : rowData.referenceResult == 1 ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4  text-white px-8 py-2 \",\n            style: {\n              backgroundColor: \"#f44336\"\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 20\n            }\n          }, t(\"SampleManagement.sample-list.Result.positive\")) : rowData.referenceResult == null ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4  px-8 py-2 \",\n            style: {\n              backgroundColor: \"#FFFF00\"\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 22\n            }\n          }, t(\"SampleManagement.sample-list.Result.get_PI_result\")) : /*#__PURE__*/React.createElement(\"small\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 24\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }\n      }, t(\"ReferenceResultReagent.title\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"ReportResult.title\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t(\"ReferenceResultReagent.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"align-bottom mb-8 mr-8\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.exportToExcel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 15\n        }\n      }, t('general.exportToExcel')), /*#__PURE__*/React.createElement(Button, {\n        className: \"align-bottom mb-8 mr-8\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.saveAllReferenceResult,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }\n      }, t('EQAResultReportConclusion.update_result'))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        container: true,\n        md: 8,\n        sm: 12,\n        xs: 12,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listPlanning,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.code;\n        },\n        onChange: this.handleFilterEQAPlanning,\n        value: planning,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t('ResultsOfTheUnits.eqaPlanning'),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 42\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listEQARound,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.code;\n        },\n        onChange: this.handleFilterEQARound,\n        value: HealthOrgEQARound ? HealthOrgEQARound : \"\",\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t('general.fillterByRoundEQA'),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 42\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listSample ? listSample : [],\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.code;\n        },\n        onChange: this.handleFilterEQASample,\n        value: sample ? sample : \"\",\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t('general.fillterBySampleEQA'),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 42\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 15\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 0,\n        xs: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        container: true,\n        md: 8,\n        sm: 12,\n        xs: 12,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"testType\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 15\n        }\n      }, t(\"ReferenceResultReagent.testMethods\")), /*#__PURE__*/React.createElement(Select, {\n        label: t(\"ReferenceResultReagent.testMethods\"),\n        value: this.state.testMethod,\n        onChange: function onChange(result) {\n          return _this4.handleTestMethodChange(result);\n        },\n        inputProps: {\n          name: \"result\",\n          id: \"result-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 17\n        }\n      }, \" None \"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 17\n        }\n      }, \"Elisa\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 17\n        }\n      }, \"FastTest\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 17\n        }\n      }, \"Serodia\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 17\n        }\n      }, \"Eclia\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listReagent ? listReagent : [],\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.name;\n        },\n        onChange: this.selectReagent,\n        value: reagent ? reagent : \"\",\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t(\"EqaResult.reagent\"),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 40\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 13\n        }\n      }, this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        Yes: t('general.Yes'),\n        No: t('general.No'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 17\n        }\n      }), this.state.shouldOpenConfirmationEditDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationEditDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationEdit,\n        text: t('EQAResultReportFastTest.editConfirm'),\n        Yes: t('general.Yes'),\n        No: t('general.No'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('ReportHealthOrgNameByReagent.list'),\n        data: this.state.itemList,\n        columns: columns //   parentChildData={(row, rows) => {\n        //     var list = rows.find(a => a.id === row.parentId);\n        //     return list;\n        //   }}\n        ,\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this4.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref8) {\n          var from = _ref8.from,\n              to = _ref8.to,\n              count = _ref8.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return ReportHealthOrgNameByReagent;\n}(React.Component);\n\nexport default ReportHealthOrgNameByReagent;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/ReferenceResult/ReferenceResultReagent.jsx"],"names":["FormControl","Input","Radio","InputAdornment","MenuItem","Select","Grid","InputLabel","MuiThemeProvider","IconButton","Icon","TextField","Button","TableHead","TableCell","TableRow","Checkbox","TablePagination","moment","React","Component","ReactDOM","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","getListTestResult","getReportHealthOrgNameByReagent","searchByPage","reagentSearchByPage","exportToExcel","getEQASample","searchPlanning","getEQARoundsByPlanning","saveReferenceResult","Breadcrumb","ConfirmationDialog","Link","SearchIcon","Autocomplete","searchByPageEQARound","getCurrentUser","getListHealthOrgByUser","AsynchronousAutocomplete","Helmet","toast","saveAs","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","ReportHealthOrgNameByReagent","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","listEQARound","keyword","round","shouldOpenConfirmationEditDialog","shouldOpenDialog","sample","reagent","testMethod","handleTextSearchChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","saveAllReferenceResult","sampleId","reagentId","roundId","searchObject","warn","then","info","updatePageData","handleFilterEQARound","reason","details","id","p","listSample","list","forEach","element","eqaSample","push","HealthOrgEQARound","setPage","setRowsPerPage","handleChangePage","newPage","length","res","blob","Blob","type","catch","err","warning","handleFilterEQAPlanning","planning","planningId","handleFilterEQASample","handleTestMethodChange","pageIndex","pageSize","testType","listReagent","content","selectReagent","result","bind","listPlanning","columns","title","width","align","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","render","rowData","tableData","field","negativeRatio","toFixed","indertermineRatio","positiveRatio","referenceResult","backgroundColor","name","path","option","code","params","handleDialogClose","handleConfirmationResponse","handleConfirmationEdit","selection","actionsColumnIndex","paging","rowStyle","index","maxBodyHeight","minBodyHeight","color","padding","toolbar","Toolbar","rows","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import { FormControl, Input, Radio, InputAdornment, MenuItem, Select, Grid, InputLabel, MuiThemeProvider, IconButton, Icon, TextField, Button, TableHead, TableCell, TableRow, Checkbox, TablePagination } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { getListTestResult, getReportHealthOrgNameByReagent, searchByPage as reagentSearchByPage, exportToExcel, getEQASample, searchPlanning, getEQARoundsByPlanning, saveReferenceResult } from \"./ReferenceResultReagentService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\"\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport { Helmet } from 'react-helmet';\r\nimport { toast } from 'react-toastify';\r\nimport { saveAs } from 'file-saver';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../styles/views/_style.scss';\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3\r\n});\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n      <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\r\n      <Icon fontSize=\"small\" color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\nclass ReportHealthOrgNameByReagent extends React.Component {\r\n  state = {\r\n    rowsPerPage: 25,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    listEQARound: [],\r\n    keyword: '',\r\n    round: null,\r\n    shouldOpenConfirmationEditDialog: false,\r\n    shouldOpenDialog: false,\r\n    sample: null,\r\n    reagent: null,\r\n    testMethod: null\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTextSearchChange = this.handleTextSearchChange.bind(this);\r\n  }\r\n\r\n  handleTextSearchChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n  handleKeyDownEnterSearch = (e) => {\r\n    if (e.key === 'Enter') {\r\n      this.search()\r\n    }\r\n  }\r\n  search() {\r\n    const { t } = this.props;\r\n    let { sample, sampleId, reagent, reagentId, testMethod, roundId } = this.state;\r\n    let searchObject = {}\r\n    if (roundId == null || roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    } else {\r\n      searchObject.roundId = roundId;\r\n    }\r\n    if (sample == null || sampleId == null || sampleId == \"\") {\r\n      searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\"\r\n    } else {\r\n      searchObject.sampleId = sampleId;\r\n    }\r\n    if (testMethod == null || testMethod == 0) {\r\n      searchObject.testMethod = 0;\r\n    } else {\r\n      searchObject.testMethod = testMethod;\r\n    }\r\n    if (reagent == null || reagentId == null || reagentId == \"\") {\r\n      searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\r\n    } else {\r\n      searchObject.reagentId = reagentId;\r\n    }\r\n\r\n    getListTestResult(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data], totalElements: data.length })\r\n      // console.log(data)\r\n    }\r\n    );\r\n  }\r\n  saveAllReferenceResult = () => {\r\n    const { t } = this.props;\r\n    let { sample, sampleId, reagent, reagentId, testMethod, roundId } = this.state;\r\n    let searchObject = {}\r\n    if (roundId == null || roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    } else {\r\n      searchObject.roundId = roundId;\r\n    }\r\n    if (sample == null || sampleId == null || sampleId == \"\") {\r\n      searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\"\r\n    } else {\r\n      searchObject.sampleId = sampleId;\r\n    }\r\n    if (testMethod == null || testMethod == 0) {\r\n      searchObject.testMethod = 0;\r\n    } else {\r\n      searchObject.testMethod = testMethod;\r\n    }\r\n    if (reagent == null || reagentId == null || reagentId == \"\") {\r\n      searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\r\n    } else {\r\n      searchObject.reagentId = reagentId;\r\n    }\r\n\r\n    saveReferenceResult(searchObject).then(({ data }) => {\r\n      // this.setState({ itemList: [...data] })\r\n      // console.log(data)\r\n      toast.info(t(\"EQAResultReportConclusion.update_result_success\"));\r\n    }\r\n    );\r\n  }\r\n  componentDidMount() {\r\n    let searchObject = { pageIndex: 1, pageSize: 1000000 }\r\n    searchPlanning(searchObject).then(({ data }) => {\r\n      this.setState({ listPlanning: [...data.content] });\r\n    });\r\n    // this.updatePageData();\r\n  }\r\n\r\n  updatePageData = () => {\r\n    const { t } = this.props;\r\n    let { sample, sampleId, reagent, reagentId, testMethod, roundId } = this.state;\r\n    let searchObject = {}\r\n    if (roundId == null || roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    } else {\r\n      searchObject.roundId = roundId;\r\n    }\r\n    if (sample == null || sampleId == null || sampleId == \"\") {\r\n      searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\"\r\n    } else {\r\n      searchObject.sampleId = sampleId;\r\n    }\r\n    if (testMethod == null || testMethod == 0) {\r\n      searchObject.testMethod = 0;\r\n    } else {\r\n      searchObject.testMethod = testMethod;\r\n    }\r\n    if (reagent == null || reagentId == null || reagentId == \"\") {\r\n      searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\r\n    } else {\r\n      searchObject.reagentId = reagentId;\r\n    }\r\n\r\n    getListTestResult(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data]})\r\n    }\r\n    );\r\n  };\r\n  handleFilterEQARound = (event, round, reason, details) => {\r\n    if (round != null) {\r\n      // console.log(round)\r\n      getEQASample(round.id).then((data) => {\r\n        let p = {}\r\n        let listSample = []\r\n        let list = [...data.data]\r\n        list.forEach(element => {\r\n          p = { ...element.eqaSample }\r\n          listSample.push(p)\r\n        });\r\n        this.setState({ sample: null, listSample: list }, () => {\r\n        })\r\n      })\r\n      this.setState({ HealthOrgEQARound: round, round: round, roundId: round.id }, () => {\r\n        this.updatePageData();\r\n      });\r\n      if (reason == 'clear') {\r\n        this.setState({ round: null, itemList: [] })\r\n      }\r\n    } else {\r\n      this.setState({\r\n        HealthOrgEQARound: null,\r\n        sample: null,\r\n        listSample: [],\r\n        itemList: []\r\n      })\r\n    }\r\n  }\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  exportToExcel = () => {\r\n    const { t } = this.props;\r\n    let { sample, sampleId, reagent, reagentId, testMethod, roundId, itemList } = this.state;\r\n    let searchObject = {}\r\n    if (this.state.roundId == null || this.state.roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    } else {\r\n      searchObject.roundId = roundId;\r\n    }\r\n    if (sample == null || sampleId == null || sampleId == \"\") {\r\n      searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\"\r\n    } else {\r\n      searchObject.sampleId = sampleId;\r\n    }\r\n    if (testMethod == null || testMethod == 0) {\r\n      searchObject.testMethod = 0;\r\n    } else {\r\n      searchObject.testMethod = testMethod;\r\n    }\r\n    if (reagent == null || reagentId == null || reagentId == \"\") {\r\n      searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\r\n    } else {\r\n      searchObject.reagentId = reagentId;\r\n    }\r\n    if (itemList != null && itemList.length > 0) {\r\n      exportToExcel(searchObject).then((res) => {\r\n        let blob = new Blob([res.data], {\r\n          type:\r\n            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        })\r\n        saveAs(blob, 'EQAResultReport.xlsx')\r\n      })\r\n        .catch((err) => {\r\n          // console.log(err)\r\n        })\r\n    } else {\r\n      toast.warning(t(\"no_data\"));\r\n    }\r\n\r\n  }\r\n\r\n  handleFilterEQAPlanning = (event, item) => {\r\n    // console.log(item);\r\n    if (item != null && item.id != null) {\r\n      this.setState({ planning: item ? item : null, planningId: item ? item.id : null }, () => {\r\n        if (this.state.planningId != null) {\r\n          getEQARoundsByPlanning(this.state.planningId).then(({ data }) => {\r\n            // console.log(data)\r\n            if (data != null && data.length > 0) {\r\n              this.setState({ HealthOrgEQARound: null, sample: null, itemList: [], listEQARound: [...data] });\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      this.setState({\r\n        HealthOrgEQARound: null,\r\n        sample: null,\r\n        listEQARound: [],\r\n        listSample: [],\r\n        itemList: []\r\n      })\r\n    }\r\n  }\r\n  handleFilterEQASample = (event, item) => {\r\n    this.setState({ sample: item ? item : null, sampleId: item ? item.id : null }, () => {\r\n      if (this.state.sampleId != null) {\r\n        this.updatePageData();\r\n      }\r\n    })\r\n  }\r\n  handleTestMethodChange = (event, item) => {\r\n    this.setState({ testMethod: event.target.value, reagent: null }, () => {\r\n      this.updatePageData();\r\n      let searchObject = { pageIndex: 0, pageSize: 1000000, testType: this.state.testMethod };\r\n\r\n      reagentSearchByPage(searchObject).then(({ data }) => {\r\n        this.setState({ listReagent: [...data.content] })\r\n      }\r\n      );\r\n    })\r\n  }\r\n  selectReagent = (event, item) => {\r\n    this.setState({ reagent: item ? item : null, reagentId: item ? item.id : \"\" }, () => {\r\n      if (this.state.reagentId != null) {\r\n        this.updatePageData();\r\n      }\r\n    })\r\n  }\r\n  result = () => {\r\n    const { t } = this.props;\r\n    let { sample, sampleId, reagent, reagentId, testMethod, roundId } = this.state;\r\n    let searchObject = {}\r\n    if (roundId == null || roundId == \"\") {\r\n      toast.warn(t(\"EQASampleSet.please_select_eqa_round\"))\r\n      return\r\n    } else {\r\n      searchObject.roundId = roundId;\r\n    }\r\n    if (sample == null || sampleId == null || sampleId == \"\") {\r\n      searchObject.sampleId = \"00000000-0000-0000-0000-000000000000\"\r\n    } else {\r\n      searchObject.sampleId = sampleId;\r\n    }\r\n    if (testMethod == null || testMethod == 0) {\r\n      searchObject.testMethod = 0;\r\n    } else {\r\n      searchObject.testMethod = testMethod;\r\n    }\r\n    if (reagent == null || reagentId == null || reagentId == \"\") {\r\n      searchObject.reagentId = \"00000000-0000-0000-0000-000000000000\";\r\n    } else {\r\n      searchObject.reagentId = reagentId;\r\n    }\r\n\r\n    getListTestResult(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data] })\r\n    }\r\n    );\r\n  }\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let { keyword, listEQARound, reagent, listReagent, round, sample, listSample, listPlanning, planning, HealthOrgEQARound } = this.state;\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000, testType: this.state.testMethod };\r\n    let columns = [\r\n      {\r\n        title: t(\"ResultsOfTheUnits.STT\"), width: \"50\", align: \"left\",\r\n        headerStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => ((rowData.tableData.id + 1))\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.reagentName\"), field: \"reagentName\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"250px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"250px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.sampleCode\"), field: \"sampleCode\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.totalNumberOfTest\"), field: \"totalNumberOfTest\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.negativeRatio\"), field: \"negativeRatio\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => <span>{rowData.negativeRatio.toFixed(2)}  % </span>\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.indertermineRatio\"), field: \"indertermineRatio\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <span>{rowData.indertermineRatio.toFixed(2)}  % </span>\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.positiveRatio\"), field: \"positiveRatio\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <span>{rowData.positiveRatio.toFixed(2)}  % </span>\r\n      },\r\n      {\r\n        title: t(\"ReferenceResultReagent.referenceResult\"), field: \"referenceResult\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => rowData.referenceResult == -3 ?\r\n          (<small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n            {t(\"SampleManagement.sample-list.Result.noEvaluate\")}\r\n          </small>)\r\n          : rowData.referenceResult == -2 ?\r\n            (<small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n              {t(\"SampleManagement.sample-list.Result.none\")}\r\n            </small>)\r\n            : rowData.referenceResult == -1 ?\r\n              (<small className=\"border-radius-4  px-8 py-2 \" style={{ backgroundColor: \"#3366FF\" }}>\r\n                {t(\"SampleManagement.sample-list.Result.negative\")}\r\n              </small>)\r\n              : rowData.referenceResult == 0 ?\r\n                (<small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\r\n                  {t(\"SampleManagement.sample-list.Result.indertermine\")}\r\n                </small>)\r\n                : rowData.referenceResult == 1 ?\r\n                  (<small className=\"border-radius-4  text-white px-8 py-2 \" style={{ backgroundColor: \"#f44336\" }}>\r\n                    {t(\"SampleManagement.sample-list.Result.positive\")}\r\n                  </small>)\r\n                  : rowData.referenceResult == null ?\r\n                    (<small className=\"border-radius-4  px-8 py-2 \" style={{ backgroundColor: \"#FFFF00\" }}>\r\n                      {t(\"SampleManagement.sample-list.Result.get_PI_result\")}\r\n                    </small>)\r\n                    : (<small></small>)\r\n      },\r\n\r\n    ];\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div className=\"mb-sm-30\">\r\n          <Helmet>\r\n            <title>{t(\"ReferenceResultReagent.title\")} | {t(\"web_site\")}</title>\r\n          </Helmet>\r\n          <Breadcrumb routeSegments={[{ name: t(\"ReportResult.title\"), path: \"/directory/apartment\" }, { name: t(\"ReferenceResultReagent.title\") }]} />\r\n        </div>\r\n        <Grid container spacing={2}>\r\n          <Grid item md={4} sm={12} xs={12}>\r\n            \r\n              <Button\r\n                className=\"align-bottom mb-8 mr-8\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.exportToExcel}\r\n              >\r\n                {t('general.exportToExcel')}\r\n              </Button>\r\n       \r\n           \r\n              <Button\r\n                className=\"align-bottom mb-8 mr-8\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.saveAllReferenceResult}\r\n              >\r\n                {t('EQAResultReportConclusion.update_result')}\r\n              </Button>\r\n        \r\n\r\n          </Grid>\r\n          {/* <Grid item md={3} sm={6} xs={12}>\r\n           \r\n          </Grid> */}\r\n          <Grid item container md={8} sm={12} xs={12} spacing={1}>\r\n            <Grid item md={4} sm={12} xs={12}>\r\n              <Autocomplete\r\n                size=\"small\"\r\n                id=\"combo-box\"\r\n                options={listPlanning}\r\n                className=\"flex-end\"\r\n                getOptionLabel={(option) => option.code}\r\n                onChange={this.handleFilterEQAPlanning}\r\n                value={planning}\r\n                renderInput={(params) => <TextField {...params}\r\n                  label={t('ResultsOfTheUnits.eqaPlanning')}\r\n                  variant=\"outlined\"\r\n                />}\r\n              />\r\n            </Grid>\r\n            <Grid item md={4} sm={12} xs={12}>\r\n              <Autocomplete\r\n                size=\"small\"\r\n                id=\"combo-box\"\r\n                options={listEQARound}\r\n                className=\"flex-end\"\r\n                getOptionLabel={(option) => option.code}\r\n                onChange={this.handleFilterEQARound}\r\n                value={HealthOrgEQARound ? HealthOrgEQARound : \"\"}\r\n                renderInput={(params) => <TextField {...params}\r\n                  label={t('general.fillterByRoundEQA')}\r\n                  variant=\"outlined\"\r\n                />}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item md={4} sm={12} xs={12}>\r\n              <Autocomplete\r\n                size=\"small\"\r\n                id=\"combo-box\"\r\n                options={listSample ? listSample : []}\r\n                className=\"flex-end\"\r\n                getOptionLabel={(option) => option.code}\r\n                onChange={this.handleFilterEQASample}\r\n                value={sample ? sample : \"\"}\r\n                renderInput={(params) => <TextField {...params}\r\n                  label={t('general.fillterBySampleEQA')}\r\n                  variant=\"outlined\"\r\n                />}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          {/* <Grid item md={6} sm={10} xs={12}>\r\n\r\n          </Grid> */}\r\n          <Grid item md={4} sm={0} xs={0}>\r\n          </Grid>\r\n          <Grid item container md={8} sm={12} xs={12} spacing={1}>\r\n          <Grid item md={4} sm={12} xs={12}>\r\n            <FormControl className=\"w-100\" size=\"small\" variant=\"outlined\">\r\n              <InputLabel htmlFor=\"testType\">{t(\"ReferenceResultReagent.testMethods\")}</InputLabel>\r\n              <Select\r\n                label={t(\"ReferenceResultReagent.testMethods\")}\r\n                value={this.state.testMethod}\r\n                onChange={(result) => this.handleTestMethodChange(result)}\r\n                inputProps={{\r\n                  name: \"result\",\r\n                  id: \"result-simple\"\r\n                }}\r\n              >\r\n                <MenuItem value={0}> None </MenuItem>\r\n                <MenuItem value={1}>{\"Elisa\"}</MenuItem>\r\n                <MenuItem value={2}>{\"FastTest\"}</MenuItem>\r\n                <MenuItem value={3}>{\"Serodia\"}</MenuItem>\r\n                <MenuItem value={4}>{\"Eclia\"}</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n\r\n          <Grid item md={4} sm={12} xs={12}>\r\n            <Autocomplete\r\n              size=\"small\"\r\n              id=\"combo-box\"\r\n              options={listReagent ? listReagent : []}\r\n              className=\"flex-end\"\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={this.selectReagent}\r\n              value={reagent ? reagent : \"\"}\r\n              renderInput={(params) => <TextField {...params}\r\n                label={t(\"EqaResult.reagent\")}\r\n                variant=\"outlined\"\r\n              />}\r\n            />\r\n          </Grid>\r\n          </Grid>\r\n         \r\n          {/* <Grid item md={3} sm={6} xs={12}>\r\n                    <Button\r\n                        className=\"mb-16 align-bottom\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.result}\r\n                        >\r\n                        {t('general.result')}\r\n                        </Button>\r\n          </Grid> */}\r\n          <Grid item xs={12}>\r\n            <div>\r\n\r\n\r\n              {this.state.shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={this.state.shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                  Yes={t('general.Yes')}\r\n                  No={t('general.No')}\r\n                />\r\n              )}\r\n              {this.state.shouldOpenConfirmationEditDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={this.state.shouldOpenConfirmationEditDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationEdit}\r\n                  text={t('EQAResultReportFastTest.editConfirm')}\r\n                  Yes={t('general.Yes')}\r\n                  No={t('general.No')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('ReportHealthOrgNameByReagent.list')}\r\n              data={this.state.itemList}\r\n              columns={columns}\r\n              //   parentChildData={(row, rows) => {\r\n              //     var list = rows.find(a => a.id === row.parentId);\r\n              //     return list;\r\n              //   }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: (rowData, index) => ({\r\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                }),\r\n                maxBodyHeight: '450px',\r\n                minBodyHeight: '370px',\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color: '#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={this.state.totalElements}\r\n              rowsPerPage={this.state.rowsPerPage}\r\n              page={this.state.page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default ReportHealthOrgNameByReagent;"]},"metadata":{},"sourceType":"module"}