{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\IntroduceTheProgram\\\\IntroduceTheProgramDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogActions, FormControlLabel, Switch, DialogTitle, DialogContent, Icon, IconButton } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { generateRandomId } from \"utils\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\nimport EditorForm from \"./EditorForm\";\nimport { addNewMessage, updateMessage, checkCodeMessage } from \"./IntroduceTheProgramService\";\nimport IntroduceTheProgramDialogTab from \"./IntroduceTheProgramDialogTab\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })));\n} // Đây là dialog thông báo\n\n\nvar IntroduceTheProgramDialog = /*#__PURE__*/function (_Component) {\n  _inherits(IntroduceTheProgramDialog, _Component);\n\n  var _super = _createSuper(IntroduceTheProgramDialog);\n\n  function IntroduceTheProgramDialog() {\n    var _this;\n\n    _classCallCheck(this, IntroduceTheProgramDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      isView: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"checked\") {\n        _this.setState({\n          active: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.item.id;\n      var code = _this.state.item.code;\n      var t = _this.props.t;\n      checkCodeMessage(id, code).then(function (result) {\n        if (result.data) {\n          toast.warning(t(\"mess_code\"));\n        } else {\n          if (!id) {\n            addNewMessage(_this.state.item).then(function (_ref) {\n              var data = _ref.data;\n\n              if (data != null && data.id != null) {\n                id = data.id;\n\n                _this.setState({\n                  item: data\n                });\n              }\n\n              toast.success(t(\"mess_add\"));\n            });\n          } else {\n            updateMessage(_this.state.item).then(function (_ref2) {\n              var data = _ref2.data;\n              toast.success(t(\"mess_edit\"));\n            });\n          }\n        }\n      });\n    };\n\n    _this.handleChangeContent = function (content) {\n      _this.setState({\n        content: content\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(IntroduceTheProgramDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState({\n        item: item\n      }, function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var isView = this.state.isView;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"lg\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, this.state.item.id ? t(\"update\") : t(\"Add\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IntroduceTheProgramDialogTab, {\n        t: t,\n        i18n: i18n,\n        item: this.state.item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, t(\"Cancel\")), !isView && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, t(\"Save\")))));\n    }\n  }]);\n\n  return IntroduceTheProgramDialog;\n}(Component);\n\nexport default IntroduceTheProgramDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/IntroduceTheProgram/IntroduceTheProgramDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControlLabel","Switch","DialogTitle","DialogContent","Icon","IconButton","ValidatorForm","TextValidator","generateRandomId","Draggable","Paper","toast","EditorForm","addNewMessage","updateMessage","checkCodeMessage","IntroduceTheProgramDialogTab","Checkbox","configure","autoClose","draggable","limit","PaperComponent","props","IntroduceTheProgramDialog","state","isView","handleChange","event","source","persist","setState","active","target","checked","name","value","handleFormSubmit","id","item","code","t","then","result","data","warning","success","handleChangeContent","content","open","handleClose","handleOKEditClose","i18n","cursor","position","right","top","overflowY","display","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Icon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { generateRandomId } from \"utils\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport EditorForm from \"./EditorForm\";\r\nimport { addNewMessage, updateMessage, checkCodeMessage } from \"./IntroduceTheProgramService\";\r\nimport IntroduceTheProgramDialogTab from \"./IntroduceTheProgramDialogTab\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit: 3,\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\n// Đây là dialog thông báo\r\nclass IntroduceTheProgramDialog extends Component {\r\n  state = {\r\n    isView: false,\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"checked\") {\r\n      this.setState({ active: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state.item;\r\n    let { code } = this.state.item;\r\n    let { t } = this.props;\r\n    checkCodeMessage(id, code).then((result) => {\r\n      if (result.data) {\r\n        toast.warning(t(\"mess_code\"));\r\n      } else {\r\n        if (!id) {\r\n          addNewMessage(this.state.item).then(({ data }) => {\r\n            if (data != null && data.id != null) {\r\n              id = data.id;\r\n              this.setState({ item: data });\r\n            }\r\n            toast.success(t(\"mess_add\"));\r\n          });\r\n        } else {\r\n          updateMessage(this.state.item).then(({ data }) => {\r\n            toast.success(t(\"mess_edit\"));\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState({ item: item }, () => {});\r\n  }\r\n  handleChangeContent = (content) => {\r\n    this.setState({ content: content });\r\n  };\r\n\r\n  render() {\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    let { isView } = this.state;\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"lg\"}\r\n        fullWidth={true}\r\n      >\r\n        <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\">\r\n            {(this.state.item.id ? t(\"update\") : t(\"Add\"))}\r\n          </span>\r\n          <IconButton\r\n            style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }}\r\n            onClick={() => handleClose()}\r\n          >\r\n            <Icon color=\"error\" title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <DialogContent dividers>\r\n            <IntroduceTheProgramDialogTab\r\n              t={t}\r\n              i18n={i18n}\r\n              item={this.state.item}\r\n            />\r\n          </DialogContent>\r\n\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => this.props.handleClose()}\r\n            >\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            {!isView && (\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                {t(\"Save\")}\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IntroduceTheProgramDialog;\r\n"]},"metadata":{},"sourceType":"module"}