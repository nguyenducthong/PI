{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\dashboard\\\\Analytics.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport { Grid, Card, Icon, IconButton, Button, Checkbox, Fab, Avatar, Hidden, TextField } from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport DashboardWelcomeCard from \"../cards/DashboardWelcomeCard\";\nimport DashboardWelcomeHealthOrgCard from \"../cards/DashboardWelcomeHealthOrgCard\";\nimport AreaChart from \"../charts/echarts/AreaChart\";\nimport { format } from \"date-fns\";\nimport ModifiedAreaChart from \"./ModifiedAreaChart\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport ConstantList from \"../../appConfig\";\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport { Helmet } from \"react-helmet\";\nimport ReactEcharts from \"echarts-for-react\"; // import HomePage from \"../HomePage/HomePage\";\n// import Tab from \"../IntroduceTheProgram/Tab\";\n\nimport { getCurrentUser, getEQARound, countSampleTubeByEQARound } from \"./DashboardService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\"; //let isAdmin=false;\n\nvar Dashboard1 = /*#__PURE__*/function (_Component) {\n  _inherits(Dashboard1, _Component);\n\n  var _super = _createSuper(Dashboard1);\n\n  function Dashboard1(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard1);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      user: {},\n      isAdmin: false,\n      isHealthOrg: false,\n      isUser: false,\n      numberOfEQARound: 0,\n      eqaRoundList: [],\n      selectedEQARound: {},\n      barChartData: [],\n      pieChartData: []\n    };\n\n    _this.checkIsAdmin = function () {\n      _this.setState({\n        isAdmin: false\n      });\n\n      if (_this.state.user != null && _this.state.user.roles != null && _this.state.user.roles.length > 0) {\n        _this.state.user.roles.forEach(function (element) {\n          if (element.name == 'ROLE_ADMIN') {\n            _this.setState({\n              isAdmin: true\n            });\n\n            return true;\n          }\n        });\n      }\n    };\n\n    _this.handleSelectEQARound = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(selectedEQARound) {\n        var pieChartData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.getPieChartData(selectedEQARound.id);\n\n              case 2:\n                pieChartData = _context.sent;\n\n                _this.setState({\n                  pieChartData,\n                  selectedEQARound\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Dashboard1, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var user, pieChartData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                user = JwtAuthService.getLoginUser();\n\n                if (user != null && user.roles != null && user.roles.length > 0) {\n                  this.setState({\n                    isHealthOrg: false,\n                    isAdmin: false,\n                    isUser: false\n                  });\n                  user.roles.forEach(function (role) {\n                    if (role.name == \"ROLE_ADMIN\") {\n                      _this2.setState({\n                        isAdmin: true\n                      });\n                    } else if (role.name == \"ROLE_HEALTH_ORG\") {\n                      _this2.setState({\n                        isHealthOrg: true\n                      });\n                    } else if (role.name == \"ROLE_USER\") {\n                      _this2.setState({\n                        isUser: true\n                      });\n                    }\n                  });\n                }\n\n                pieChartData = null;\n                this.setState({\n                  selectedEQARound,\n                  barChartData,\n                  pieChartData\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          t = _this$props.t,\n          i18n = _this$props.i18n; //this.checkIsAdmin();\n\n      var isAdmin = this.state.isAdmin;\n      var _this$state = this.state,\n          barChartData = _this$state.barChartData,\n          pieChartData = _this$state.pieChartData;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"analytics m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, t(\"Dashboard.dashboard\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.dashboard\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Dashboard1;\n}(Component);\n\nexport default withStyles({}, {\n  withTheme: true\n})(Dashboard1);","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/dashboard/Analytics.jsx"],"names":["React","Component","Fragment","Grid","Card","Icon","IconButton","Button","Checkbox","Fab","Avatar","Hidden","TextField","Breadcrumb","SimpleCard","EgretProgressBar","DashboardWelcomeCard","DashboardWelcomeHealthOrgCard","AreaChart","format","ModifiedAreaChart","withStyles","useTranslation","withTranslation","Trans","ConstantList","JwtAuthService","Helmet","ReactEcharts","getCurrentUser","getEQARound","countSampleTubeByEQARound","Autocomplete","Dashboard1","props","state","user","isAdmin","isHealthOrg","isUser","numberOfEQARound","eqaRoundList","selectedEQARound","barChartData","pieChartData","checkIsAdmin","setState","roles","length","forEach","element","name","handleSelectEQARound","getPieChartData","id","getLoginUser","role","theme","t","i18n","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  Grid,\n  Card,\n  Icon,\n  IconButton,\n  Button,\n  Checkbox,\n  Fab,\n  Avatar,\n  Hidden,\n  TextField\n} from \"@material-ui/core\";\nimport { Breadcrumb, SimpleCard, EgretProgressBar } from \"egret\";\nimport DashboardWelcomeCard from \"../cards/DashboardWelcomeCard\";\nimport DashboardWelcomeHealthOrgCard from \"../cards/DashboardWelcomeHealthOrgCard\";\nimport AreaChart from \"../charts/echarts/AreaChart\";\nimport { format } from \"date-fns\";\nimport ModifiedAreaChart from \"./ModifiedAreaChart\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport ConstantList from \"../../appConfig\";\nimport JwtAuthService from \"../../services/jwtAuthService\";\nimport { Helmet } from \"react-helmet\";\nimport ReactEcharts from \"echarts-for-react\";\n// import HomePage from \"../HomePage/HomePage\";\n// import Tab from \"../IntroduceTheProgram/Tab\";\n\nimport {\n  getCurrentUser,\n  getEQARound,\n  countSampleTubeByEQARound\n} from \"./DashboardService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n//let isAdmin=false;\nclass Dashboard1 extends Component {\n  state = {\n    user: {},\n    isAdmin: false,\n    isHealthOrg: false,\n    isUser: false,\n    numberOfEQARound: 0,\n    eqaRoundList: [],\n    selectedEQARound: {},\n    barChartData: [],\n    pieChartData: []\n  };\n  constructor(props) {\n    super(props);\n  }\n  checkIsAdmin = ()=>{\n    this.setState({isAdmin:false})\n    if(this.state.user!=null && this.state.user.roles!=null && this.state.user.roles.length>0){\n      this.state.user.roles.forEach(element => {\n        if(element.name=='ROLE_ADMIN'){\n          this.setState({isAdmin:true})\n          return true;\n        }\n      });\n    }\n  }\n\n  handleSelectEQARound = async selectedEQARound => {\n    const pieChartData = await this.getPieChartData(selectedEQARound.id);\n    this.setState({\n      pieChartData,\n      selectedEQARound\n    });\n  };\n \n  async componentWillMount() {\n    let  user=JwtAuthService.getLoginUser();\n    if (user != null && user.roles != null && user.roles.length > 0) {\n \n      this.setState({\n        isHealthOrg: false,\n        isAdmin: false,\n        isUser: false\n      });      \n      user.roles.forEach(role => {      \n        if (role.name == \"ROLE_ADMIN\") {\n          this.setState({ isAdmin: true });\n        } else if (role.name == \"ROLE_HEALTH_ORG\") {\n          this.setState({ isHealthOrg: true });\n        } else if (role.name == \"ROLE_USER\") {\n          this.setState({ isUser: true });\n        } \n      });\n    }\n    var pieChartData = null;\n    this.setState({\n      selectedEQARound,\n      barChartData,\n      pieChartData\n    });\n  }\n\n  render() {\n    \n    let { theme, t, i18n } = this.props;\n    //this.checkIsAdmin();\n    let isAdmin = this.state.isAdmin;\n    const {\n  \n      barChartData,\n      pieChartData\n    } = this.state;\n    \n    return (\n      <div className=\"analytics m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Helmet>\n            <title>\n              {t(\"Dashboard.dashboard\")} | {t(\"web_site\")}\n            </title>\n          </Helmet>\n\n          <div className=\"mb-sm-30\">\n            <Breadcrumb routeSegments={[{ name: t(\"Dashboard.dashboard\") }]} />\n          </div>\n        </div>\n        <Grid container spacing={3}>\n          <Grid item lg={12} md={12} sm={12} xs={12}>   \n      \n          {/* {isAdmin && (\n            <Tab t={t}/>\n          )}\n          {!isAdmin && (\n            <HomePage t={t} />\n          )} */}\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(Dashboard1);\n"]},"metadata":{},"sourceType":"module"}