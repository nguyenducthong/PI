{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\User\\\\User.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, IconButton, Icon, TablePagination, Button, TextField, InputAdornment, Input } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { findUserByUserName, searchByPage, getItemById, getListHealthOrgByUser, SearchUserByUserName, searchByDto } from \"./UserService\";\nimport UserEditorDialog from \"./UserEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport shortid from \"shortid\";\nimport { saveAs } from 'file-saver';\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"edit\")));\n}\n\nvar User = /*#__PURE__*/function (_Component) {\n  _inherits(User, _Component);\n\n  var _super = _createSuper(User);\n\n  function User() {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      keyword: '',\n      rowsPerPage: 10,\n      page: 0,\n      eQAHealthOrgType: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {}; //searchObject.text = this.state.keyword;\n\n      searchObject.text = _this.state.keyword.trim();\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByDto(searchObject).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleDownload = function () {\n      var blob = new Blob([\"Hello, world!\"], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"hello world.txt\");\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.setPage(0);\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteUser = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditUser = function (item) {\n      getItemById(item.id).then(function (result) {\n        _this.setState({\n          item: result.data,\n          shouldOpenEditorDialog: true\n        });\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"search\",\n    // search() {\n    //   this.setState({ page: 0 }, function () {\n    //     var searchObject = {};\n    //     searchObject.text = this.state.keyword;\n    //     searchObject.pageIndex = 1;\n    //     searchObject.pageSize = this.state.rowsPerPage;\n    //     findUserByUserName(searchObject.text, searchObject.pageIndex, searchObject.pageSize).then(({ data }) => {\n    //       this.setState({ itemList: [...data.content], totalElements: data.totalElements })\n    //     });\n    //   });\n    // }\n    value: function search() {\n      var _this2 = this;\n\n      this.setState({\n        page: 0\n      }, function () {\n        var searchObject = {};\n        searchObject.text = _this2.state.keyword.trim();\n        searchObject.pageIndex = _this2.state.page + 1;\n        searchObject.pageSize = _this2.state.rowsPerPage;\n        searchByDto(searchObject).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this2.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      var columns = [{\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref3) {\n                  var data = _ref3.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this3.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this3.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 28\n            }\n          });\n        }\n      }, {\n        title: t(\"username\"),\n        field: \"username\",\n        width: \"150\"\n      }, {\n        title: t(\"user.displayName\"),\n        field: \"person.displayName\",\n        width: \"150\"\n      }, {\n        title: t(\"general.email\"),\n        field: \"email\",\n        align: \"left\",\n        width: \"150\"\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"Dashboard.manage\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t('user.title')\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date(),\n            isAddNew: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }\n      }, t('Add')), shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        text: t('DeleteAllConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: t('EnterSearch'),\n        type: \"text\",\n        name: \"keyword\",\n        value: keyword,\n        onChange: this.handleTextChange,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        className: \"w-100 mb-16 mr-10 stylePlaceholder\",\n        id: \"search_box\",\n        placeholder: t('general.enterSearch'),\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this3.search(keyword);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(UserEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: itemList,\n        columns: columns //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        ,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        } // options={{\n        //   selection: false,\n        //   actionsColumnIndex: 0,\n        //   paging: false,\n        //   search: false\n        // }}\n        ,\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows; // this.setState({selectedItems:rows});\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref4) {\n          var from = _ref4.from,\n              to = _ref4.to,\n              count = _ref4.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }\n      })));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nexport default User;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/User/User.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","TextField","InputAdornment","Input","Link","SearchIcon","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","findUserByUserName","searchByPage","getItemById","getListHealthOrgByUser","SearchUserByUserName","searchByDto","UserEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","MaterialButton","props","t","i18n","item","onSelect","User","state","keyword","rowsPerPage","page","eQAHealthOrgType","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","numSelected","rowCount","handleTextChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","searchObject","text","trim","pageIndex","pageSize","then","data","itemList","content","handleDownload","blob","Blob","type","handleDialogClose","handleOKEditClose","handleDeleteUser","id","handleEditUser","result","handleEditItem","handleDelete","handleDeleteAll","handleDeleteList","columns","title","field","align","width","render","rowData","method","parent","alert","name","path","startDate","Date","endDate","isAddNew","position","top","right","handleConfirmationResponse","row","rows","list","find","a","parentId","Toolbar","selection","actionsColumnIndex","paging","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","headerStyle","color","padding","toolbar","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  Input\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { findUserByUserName, searchByPage, getItemById, getListHealthOrgByUser,SearchUserByUserName,searchByDto} from \"./UserService\";\r\nimport UserEditorDialog from \"./UserEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n      <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    {/* <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton> */}\r\n  </div>;\r\n}\r\n\r\nclass User extends Component {\r\n  state = {\r\n    keyword: '',\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    eQAHealthOrgType: [],\r\n    item: {},\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false\r\n  };\r\n  numSelected = 0;\r\n  rowCount = 0;\r\n\r\n  handleTextChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === 'Enter') {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  // search() {\r\n  //   this.setState({ page: 0 }, function () {\r\n  //     var searchObject = {};\r\n  //     searchObject.text = this.state.keyword;\r\n  //     searchObject.pageIndex = 1;\r\n  //     searchObject.pageSize = this.state.rowsPerPage;\r\n  //     findUserByUserName(searchObject.text, searchObject.pageIndex, searchObject.pageSize).then(({ data }) => {\r\n  //       this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n  //     });\r\n  //   });\r\n  // }\r\n  search() {\r\n    this.setState({ page: 0 },()=>{\r\n      var searchObject = {};\r\n    searchObject.text = this.state.keyword.trim();\r\n    searchObject.pageIndex = this.state.page +1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByDto(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n    })\r\n    \r\n  }\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    //searchObject.text = this.state.keyword;\r\n    searchObject.text = this.state.keyword.trim();\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n\r\n    searchByDto(searchObject).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    });\r\n\r\n\r\n  };\r\n\r\n  handleDownload = () => {\r\n    var blob = new Blob([\"Hello, world!\"], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, \"hello world.txt\");\r\n  }\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n    this.setPage(0)\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteUser = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleEditUser = item => {\r\n    getItemById(item.id).then((result) => {\r\n      this.setState({\r\n        item: result.data,\r\n        shouldOpenEditorDialog: true\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  handleEditItem = item => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true\r\n    });\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleDeleteAll = (event) => {\r\n    this.handleDeleteList(this.data).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n    }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      keyword,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      item,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      shouldOpenConfirmationDeleteAllDialog\r\n    } = this.state;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.id).then(({ data }) => {\r\n                if (data.parent === null) {\r\n                  data.parent = {};\r\n                }\r\n                this.setState({\r\n                  item: data,\r\n                  shouldOpenEditorDialog: true\r\n                });\r\n              })\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n      { title: t(\"username\"), field: \"username\", width: \"150\" },\r\n      { title: t(\"user.displayName\"), field: \"person.displayName\", width: \"150\" },\r\n      { title: t(\"general.email\"), field: \"email\", align: \"left\", width: \"150\" },\r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"Dashboard.manage\"), path: \"/directory/apartment\" },{ name: t('user.title') }]} />\r\n        </div>\r\n\r\n        <Grid container spacing={3}>\r\n          \r\n          <Grid item lg={5} md={5} sm={5} xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date(), isAddNew: true });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                text={t('DeleteAllConfirm')}\r\n              />\r\n            )}\r\n            </Grid>\r\n            {/* <TextField\r\n              label={t('EnterSearch')}\r\n              className=\"mb-16 mr-10\"\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              onChange={this.handleTextChange} />\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\" onClick={() => this.search(keyword)}>\r\n              {t('Search')}\r\n            </Button> */}\r\n\r\n            <Grid item lg={7} md={7} sm={7} xs={12}>\r\n            <Input\r\n              label={t('EnterSearch')}\r\n              type=\"text\"\r\n              name=\"keyword\"\r\n              value={keyword}\r\n              onChange={this.handleTextChange}\r\n              onKeyDown={this.handleKeyDownEnterSearch}\r\n              className=\"w-100 mb-16 mr-10 stylePlaceholder\"\r\n              id=\"search_box\"\r\n              placeholder={t('general.enterSearch')}\r\n              startAdornment={\r\n                <InputAdornment >\r\n                  <Link to=\"#\">\r\n                    <SearchIcon\r\n                    onClick={() => this.search(keyword)}\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"0\",\r\n                      right: \"0\"\r\n                    }} /></Link>\r\n                </InputAdornment>\r\n              }\r\n            />\r\n          </Grid>\r\n\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div>\r\n              {shouldOpenEditorDialog && (\r\n                <UserEditorDialog t={t} i18n={i18n}\r\n                  handleClose={this.handleDialogClose}\r\n                  open={shouldOpenEditorDialog}\r\n                  handleOKEditClose={this.handleOKEditClose}\r\n                  item={item}\r\n                />\r\n              )}\r\n\r\n              {shouldOpenConfirmationDialog && (\r\n                <ConfirmationDialog\r\n                  title={t(\"confirm\")}\r\n                  open={shouldOpenConfirmationDialog}\r\n                  onConfirmDialogClose={this.handleDialogClose}\r\n                  onYesClick={this.handleConfirmationResponse}\r\n                  text={t('DeleteConfirm')}\r\n                />\r\n              )}\r\n            </div>\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={itemList}\r\n              columns={columns}\r\n              //parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\r\n              parentChildData={(row, rows) => {\r\n                var list = rows.find(a => a.id === row.parentId);\r\n                return list;\r\n              }}\r\n              // options={{\r\n              //   selection: false,\r\n              //   actionsColumnIndex: 0,\r\n              //   paging: false,\r\n              //   search: false\r\n              // }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n                // this.setState({selectedItems:rows});\r\n              }}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: (rowData, index) => ({\r\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                maxBodyHeight: '450px',\r\n                minBodyHeight: '370px',\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n            <TablePagination\r\n              align=\"left\"\r\n              className=\"px-16\"\r\n              rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n              component=\"div\"\r\n              labelRowsPerPage={t('general.rows_per_page')}\r\n              labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n              count={totalElements}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              backIconButtonProps={{\r\n                \"aria-label\": \"Previous Page\"\r\n              }}\r\n              nextIconButtonProps={{\r\n                \"aria-label\": \"Next Page\"\r\n              }}\r\n              onChangePage={this.handleChangePage}\r\n              onChangeRowsPerPage={this.setRowsPerPage}\r\n            />\r\n          </Grid>\r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}