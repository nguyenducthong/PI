{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrgSampleTransferStatus\\\\EQAHealthOrgSampleTransferStatusTable.jsx\";\nimport { InputAdornment, Input, Grid, MuiThemeProvider, IconButton, Button, Icon, TextField, TablePagination } from \"@material-ui/core\";\nimport React from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { searchByPage, getItemById, changeSampleTransferStatus, changeSampleTransferStatusRef, checkCountReport } from \"./EQAHealthOrgSampleTransferStatusServices\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport LocalConstants from \"./Constants\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SampleTransferStatusEditorDialog from \"./SampleTransferStatusEditorDialog\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport moment from \"moment\";\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"local_shipping\")));\n}\n\nfunction StatusReturn(props) {\n  var _useTranslation2 = useTranslation(),\n      t = _useTranslation2.t,\n      i18n = _useTranslation2.i18n;\n\n  var item = props.item;\n\n  if (item && item.status == 0) {\n    //mới\n    return /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-light-gray px-8 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, t(\"EQAHealthOrgRoundRegister.Status.New\"));\n  } else if (item && item.status == 1) {\n    //đã xác nhận\n    return /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-primary text-white px-8 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, t(\"EQAHealthOrgRoundRegister.Status.Confirmed\"));\n  } else if (item && item.status == -1) {\n    //đã hủy\n    return /*#__PURE__*/React.createElement(\"small\", {\n      className: \"border-radius-4 bg-secondary text-white px-8 py-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, t(\"EQAHealthOrgRoundRegister.Status.Cancel_Registration\"));\n  } else {\n    return \"\";\n  }\n}\n\nvar EQARoundIsActiveForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQARoundIsActiveForm, _React$Component);\n\n  var _super = _createSuper(EQARoundIsActiveForm);\n\n  function EQARoundIsActiveForm(props) {\n    var _this;\n\n    _classCallCheck(this, EQARoundIsActiveForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDialogRef: false,\n      shouldOpenEditorSampleTransferStatusDialog: false,\n      text: \"\",\n      listEQARound: [],\n      hasResult: null,\n      round: null,\n      healthOrgID: \"\",\n      sampleTransferStatus: 0\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.search();\n      }\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDialogRef: false,\n        shouldOpenEditorSampleTransferStatusDialog: false\n      });\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorSampleTransferStatusDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleConfirmationResponse = function () {\n      var _this$state = _this.state,\n          sampleTransferStatus = _this$state.sampleTransferStatus,\n          healthOrgID = _this$state.healthOrgID,\n          sampleTransferStatusRef = _this$state.sampleTransferStatusRef;\n      changeSampleTransferStatus(healthOrgID, sampleTransferStatus).then(function () {\n        toast.success(_this.props.t(\"update_success_message\"));\n\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      }).catch(function (err) {\n        toast.error(_this.props.t(\"error_message\"));\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleConfirmationResponseRef = function () {\n      var _this$state2 = _this.state,\n          healthOrgID = _this$state2.healthOrgID,\n          sampleTransferStatusRef = _this$state2.sampleTransferStatusRef;\n      changeSampleTransferStatusRef(healthOrgID, sampleTransferStatusRef).then(function () {\n        toast.success(_this.props.t(\"update_success_message\"));\n\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      }).catch(function (err) {\n        toast.error(_this.props.t(\"error_message\"));\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleFilterResult = function (event, result) {\n      if (result != null && result.value != null) {\n        _this.setState({\n          hasResult: result.value,\n          result: result\n        }, function () {\n          _this.search();\n        });\n      } else {\n        _this.setState({\n          hasResult: null,\n          result: null\n        }, function () {\n          _this.search();\n        });\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.text;\n      searchObject.hasResult = _this.state.hasResult;\n\n      if (_this.state.round != null) {\n        searchObject.roundId = _this.state.round.id;\n      }\n\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.handleOpenConfirmationDialog = function (event, healthOrgID) {\n      var t = _this.props.t;\n\n      if (event.target.value == LocalConstants.TransferStatus_Value.received) {\n        _this.setState({\n          shouldOpenConfirmationDialog: true,\n          healthOrgID,\n          sampleTransferStatus: LocalConstants.TransferStatus_Value.received\n        });\n      }\n\n      if (event.target.value == LocalConstants.TransferStatus_Value.delivered) {\n        toast.warning(t(\"EQAHealthOrgSampleTransferStatus.noUpdateStatus\"));\n      }\n    };\n\n    _this.handleOpenConfirmationDialogRef = function (event, healthOrgID) {\n      if (event.target.value == LocalConstants.TransferStatusRef_Value.Received_Health_Org) {\n        _this.setState({\n          shouldOpenConfirmationDialogRef: true,\n          healthOrgID,\n          sampleTransferStatusRef: event.target.value\n        });\n      } else {\n        getItemById(healthOrgID).then(function (_ref2) {\n          var data = _ref2.data;\n          data.sampleTransferStatusRef = LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit;\n\n          _this.setState({\n            item: data,\n            shouldOpenEditorSampleTransferStatusDialog: true\n          });\n        });\n      }\n    };\n\n    _this.handleFilterEQARound = function (event, round, reason, details) {\n      if (round != null && round.id != null) {\n        var searchObject = {};\n        searchObject.roundId = round.id;\n        searchObject.isRunning = _this.state.isRunning;\n        searchObject.pageIndex = _this.state.page;\n        searchObject.pageSize = _this.state.rowsPerPage;\n        searchByPage(searchObject).then(function (_ref3) {\n          var data = _ref3.data;\n\n          _this.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements,\n            round: round\n          });\n        });\n\n        if (reason == \"clear\") {\n          _this.setState({\n            round: null\n          });\n        }\n      } else {\n        _this.setState({\n          round: null\n        }, function () {\n          var searchObject = {};\n          searchObject.isRunning = _this.state.isRunning;\n          searchObject.pageIndex = _this.state.page;\n          searchObject.pageSize = _this.state.rowsPerPage;\n          searchByPage(searchObject).then(function (_ref4) {\n            var data = _ref4.data;\n\n            _this.setState({\n              itemList: _toConsumableArray(data.content),\n              totalElements: data.totalElements,\n              round: round\n            });\n          });\n        });\n      }\n    };\n\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EQARoundIsActiveForm, [{\n    key: \"listConstants\",\n    value: function listConstants() {\n      var t = this.props.t;\n      var listResult = [{\n        value: true,\n        name: t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")\n      }, {\n        value: false,\n        name: t(\"EQAHealthOrgRoundRegister.HasResult.No\")\n      }];\n      this.setState({\n        listResult: listResult\n      });\n    }\n  }, {\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        text: event.target.value\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      var _this2 = this;\n\n      var searchObject = {};\n      searchObject.text = this.state.text;\n      searchObject.hasResult = this.state.hasResult;\n\n      if (this.state.round != null) {\n        searchObject.roundId = this.state.round.id;\n      }\n\n      searchObject.pageIndex = this.state.page;\n      searchObject.pageSize = this.state.rowsPerPage;\n      searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(function (_ref5) {\n        var data = _ref5.data;\n\n        _this2.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000\n      };\n      searchByPageEQARound(searchObject).then(function (_ref6) {\n        var data = _ref6.data;\n\n        if (data != null && data.content.length > 0) {\n          _this3.setState({\n            listEQARound: _toConsumableArray(data.content)\n          }, function () {});\n        }\n      });\n      this.updatePageData();\n      this.listConstants();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state3 = this.state,\n          text = _this$state3.text,\n          listEQARound = _this$state3.listEQARound,\n          result = _this$state3.result,\n          shouldOpenEditorSampleTransferStatusDialog = _this$state3.shouldOpenEditorSampleTransferStatusDialog,\n          round = _this$state3.round,\n          item = _this$state3.item,\n          listResult = _this$state3.listResult;\n      var columns = [// {\n      //   title: t(\"Action\"),\n      //   field: \"custom\",\n      //   align: \"center\",\n      //   width: \"100px\",\n      //   headerStyle: {\n      //     minWidth:\"100px\",\n      //     paddingLeft: \"10px\",\n      //     paddingRight: \"0px\",\n      //   },\n      //   cellStyle: {\n      //     minWidth:\"100px\",\n      //     paddingLeft: \"10px\",\n      //     paddingRight: \"0px\",\n      //     textAlign: \"center\",\n      //   }, \n      //   render: rowData => (\n      //     <MaterialButton\n      //       item={rowData}\n      //       onSelect={(rowData, method) => {\n      //       if (method === 2) {\n      //           getItemById(rowData.id).then(({ data }) => {\n      //             this.setState({\n      //               item: data,\n      //               shouldOpenEditorSampleTransferStatusDialog: true\n      //             });\n      //           });\n      //         } else {\n      //           alert(\"Call Selected Here:\" + rowData.id);\n      //         }\n      //       }}\n      //     />\n      //   )\n      // },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.RoundName\"),\n        field: \"round.code\",\n        width: \"200\",\n        headerStyle: {\n          minWidth: \"140px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"140px\",\n          paddingLeft: \"15px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        field: \"healthOrg.name\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgCode\"),\n        field: \"healthOrg.code\",\n        align: \"left\",\n        width: \"100\",\n        headerStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgRoundRegister.HasResult.title\"),\n        field: \"hasResult\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.hasResult == true ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 13\n            }\n          }, t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")) : /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 13\n            }\n          }, t(\"EQAHealthOrgRoundRegister.HasResult.No\"));\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.main\"),\n        field: \"sampleTransferStatus\",\n        align: \"left\",\n        width: \"300\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(RadioGroup, {\n            name: \"gender1\",\n            value: rowData.sampleTransferStatus != null ? rowData.sampleTransferStatus : \"\",\n            onChange: function onChange(event) {\n              return (// {\n                //   (event.value == LocalConstants.TransferStatus_Value.delivered) ?\n                //   this.handleOpenConfirmationDialog(event, rowData.id) :\n                //   \"\"\n                // }\n                _this4.handleOpenConfirmationDialog(event, rowData.id)\n              );\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatus_Value.delivered,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.not_received\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatus_Value.received,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.received\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 13\n            }\n          }));\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.ref\"),\n        field: \"sampleTransferStatusRef\",\n        align: \"left\",\n        width: \"300\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.sampleTransferStatusRef != null ? /*#__PURE__*/React.createElement(RadioGroup, {\n            name: \"gender1\",\n            value: rowData.sampleTransferStatusRef != null ? rowData.sampleTransferStatusRef : \"\",\n            onChange: function onChange(event) {\n              return _this4.handleOpenConfirmationDialogRef(event, rowData.id);\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatusRef_Value.Received_Health_Org,\n            disabled: (rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi ? true : false) || (rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit ? true : false),\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.received_health_org\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit,\n            disabled: rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi ? true : false,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.sample_resend_unit\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatusRef_Value.Received_Pi,\n            disabled: true,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.received_pi\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 13\n            }\n          })) : \"\";\n        }\n      }];\n      var columnDetail = [// {\n      //   title: t(\"Action\"),\n      //   field: \"custom\",\n      //   align: \"center\",\n      //   width: \"100px\",\n      //   headerStyle: {\n      //     minWidth:\"100px\",\n      //     paddingLeft: \"10px\",\n      //     paddingRight: \"0px\",\n      //   },\n      //   cellStyle: {\n      //     minWidth:\"100px\",\n      //     paddingLeft: \"10px\",\n      //     paddingRight: \"0px\",\n      //     textAlign: \"center\",\n      //   }, \n      //   render: rowData => (\n      //     <MaterialButton\n      //       item={rowData}\n      //       onSelect={(rowData, method) => {\n      //       if (method === 2) {\n      //           getItemById(rowData.id).then(({ data }) => {\n      //             this.setState({\n      //               item: data,\n      //               shouldOpenEditorSampleTransferStatusDialog: true\n      //             });\n      //           });\n      //         } else {\n      //           alert(\"Call Selected Here:\" + rowData.id);\n      //         }\n      //       }}\n      //     />\n      //   )\n      // },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.RoundName\"),\n        field: \"round.code\",\n        width: \"200\",\n        headerStyle: {\n          minWidth: \"140px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"140px\",\n          paddingLeft: \"15px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        field: \"healthOrg.name\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgCode\"),\n        field: \"healthOrg.code\",\n        align: \"left\",\n        width: \"300px\",\n        headerStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgRoundRegister.HasResult.title\"),\n        field: \"hasResult\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.hasResult == true ? /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-primary text-white px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 13\n            }\n          }, t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")) : /*#__PURE__*/React.createElement(\"small\", {\n            className: \"border-radius-4 bg-light-gray px-8 py-2 \",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 13\n            }\n          }, t(\"EQAHealthOrgRoundRegister.HasResult.No\"));\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.main\"),\n        field: \"sampleTransferStatus\",\n        align: \"left\",\n        width: \"300px\",\n        headerStyle: {\n          width: \"200px\",\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(RadioGroup, {\n            name: \"gender1\",\n            value: rowData.sampleTransferStatus != null ? rowData.sampleTransferStatus : \"\",\n            onChange: function onChange(event) {\n              return _this4.handleOpenConfirmationDialog(event, rowData.id);\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: 2,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.not_received\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: 3,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.received\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 13\n            }\n          }));\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.billOfLadingCode\"),\n        field: \"billOfLadingCode\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.delivery_date\"),\n        field: \"deliveryDate\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.deliveryDate ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 36\n            }\n          }, moment(rowData.deliveryDate).format('DD/MM/YYYY')) : '';\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.sample_receiving_date\"),\n        field: \"sampleReceivingDate\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.sampleReceivingDate ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 43\n            }\n          }, moment(rowData.sampleReceivingDate).format('DD/MM/YYYY')) : '';\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.ref\"),\n        field: \"sampleTransferStatusRef\",\n        align: \"left\",\n        width: \"300\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.sampleTransferStatusRef != null ? /*#__PURE__*/React.createElement(RadioGroup, {\n            name: \"gender1\",\n            value: rowData.sampleTransferStatusRef != null ? rowData.sampleTransferStatusRef : \"\",\n            onChange: function onChange(event) {\n              return _this4.handleOpenConfirmationDialogRef(event, rowData.id);\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatusRef_Value.Received_Health_Org,\n            disabled: (rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi ? true : false) || (rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit ? true : false),\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.received_health_org\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit,\n            disabled: rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi ? true : false,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.sample_resend_unit\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 13\n            }\n          }), /*#__PURE__*/React.createElement(FormControlLabel, {\n            value: LocalConstants.TransferStatusRef_Value.Received_Pi,\n            disabled: true,\n            control: /*#__PURE__*/React.createElement(Radio, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 24\n              }\n            }),\n            label: t(\"EQAHealthOrgSampleTransferStatus.received_pi\"),\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 755,\n              columnNumber: 13\n            }\n          })) : \"\";\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.billOfLadingCodeRef\"),\n        field: \"billOfLadingCodeRef\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.delivered_date_ref\"),\n        field: \"deliveryDateRef\",\n        align: \"left\",\n        width: \"175px\",\n        headerStyle: {\n          minWidth: \"175x\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.deliveryDateRef ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 39\n            }\n          }, moment(rowData.deliveryDateRef).format('DD/MM/YYYY')) : '';\n        }\n      }, {\n        title: t(\"EQAHealthOrgSampleTransferStatus.sample_receiving_date_ref\"),\n        field: \"sampleReceivingDateRef\",\n        align: \"left\",\n        width: \"175px\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.sampleReceivingDateRef ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 46\n            }\n          }, moment(rowData.sampleReceivingDateRef).format('DD/MM/YYYY')) : '';\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }\n      }, t(\"EQAHealthOrgSampleTransferStatus.title\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"EQAHealthOrgSampleTransferStatus.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          if (_this4.state.isViewDetails) {\n            _this4.setState({\n              isViewDetails: false\n            });\n          } else {\n            _this4.setState({\n              isViewDetails: true\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 11\n        }\n      }, this.state.isViewDetails ? t(\"EQAHealthOrgRoundRegister.compact\") : t(\"EQAHealthOrgRoundRegister.details\"))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        id: \"list-transfer-status\",\n        size: \"small\",\n        options: listResult // className=\"flex-end w-80 mb-10\"\n        ,\n        autoHighlight: true,\n        getOptionLabel: function getOptionLabel(option) {\n          return option.name;\n        },\n        onChange: this.handleFilterResult,\n        value: result ? result : null,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t(\"EQAHealthOrgRoundRegister.filterStatusResult\"),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 19\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listEQARound,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.code;\n        },\n        onChange: this.handleFilterEQARound,\n        value: round,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: t(\"general.fillterByRoundEQA\"),\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 17\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: t(\"EnterSearch\"),\n        className: \"mb-16 mr-10 w-100 stylePlaceholder\",\n        type: \"text\",\n        name: \"text\",\n        placeholder: t(\"Search\"),\n        value: text,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        onChange: this.handleTextChange,\n        id: \"search_box\",\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 19\n          }\n        }, \" \", /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this4.search();\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 21\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 9\n        }\n      }, this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        Yes: t(\"confirm\"),\n        No: t(\"Cancel\"),\n        text: t(\"EQAHealthOrgSampleTransferStatus.confirm_update_status\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 919,\n          columnNumber: 13\n        }\n      }), this.state.shouldOpenConfirmationDialogRef && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialogRef,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponseRef,\n        Yes: t(\"confirm\"),\n        No: t(\"Cancel\"),\n        text: t(\"EQAHealthOrgSampleTransferStatus.confirm_update_status\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930,\n          columnNumber: 13\n        }\n      }), shouldOpenEditorSampleTransferStatusDialog && /*#__PURE__*/React.createElement(SampleTransferStatusEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorSampleTransferStatusDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable // title={t('List')}\n      , {\n        data: this.state.itemList,\n        columns: this.state.isViewDetails ? columnDetail : columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff',\n            minHeight: '1000px'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 31\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this4.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref7) {\n          var from = _ref7.from,\n              to = _ref7.to,\n              count = _ref7.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return EQARoundIsActiveForm;\n}(React.Component);\n\nexport default EQARoundIsActiveForm;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrgSampleTransferStatus/EQAHealthOrgSampleTransferStatusTable.jsx"],"names":["InputAdornment","Input","Grid","MuiThemeProvider","IconButton","Button","Icon","TextField","TablePagination","React","MaterialTable","MTableToolbar","useTranslation","withTranslation","Trans","searchByPage","getItemById","changeSampleTransferStatus","changeSampleTransferStatusRef","checkCountReport","Breadcrumb","ConfirmationDialog","LocalConstants","Helmet","Link","SearchIcon","Autocomplete","SampleTransferStatusEditorDialog","searchByPageEQARound","toast","Radio","RadioGroup","FormControlLabel","moment","MaterialButton","props","t","i18n","item","onSelect","StatusReturn","status","EQARoundIsActiveForm","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenConfirmationDialog","shouldOpenConfirmationDialogRef","shouldOpenEditorSampleTransferStatusDialog","text","listEQARound","hasResult","round","healthOrgID","sampleTransferStatus","handleKeyDownEnterSearch","e","key","search","handleDialogClose","setState","handleOKEditClose","updatePageData","handleConfirmationResponse","sampleTransferStatusRef","then","success","catch","err","error","handleConfirmationResponseRef","handleFilterResult","event","result","value","searchObject","roundId","id","pageIndex","pageSize","content","setPage","setRowsPerPage","target","handleChangePage","newPage","handleOpenConfirmationDialog","TransferStatus_Value","received","delivered","warning","handleOpenConfirmationDialogRef","TransferStatusRef_Value","Received_Health_Org","Sample_Resend_Unit","handleFilterEQARound","reason","details","isRunning","handleTextChange","bind","listResult","name","length","listConstants","columns","title","field","width","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","align","render","rowData","Received_Pi","columnDetail","deliveryDate","format","sampleReceivingDate","deliveryDateRef","sampleReceivingDateRef","isViewDetails","option","params","code","position","top","right","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","color","minHeight","padding","toolbar","Toolbar","body","emptyDataSourceMessage","from","to","count","Component"],"mappings":"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","sourcesContent":["import {\n  InputAdornment,\n  Input,\n  Grid,\n  MuiThemeProvider,\n  IconButton,\n  Button,\n  Icon,\n  TextField,\n  TablePagination\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport MaterialTable, { MTableToolbar } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport {\n  searchByPage, getItemById,\n  changeSampleTransferStatus, changeSampleTransferStatusRef, checkCountReport\n} from \"./EQAHealthOrgSampleTransferStatusServices\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport LocalConstants from \"./Constants\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport SampleTransferStatusEditorDialog from \"./SampleTransferStatusEditorDialog\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport moment from \"moment\";\n\nfunction MaterialButton(props) {\n  const { t, i18n } = useTranslation();\n  const item = props.item;\n  return (\n    <div>\n      <IconButton size=\"small\" onClick={() => props.onSelect(item, 2)}>\n        <Icon fontSize=\"small\" color=\"primary\">local_shipping</Icon>\n      </IconButton>  \n    </div>\n  );\n}\nfunction StatusReturn(props) {\n  const { t, i18n } = useTranslation();\n  const item = props.item;\n  if (item && item.status == 0) {\n    //mới\n    return (\n      <small className=\"border-radius-4 bg-light-gray px-8 py-2\">\n        {t(\"EQAHealthOrgRoundRegister.Status.New\")}\n      </small>\n    );\n  } else if (item && item.status == 1) {\n    //đã xác nhận\n    return (\n      <small className=\"border-radius-4 bg-primary text-white px-8 py-2\">\n        {t(\"EQAHealthOrgRoundRegister.Status.Confirmed\")}\n      </small>\n    );\n  } else if (item && item.status == -1) {\n    //đã hủy\n    return (\n      <small className=\"border-radius-4 bg-secondary text-white px-8 py-2\">\n        {t(\"EQAHealthOrgRoundRegister.Status.Cancel_Registration\")}\n      </small>\n    );\n  } else {\n    return \"\";\n  }\n}\n\nclass EQARoundIsActiveForm extends React.Component {\n  state = {\n    rowsPerPage: 10,\n    page: 0,\n    data: [],\n    totalElements: 0,\n    itemList: [],\n    shouldOpenConfirmationDialog: false,\n    shouldOpenConfirmationDialogRef: false,\n    shouldOpenEditorSampleTransferStatusDialog: false,\n    text: \"\",\n    listEQARound: [],\n    hasResult: null,\n    round: null,\n    healthOrgID: \"\",\n    sampleTransferStatus: 0\n  };\n\n  constructor(props) {\n    super(props);\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n  listConstants(){\n    let { t } = this.props;\n    let listResult = [\n      {value: true , name: t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")},\n      {value: false , name: t(\"EQAHealthOrgRoundRegister.HasResult.No\")}\n    ]\n    this.setState({listResult: listResult});\n   }\n  handleTextChange(event) {\n    this.setState({ text: event.target.value });\n  }\n\n  handleKeyDownEnterSearch = e => {\n    if (e.key === \"Enter\") {\n      this.search();\n    }\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDialogRef: false,\n      shouldOpenEditorSampleTransferStatusDialog: false\n    });\n  };\n  handleOKEditClose = () => {\n    this.setState({\n      shouldOpenEditorSampleTransferStatusDialog: false\n    });\n    this.updatePageData();\n  };\n  handleConfirmationResponse = () => {\n    const { sampleTransferStatus, healthOrgID, sampleTransferStatusRef } = this.state;\n    changeSampleTransferStatus(healthOrgID, sampleTransferStatus)\n      .then(() => {\n        toast.success(this.props.t(\"update_success_message\"));\n        this.updatePageData();\n        this.handleDialogClose();\n      })\n      .catch(err => {\n        toast.error(this.props.t(\"error_message\"));\n        this.handleDialogClose();\n      });\n  };\n  handleConfirmationResponseRef = () => {\n    const { healthOrgID, sampleTransferStatusRef } = this.state;\n    changeSampleTransferStatusRef(healthOrgID, sampleTransferStatusRef)\n      .then(() => {\n        toast.success(this.props.t(\"update_success_message\"));\n        this.updatePageData();\n        this.handleDialogClose();\n      })\n      .catch(err => {\n        toast.error(this.props.t(\"error_message\"));\n        this.handleDialogClose();\n      });\n  };\n  search() {\n    var searchObject = {};\n    searchObject.text = this.state.text;\n    searchObject.hasResult = this.state.hasResult ;\n    if (this.state.round != null) {\n      searchObject.roundId = this.state.round.id;\n    }\n    searchObject.pageIndex = this.state.page;\n    searchObject.pageSize = this.state.rowsPerPage;\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(\n      ({ data }) => {\n        this.setState({\n          itemList: [...data.content],\n          totalElements: data.totalElements\n        });\n      }\n    );\n  }\n\n  componentDidMount() {\n    let searchObject = { pageIndex: 0, pageSize: 1000000 };\n    searchByPageEQARound(searchObject).then(({ data }) => {\n      if (data != null && data.content.length > 0) {\n        this.setState({ listEQARound: [...data.content] }, () => {});\n      }\n    });\n    this.updatePageData();\n    this.listConstants();\n  }\n  handleFilterResult = (event, result)=>{\n    if(result != null && result.value != null){\n      this.setState({hasResult: result.value, result:result}, ()=>{\n        this.search();\n      });\n    }else{\n      this.setState({hasResult: null, result:null}, () =>{\n        this.search();\n      });\n    }\n  }\n  updatePageData = () => {\n    var searchObject = {};\n    searchObject.text = this.state.text;\n    searchObject.hasResult = this.state.hasResult ;\n    if (this.state.round != null) {\n      searchObject.roundId = this.state.round.id;\n    }\n    searchObject.pageIndex = this.state.page + 1;\n    searchObject.pageSize = this.state.rowsPerPage;\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(\n      ({ data }) => {\n        this.setState({\n          itemList: [...data.content],\n          totalElements: data.totalElements\n        });\n      }\n    );\n  };\n\n  setPage = page => {\n    this.setState({ page }, function() {\n      this.updatePageData();\n    });\n  };\n\n  setRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function() {\n      this.updatePageData();\n    });\n  };\n\n  handleChangePage = (event, newPage) => {\n    this.setPage(newPage);\n  };\n\n  handleOpenConfirmationDialog = (event, healthOrgID) => {\n    let { t } =this.props;\n    if(event.target.value == LocalConstants.TransferStatus_Value.received){\n      this.setState({\n        shouldOpenConfirmationDialog: true,\n        healthOrgID,\n        sampleTransferStatus: LocalConstants.TransferStatus_Value.received,\n      });\n    }\n    if( event.target.value == LocalConstants.TransferStatus_Value.delivered ){\n      toast.warning(t(\"EQAHealthOrgSampleTransferStatus.noUpdateStatus\"));  \n    }\n  };\n\n  handleOpenConfirmationDialogRef = (event, healthOrgID) => {\n    if(event.target.value == LocalConstants.TransferStatusRef_Value.Received_Health_Org){\n      this.setState({\n        shouldOpenConfirmationDialogRef: true,\n        healthOrgID,\n        sampleTransferStatusRef: event.target.value\n      });\n    }else{\n      getItemById(healthOrgID).then(({ data }) => {\n        data.sampleTransferStatusRef = LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit;\n\n        this.setState({\n          item: data,\n          shouldOpenEditorSampleTransferStatusDialog: true\n        });\n      });\n    }\n  };\n  handleFilterEQARound = (event, round, reason, details) => {\n    if (round != null && round.id != null) {\n      let searchObject = {};\n      searchObject.roundId = round.id;\n      searchObject.isRunning = this.state.isRunning;\n      searchObject.pageIndex = this.state.page;\n      searchObject.pageSize = this.state.rowsPerPage;\n      searchByPage(searchObject).then(({ data }) => {\n        this.setState({\n          itemList: [...data.content],\n          totalElements: data.totalElements,\n          round: round\n        });\n      });\n      if (reason == \"clear\") {\n        this.setState({ round: null });\n      }\n    } else {\n      this.setState({ round: null }, () => {\n        let searchObject = {};\n        searchObject.isRunning = this.state.isRunning;\n        searchObject.pageIndex = this.state.page;\n        searchObject.pageSize = this.state.rowsPerPage;\n        searchByPage(searchObject).then(({ data }) => {\n          this.setState({\n            itemList: [...data.content],\n            totalElements: data.totalElements,\n            round: round\n          });\n        });\n      });\n    }\n  };\n\n  render() {\n    const { t, i18n } = this.props;\n    const { text, listEQARound,result, shouldOpenEditorSampleTransferStatusDialog, round, item , listResult} = this.state;\n    let columns = [\n      // {\n      //   title: t(\"Action\"),\n      //   field: \"custom\",\n      //   align: \"center\",\n      //   width: \"100px\",\n      //   headerStyle: {\n      //     minWidth:\"100px\",\n      //     paddingLeft: \"10px\",\n      //     paddingRight: \"0px\",\n      //   },\n      //   cellStyle: {\n      //     minWidth:\"100px\",\n      //     paddingLeft: \"10px\",\n      //     paddingRight: \"0px\",\n      //     textAlign: \"center\",\n      //   }, \n      //   render: rowData => (\n      //     <MaterialButton\n      //       item={rowData}\n      //       onSelect={(rowData, method) => {\n      //       if (method === 2) {\n      //           getItemById(rowData.id).then(({ data }) => {\n      //             this.setState({\n      //               item: data,\n      //               shouldOpenEditorSampleTransferStatusDialog: true\n      //             });\n      //           });\n      //         } else {\n      //           alert(\"Call Selected Here:\" + rowData.id);\n      //         }\n      //       }}\n      //     />\n      //   )\n      // },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.RoundName\"),\n        field: \"round.code\",\n        width: \"200\",\n        headerStyle: {\n          minWidth:\"140px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"140px\",\n          paddingLeft: \"15px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        field: \"healthOrg.name\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth:\"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgCode\"),\n        field: \"healthOrg.code\",\n        align: \"left\",\n        width: \"100\",\n        headerStyle: {\n          minWidth:\"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.HasResult.title\"),\n        field: \"hasResult\",\n        width: \"150\",\n        headerStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData =>\n          rowData.hasResult == true ? (\n            <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n              {t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")}\n            </small>\n          ) : (\n            <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n              {t(\"EQAHealthOrgRoundRegister.HasResult.No\")}\n            </small>\n          )\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.main\"),\n        field: \"sampleTransferStatus\",\n        align: \"left\",\n        width: \"300\",\n        headerStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData => (\n          <RadioGroup\n            name=\"gender1\"\n            value={\n              rowData.sampleTransferStatus != null\n                ? rowData.sampleTransferStatus\n                : \"\"\n            }\n             onChange={event =>\n            // {\n            //   (event.value == LocalConstants.TransferStatus_Value.delivered) ?\n            //   this.handleOpenConfirmationDialog(event, rowData.id) :\n            //   \"\"\n            // }\n              this.handleOpenConfirmationDialog(event, rowData.id)\n            }\n          >\n            <FormControlLabel\n              value={LocalConstants.TransferStatus_Value.delivered}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.not_received\")}\n            />\n            <FormControlLabel\n              value={LocalConstants.TransferStatus_Value.received}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.received\")}\n            />\n          </RadioGroup>\n        )\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.ref\"),\n        field: \"sampleTransferStatusRef\",\n        align: \"left\",\n        width: \"300\",\n        headerStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData => (rowData.sampleTransferStatusRef != null)  ? (\n          <RadioGroup\n            name=\"gender1\"\n            value={\n              rowData.sampleTransferStatusRef != null\n                ? rowData.sampleTransferStatusRef\n                : \"\"\n            }\n            onChange={event =>\n              this.handleOpenConfirmationDialogRef(event, rowData.id)\n            }\n          >\n            <FormControlLabel\n              value={LocalConstants.TransferStatusRef_Value.Received_Health_Org}\n              disabled = {(((rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi) ? true : false ) || \n                ((rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit) ? true : false ))}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.received_health_org\")}\n            />\n            <FormControlLabel\n              value={LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit}\n              disabled = { rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi ? true : false}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.sample_resend_unit\")}\n            />\n            <FormControlLabel\n              value={LocalConstants.TransferStatusRef_Value.Received_Pi}\n              disabled = {true}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.received_pi\")}\n            />\n          </RadioGroup>\n        ) : \"\"\n      },\n    ];\n\n   let columnDetail = [\n    // {\n    //   title: t(\"Action\"),\n    //   field: \"custom\",\n    //   align: \"center\",\n    //   width: \"100px\",\n    //   headerStyle: {\n    //     minWidth:\"100px\",\n    //     paddingLeft: \"10px\",\n    //     paddingRight: \"0px\",\n    //   },\n    //   cellStyle: {\n    //     minWidth:\"100px\",\n    //     paddingLeft: \"10px\",\n    //     paddingRight: \"0px\",\n    //     textAlign: \"center\",\n    //   }, \n    //   render: rowData => (\n    //     <MaterialButton\n    //       item={rowData}\n    //       onSelect={(rowData, method) => {\n    //       if (method === 2) {\n    //           getItemById(rowData.id).then(({ data }) => {\n    //             this.setState({\n    //               item: data,\n    //               shouldOpenEditorSampleTransferStatusDialog: true\n    //             });\n    //           });\n    //         } else {\n    //           alert(\"Call Selected Here:\" + rowData.id);\n    //         }\n    //       }}\n    //     />\n    //   )\n    // },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.RoundName\"),\n        field: \"round.code\",\n        width: \"200\",\n        headerStyle: {\n          minWidth:\"140px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"140px\",\n          paddingLeft: \"15px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgName\"),\n        field: \"healthOrg.name\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"250px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.HealthOrgCode\"),\n        field: \"healthOrg.code\",\n        align: \"left\",\n        width: \"300px\",\n        headerStyle: {\n          minWidth:\"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgRoundRegister.HasResult.title\"),\n        field: \"hasResult\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData =>\n          rowData.hasResult == true ? (\n            <small className=\"border-radius-4 bg-primary text-white px-8 py-2 \">\n              {t(\"EQAHealthOrgRoundRegister.HasResult.Yes\")}\n            </small>\n          ) : (\n            <small className=\"border-radius-4 bg-light-gray px-8 py-2 \">\n              {t(\"EQAHealthOrgRoundRegister.HasResult.No\")}\n            </small>\n          )\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.main\"),\n        field: \"sampleTransferStatus\",\n        align: \"left\",\n        width: \"300px\",\n        headerStyle: {\n          width: \"200px\",\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData => (\n          <RadioGroup\n            name=\"gender1\"\n            value={\n              rowData.sampleTransferStatus != null\n                ? rowData.sampleTransferStatus\n                : \"\"\n            }\n            onChange={event =>\n              this.handleOpenConfirmationDialog(event, rowData.id)\n            }\n          >\n            <FormControlLabel\n              value={2}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.not_received\")}\n            />\n            <FormControlLabel\n              value={3}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.received\")}\n            />\n          </RadioGroup>\n        )\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.billOfLadingCode\"),\n        field: \"billOfLadingCode\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.delivery_date\"),\n        field: \"deliveryDate\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData =>\n          (rowData.deliveryDate) ? <span>{moment(rowData.deliveryDate).format('DD/MM/YYYY')}</span> : ''\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.sample_receiving_date\"),\n        field: \"sampleReceivingDate\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData =>\n          (rowData.sampleReceivingDate) ? <span>{moment(rowData.sampleReceivingDate).format('DD/MM/YYYY')}</span> : ''\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.ref\"),\n        field: \"sampleTransferStatusRef\",\n        align: \"left\",\n        width: \"300\",\n        headerStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData => (rowData.sampleTransferStatusRef != null)  ? (\n          <RadioGroup\n            name=\"gender1\"\n            value={\n              rowData.sampleTransferStatusRef != null\n                ? rowData.sampleTransferStatusRef\n                : \"\"\n            }\n            onChange={event =>\n              this.handleOpenConfirmationDialogRef(event, rowData.id)\n            }\n          >\n            <FormControlLabel\n              value={LocalConstants.TransferStatusRef_Value.Received_Health_Org}\n              disabled = {(((rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi) ? true : false ) || \n                ((rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit) ? true : false ))}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.received_health_org\")}\n            />\n            <FormControlLabel\n              value={LocalConstants.TransferStatusRef_Value.Sample_Resend_Unit}\n              disabled = { rowData.sampleTransferStatusRef == LocalConstants.TransferStatusRef_Value.Received_Pi ? true : false}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.sample_resend_unit\")}\n            />\n            <FormControlLabel\n              value={LocalConstants.TransferStatusRef_Value.Received_Pi}\n              disabled = {true}\n              control={<Radio />}\n              label={t(\"EQAHealthOrgSampleTransferStatus.received_pi\")}\n            />\n          </RadioGroup>\n        ) : \"\"\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.billOfLadingCodeRef\"),\n        field: \"billOfLadingCodeRef\",\n        align: \"left\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.delivered_date_ref\"),\n        field: \"deliveryDateRef\",\n        align: \"left\",\n        width: \"175px\",\n        headerStyle: {\n          minWidth:\"175x\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"175px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData =>\n          (rowData.deliveryDateRef) ? <span>{moment(rowData.deliveryDateRef).format('DD/MM/YYYY')}</span> : ''\n      },\n      {\n        title: t(\"EQAHealthOrgSampleTransferStatus.sample_receiving_date_ref\"),\n        field: \"sampleReceivingDateRef\",\n        align: \"left\",\n        width: \"175px\",\n        headerStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n        },\n        cellStyle: {\n          minWidth:\"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\",\n        }, \n        render: rowData =>\n          (rowData.sampleReceivingDateRef) ? <span>{moment(rowData.sampleReceivingDateRef).format('DD/MM/YYYY')}</span> : ''\n      },\n    ];\n    return (\n      <div className=\"m-sm-30\">\n        <div className=\"mb-sm-30\">\n          <Helmet>\n            <title>\n              {t(\"EQAHealthOrgSampleTransferStatus.title\")} | {t(\"web_site\")}\n            </title>\n          </Helmet>\n          <Breadcrumb\n            routeSegments={[\n              { name: t(\"EQAHealthOrgSampleTransferStatus.title\") }\n            ]}\n          />\n        </div>\n        <Grid container spacing={3}>\n        <Grid item lg={3} md={3} sm={12} xs={12}>\n          <Button\n                className=\"mb-16 mr-16 align-bottom\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={()=>{\n                  if(this.state.isViewDetails){\n                    this.setState({isViewDetails:false})\n                  }else{\n                    this.setState({isViewDetails:true})\n                  }\n                }}\n              >\n                {this.state.isViewDetails ? t(\"EQAHealthOrgRoundRegister.compact\") : t(\"EQAHealthOrgRoundRegister.details\")}\n              </Button>\n        </Grid>\n        <Grid item lg={3} md={3} sm={12} xs={12}>\n              <Autocomplete\n                id = \"list-transfer-status\"\n                size=\"small\"\n                options={listResult}\n                // className=\"flex-end w-80 mb-10\"\n                autoHighlight\n                getOptionLabel={(option) => option.name}\n                onChange= {this.handleFilterResult}\n                value={result ? result : null}\n                renderInput={params => (\n                  <TextField\n                    {...params}\n                    label={t(\"EQAHealthOrgRoundRegister.filterStatusResult\")}\n                    variant=\"outlined\"\n                  />\n                )}\n              /> \n            </Grid>\n          <Grid item lg={3} md={3} sm={12} xs={6}>\n            <Autocomplete\n              size=\"small\"\n              id=\"combo-box\"\n              options={listEQARound}\n              className=\"flex-end\"\n              getOptionLabel={option => option.code}\n              onChange={this.handleFilterEQARound}\n              value={round}\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  label={t(\"general.fillterByRoundEQA\")}\n                  variant=\"outlined\"\n                />\n              )}\n            />\n          </Grid>\n          <Grid item lg={3} md={3} sm={12} xs={6}>\n            <Input\n              label={t(\"EnterSearch\")}\n              className=\"mb-16 mr-10 w-100 stylePlaceholder\"\n              type=\"text\"\n              name=\"text\"\n              placeholder={t(\"Search\")}\n              value={text}\n              onKeyDown={this.handleKeyDownEnterSearch}\n              onChange={this.handleTextChange}\n              id=\"search_box\"\n              startAdornment={\n                <InputAdornment>\n                  <Link>\n                    {\" \"}\n                    <SearchIcon\n                      onClick={() => this.search()}\n                      style={{\n                        position: \"absolute\",\n                        top: \"0\",\n                        right: \"0\"\n                      }}\n                    />\n                  </Link>\n                </InputAdornment>\n              }\n            />\n          </Grid>\n        </Grid>\n        <div>\n          {this.state.shouldOpenConfirmationDialog && (\n            <ConfirmationDialog\n              title={t(\"confirm\")}\n              open={this.state.shouldOpenConfirmationDialog}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponse}\n              Yes={t(\"confirm\")}\n              No={t(\"Cancel\")}\n              text={t(\"EQAHealthOrgSampleTransferStatus.confirm_update_status\")}\n            />\n          )}\n          {this.state.shouldOpenConfirmationDialogRef && (\n            <ConfirmationDialog\n              title={t(\"confirm\")}\n              open={this.state.shouldOpenConfirmationDialogRef}\n              onConfirmDialogClose={this.handleDialogClose}\n              onYesClick={this.handleConfirmationResponseRef}\n              Yes={t(\"confirm\")}\n              No={t(\"Cancel\")}\n              text={t(\"EQAHealthOrgSampleTransferStatus.confirm_update_status\")}\n            />\n          )}\n          {shouldOpenEditorSampleTransferStatusDialog && (\n              <SampleTransferStatusEditorDialog\n                t={t}\n                i18n={i18n}\n                handleClose={this.handleDialogClose}\n                open={shouldOpenEditorSampleTransferStatusDialog}\n                handleOKEditClose={this.handleOKEditClose}\n                item={item}\n              />\n            )}\n        </div>\n        <MaterialTable\n          // title={t('List')}\n          data={this.state.itemList}\n          columns={this.state.isViewDetails ? columnDetail : columns}\n          parentChildData={(row, rows) => {\n            let list = rows.find(a => a.id === row.parentId);\n            return list;\n          }}\n          options={{\n                selection: false,\n                actionsColumnIndex: -1,\n                paging: false,\n                search: false,\n                rowStyle: (rowData, index) => ({\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\n                }), \n                maxBodyHeight: '450px',\n                minBodyHeight: '370px',\n                headerStyle: {\n                  backgroundColor: '#358600',\n                  color:'#fff',\n                  minHeight: '1000px'\n                },\n                padding: 'dense',\n                toolbar: false\n              }}\n          components={{\n            Toolbar: props => <MTableToolbar {...props} />\n          }}\n          onSelectionChange={rows => {\n            this.data = rows;\n          }}\n          localization={{\n                body: {\n                  emptyDataSourceMessage: `${t(\n                    \"general.emptyDataMessageTable\"\n                  )}`,\n                },\n              }}\n        />\n        <TablePagination\n          align=\"left\"\n          className=\"px-16\"\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          labelRowsPerPage={t('general.rows_per_page')}\n          labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\n          count={this.state.totalElements}\n          rowsPerPage={this.state.rowsPerPage}\n          page={this.state.page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.setRowsPerPage}\n        />\n      </div>\n    );\n  }\n}\nexport default EQARoundIsActiveForm;\n"]},"metadata":{},"sourceType":"module"}