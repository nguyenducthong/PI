{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Table = _interopRequireDefault(require(\"@material-ui/core/Table\"));\n\nvar _TableFooter = _interopRequireDefault(require(\"@material-ui/core/TableFooter\"));\n\nvar _TableRow = _interopRequireDefault(require(\"@material-ui/core/TableRow\"));\n\nvar _LinearProgress = _interopRequireDefault(require(\"@material-ui/core/LinearProgress\"));\n\nvar _reactDoubleScrollbar = _interopRequireDefault(require(\"react-double-scrollbar\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _components = require(\"./components\");\n\nvar _reactBeautifulDnd = require(\"react-beautiful-dnd\");\n\nvar _dataManager = _interopRequireDefault(require(\"./utils/data-manager\"));\n\nvar _debounce = require(\"debounce\");\n\nvar _fastDeepEqual = _interopRequireDefault(require(\"fast-deep-equal\"));\n\nvar _core = require(\"@material-ui/core\");\n\nvar CommonValues = _interopRequireWildcard(require(\"./utils/common-values\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/* eslint-enable no-unused-vars */\n\n\nvar MaterialTable = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(MaterialTable, _React$Component);\n\n  var _super = _createSuper(MaterialTable);\n\n  function MaterialTable(_props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, MaterialTable);\n    _this = _super.call(this, _props);\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"dataManager\", new _dataManager[\"default\"]());\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"isRemoteData\", function (props) {\n      return !Array.isArray((props || _this.props).data);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"isOutsidePageNumbers\", function (props) {\n      return props.page !== undefined && props.totalCount !== undefined;\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onAllSelected\", function (checked) {\n      _this.dataManager.changeAllSelected(checked);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        return _this.onSelectionChange();\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeColumnHidden\", function (column, hidden) {\n      _this.dataManager.changeColumnHidden(column, hidden);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        _this.props.onChangeColumnHidden && _this.props.onChangeColumnHidden(column, hidden);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeGroupOrder\", function (groupedColumn) {\n      _this.dataManager.changeGroupOrder(groupedColumn.tableData.id);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeOrder\", function (orderBy, orderDirection) {\n      var newOrderBy = orderDirection === \"\" ? -1 : orderBy;\n\n      _this.dataManager.changeOrder(newOrderBy, orderDirection);\n\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = 0;\n        query.orderBy = _this.state.columns.find(function (a) {\n          return a.tableData.id === newOrderBy;\n        });\n        query.orderDirection = orderDirection;\n\n        _this.onQueryChange(query, function () {\n          _this.props.onOrderChange && _this.props.onOrderChange(newOrderBy, orderDirection);\n        });\n      } else {\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onOrderChange && _this.props.onOrderChange(newOrderBy, orderDirection);\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangePage\", function (event, page) {\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = page;\n\n        _this.onQueryChange(query, function () {\n          _this.props.onChangePage && _this.props.onChangePage(page, query.pageSize);\n        });\n      } else {\n        if (!_this.isOutsidePageNumbers(_this.props)) {\n          _this.dataManager.changeCurrentPage(page);\n        }\n\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onChangePage && _this.props.onChangePage(page, _this.state.pageSize);\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onChangeRowsPerPage\", function (event) {\n      var pageSize = event.target.value;\n\n      _this.dataManager.changePageSize(pageSize);\n\n      _this.props.onChangePage && _this.props.onChangePage(0, pageSize);\n\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.pageSize = event.target.value;\n        query.page = 0;\n\n        _this.onQueryChange(query, function () {\n          _this.props.onChangeRowsPerPage && _this.props.onChangeRowsPerPage(pageSize);\n        });\n      } else {\n        _this.dataManager.changeCurrentPage(0);\n\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onChangeRowsPerPage && _this.props.onChangeRowsPerPage(pageSize);\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onDragEnd\", function (result) {\n      if (!result || !result.source || !result.destination) return;\n\n      _this.dataManager.changeByDrag(result);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        if (_this.props.onColumnDragged && result.destination.droppableId === \"headers\" && result.source.droppableId === \"headers\") {\n          _this.props.onColumnDragged(result.source.index, result.destination.index);\n        }\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onGroupExpandChanged\", function (path) {\n      _this.dataManager.changeGroupExpand(path);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onGroupRemoved\", function (groupedColumn, index) {\n      var result = {\n        combine: null,\n        destination: {\n          droppableId: \"headers\",\n          index: 0\n        },\n        draggableId: groupedColumn.tableData.id,\n        mode: \"FLUID\",\n        reason: \"DROP\",\n        source: {\n          index: index,\n          droppableId: \"groups\"\n        },\n        type: \"DEFAULT\"\n      };\n\n      _this.dataManager.changeByDrag(result);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        _this.props.onGroupRemoved && _this.props.onGroupRemoved(groupedColumn, index);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onEditingApproved\", function (mode, newData, oldData) {\n      if (mode === \"add\" && _this.props.editable && _this.props.editable.onRowAdd) {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onRowAdd(newData).then(function (result) {\n            _this.setState({\n              isLoading: false,\n              showAddRow: false\n            }, function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            var errorState = {\n              message: reason,\n              errorCause: \"add\"\n            };\n\n            _this.setState({\n              isLoading: false,\n              errorState: errorState\n            });\n          });\n        });\n      } else if (mode === \"update\" && _this.props.editable && _this.props.editable.onRowUpdate) {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onRowUpdate(newData, oldData).then(function (result) {\n            _this.dataManager.changeRowEditing(oldData);\n\n            _this.setState((0, _objectSpread2[\"default\"])({\n              isLoading: false\n            }, _this.dataManager.getRenderState()), function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            var errorState = {\n              message: reason,\n              errorCause: \"update\"\n            };\n\n            _this.setState({\n              isLoading: false,\n              errorState: errorState\n            });\n          });\n        });\n      } else if (mode === \"delete\" && _this.props.editable && _this.props.editable.onRowDelete) {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onRowDelete(oldData).then(function (result) {\n            _this.dataManager.changeRowEditing(oldData);\n\n            _this.setState((0, _objectSpread2[\"default\"])({\n              isLoading: false\n            }, _this.dataManager.getRenderState()), function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            var errorState = {\n              message: reason,\n              errorCause: \"delete\"\n            };\n\n            _this.setState({\n              isLoading: false,\n              errorState: errorState\n            });\n          });\n        });\n      } else if (mode === \"bulk\" && _this.props.editable && _this.props.editable.onBulkUpdate) {\n        _this.setState({\n          isLoading: true\n        }, function () {\n          _this.props.editable.onBulkUpdate(_this.dataManager.bulkEditChangedRows).then(function (result) {\n            _this.dataManager.changeBulkEditOpen(false);\n\n            _this.dataManager.clearBulkEditChangedRows();\n\n            _this.setState((0, _objectSpread2[\"default\"])({\n              isLoading: false\n            }, _this.dataManager.getRenderState()), function () {\n              if (_this.isRemoteData()) {\n                _this.onQueryChange(_this.state.query);\n              }\n            });\n          })[\"catch\"](function (reason) {\n            var errorState = {\n              message: reason,\n              errorCause: \"bulk edit\"\n            };\n\n            _this.setState({\n              isLoading: false,\n              errorState: errorState\n            });\n          });\n        });\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onEditingCanceled\", function (mode, rowData) {\n      if (mode === \"add\") {\n        _this.props.editable.onRowAddCancelled && _this.props.editable.onRowAddCancelled();\n\n        _this.setState({\n          showAddRow: false\n        });\n      } else if (mode === \"update\") {\n        _this.props.editable.onRowUpdateCancelled && _this.props.editable.onRowUpdateCancelled();\n\n        _this.dataManager.changeRowEditing(rowData);\n\n        _this.setState(_this.dataManager.getRenderState());\n      } else if (mode === \"delete\") {\n        _this.dataManager.changeRowEditing(rowData);\n\n        _this.setState(_this.dataManager.getRenderState());\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"retry\", function () {\n      _this.onQueryChange(_this.state.query);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onQueryChange\", function (query, callback) {\n      query = (0, _objectSpread2[\"default\"])({}, _this.state.query, query, {\n        error: _this.state.errorState\n      });\n\n      _this.setState({\n        isLoading: true,\n        errorState: undefined\n      }, function () {\n        _this.props.data(query).then(function (result) {\n          query.totalCount = result.totalCount;\n          query.page = result.page;\n\n          _this.dataManager.setData(result.data);\n\n          _this.setState((0, _objectSpread2[\"default\"])({\n            isLoading: false,\n            errorState: false\n          }, _this.dataManager.getRenderState(), {\n            query: query\n          }), function () {\n            callback && callback();\n          });\n        })[\"catch\"](function (error) {\n          var localization = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization, _this.props.localization);\n          var errorState = {\n            message: (0, _typeof2[\"default\"])(error) === \"object\" ? error.message : error !== undefined ? error : localization.error,\n            errorCause: \"query\"\n          };\n\n          _this.setState((0, _objectSpread2[\"default\"])({\n            isLoading: false,\n            errorState: errorState\n          }, _this.dataManager.getRenderState()));\n        });\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onRowSelected\", function (event, path, dataClicked) {\n      _this.dataManager.changeRowSelected(event.target.checked, path);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        return _this.onSelectionChange(dataClicked);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSelectionChange\", function (dataClicked) {\n      if (_this.props.onSelectionChange) {\n        var selectedRows = [];\n\n        var findSelecteds = function findSelecteds(list) {\n          list.forEach(function (row) {\n            if (row.tableData.checked) {\n              selectedRows.push(row);\n            }\n          });\n        };\n\n        findSelecteds(_this.state.originalData);\n\n        _this.props.onSelectionChange(selectedRows, dataClicked);\n      }\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onSearchChangeDebounce\", (0, _debounce.debounce)(function (searchText) {\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = 0;\n        query.search = searchText;\n\n        _this.onQueryChange(query);\n      } else {\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          _this.props.onSearchChange && _this.props.onSearchChange(searchText);\n        });\n      }\n    }, _this.props.options.debounceInterval));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onFilterChange\", function (columnId, value) {\n      _this.dataManager.changeFilterValue(columnId, value);\n\n      _this.setState({}, _this.onFilterChangeDebounce);\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onFilterChangeDebounce\", (0, _debounce.debounce)(function () {\n      if (_this.isRemoteData()) {\n        var query = (0, _objectSpread2[\"default\"])({}, _this.state.query);\n        query.page = 0;\n        query.filters = _this.state.columns.filter(function (a) {\n          return a.tableData.filterValue;\n        }).map(function (a) {\n          return {\n            column: a,\n            operator: \"=\",\n            value: a.tableData.filterValue\n          };\n        });\n\n        _this.onQueryChange(query);\n      } else {\n        _this.setState(_this.dataManager.getRenderState(), function () {\n          if (_this.props.onFilterChange) {\n            var appliedFilters = _this.state.columns.filter(function (a) {\n              return a.tableData.filterValue;\n            }).map(function (a) {\n              return {\n                column: a,\n                operator: \"=\",\n                value: a.tableData.filterValue\n              };\n            });\n\n            _this.props.onFilterChange(appliedFilters);\n          }\n        });\n      }\n    }, _this.props.options.debounceInterval));\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onTreeExpandChanged\", function (path, data) {\n      _this.dataManager.changeTreeExpand(path);\n\n      _this.setState(_this.dataManager.getRenderState(), function () {\n        _this.props.onTreeExpandChange && _this.props.onTreeExpandChange(data, data.tableData.isTreeExpanded);\n      });\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onToggleDetailPanel\", function (path, render) {\n      _this.dataManager.changeDetailPanelVisibility(path, render);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onCellEditStarted\", function (rowData, columnDef) {\n      _this.dataManager.startCellEditable(rowData, columnDef);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onCellEditFinished\", function (rowData, columnDef) {\n      _this.dataManager.finishCellEditable(rowData, columnDef);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onEditRowDataChanged\", function (rowData, newData) {\n      _this.dataManager.setEditRowData(rowData, newData);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"onColumnResized\", function (id, additionalWidth) {\n      _this.dataManager.onColumnResized(id, additionalWidth);\n\n      _this.setState(_this.dataManager.getRenderState());\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"renderTable\", function (props) {\n      return /*#__PURE__*/React.createElement(_Table[\"default\"], {\n        style: {\n          tableLayout: props.options.fixedColumns && (props.options.fixedColumns.left || props.options.fixedColumns.right) ? \"fixed\" : props.options.tableLayout\n        }\n      }, props.options.header && /*#__PURE__*/React.createElement(props.components.Header, {\n        actions: props.actions,\n        localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.header, _this.props.localization.header),\n        columns: _this.state.columns,\n        hasSelection: props.options.selection,\n        headerStyle: props.options.headerStyle,\n        icons: props.icons,\n        selectedCount: _this.state.selectedCount,\n        dataCount: props.parentChildData ? _this.state.treefiedDataLength : _this.state.columns.filter(function (col) {\n          return col.tableData.groupOrder > -1;\n        }).length > 0 ? _this.state.groupedDataLength : _this.state.data.length,\n        hasDetailPanel: !!props.detailPanel,\n        detailPanelColumnAlignment: props.options.detailPanelColumnAlignment,\n        showActionsColumn: props.actions && props.actions.filter(function (a) {\n          return a.position === \"row\" || typeof a === \"function\";\n        }).length > 0,\n        showSelectAllCheckbox: props.options.showSelectAllCheckbox,\n        orderBy: _this.state.orderBy,\n        orderDirection: _this.state.orderDirection,\n        onAllSelected: _this.onAllSelected,\n        onOrderChange: _this.onChangeOrder,\n        actionsHeaderIndex: props.options.actionsColumnIndex,\n        sorting: props.options.sorting,\n        grouping: props.options.grouping,\n        isTreeData: _this.props.parentChildData !== undefined,\n        draggable: props.options.draggable,\n        thirdSortClick: props.options.thirdSortClick,\n        treeDataMaxLevel: _this.state.treeDataMaxLevel,\n        options: props.options,\n        onColumnResized: _this.onColumnResized,\n        scrollWidth: _this.state.width\n      }), /*#__PURE__*/React.createElement(props.components.Body, {\n        actions: props.actions,\n        components: props.components,\n        icons: props.icons,\n        renderData: _this.state.renderData,\n        currentPage: _this.state.currentPage,\n        initialFormData: props.initialFormData,\n        pageSize: _this.state.pageSize,\n        columns: _this.state.columns,\n        errorState: _this.state.errorState,\n        detailPanel: props.detailPanel,\n        options: props.options,\n        getFieldValue: _this.dataManager.getFieldValue,\n        isTreeData: _this.props.parentChildData !== undefined,\n        onFilterChanged: _this.onFilterChange,\n        onRowSelected: _this.onRowSelected,\n        onToggleDetailPanel: _this.onToggleDetailPanel,\n        onGroupExpandChanged: _this.onGroupExpandChanged,\n        onTreeExpandChanged: _this.onTreeExpandChanged,\n        onEditingCanceled: _this.onEditingCanceled,\n        onEditingApproved: _this.onEditingApproved,\n        localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.body, _this.props.localization.body),\n        onRowClick: _this.props.onRowClick,\n        showAddRow: _this.state.showAddRow,\n        hasAnyEditingRow: !!(_this.state.lastEditingRow || _this.state.showAddRow),\n        hasDetailPanel: !!props.detailPanel,\n        treeDataMaxLevel: _this.state.treeDataMaxLevel,\n        cellEditable: props.cellEditable,\n        onCellEditStarted: _this.onCellEditStarted,\n        onCellEditFinished: _this.onCellEditFinished,\n        bulkEditOpen: _this.dataManager.bulkEditOpen,\n        onBulkEditRowChanged: _this.dataManager.onBulkEditRowChanged,\n        scrollWidth: _this.state.width\n      }));\n    });\n    (0, _defineProperty2[\"default\"])((0, _assertThisInitialized2[\"default\"])(_this), \"getColumnsWidth\", function (props, count) {\n      var result = [];\n      var actionsWidth = CommonValues.actionsColumnWidth(props);\n\n      if (actionsWidth > 0) {\n        if (count > 0 && props.options.actionsColumnIndex >= 0 && props.options.actionsColumnIndex < count) {\n          result.push(actionsWidth + \"px\");\n        } else if (count < 0 && props.options.actionsColumnIndex < 0 && props.options.actionsColumnIndex >= count) {\n          result.push(actionsWidth + \"px\");\n        }\n      } // add selection action width only for left container div\n\n\n      if (props.options.selection && count > 0) {\n        var selectionWidth = CommonValues.selectionMaxWidth(props, _this.state.treeDataMaxLevel);\n        result.push(selectionWidth + \"px\");\n      }\n\n      for (var i = 0; i < Math.abs(count) && i < props.columns.length; i++) {\n        var colDef = props.columns[count >= 0 ? i : props.columns.length - 1 - i];\n\n        if (colDef.tableData) {\n          if (typeof colDef.tableData.width === \"number\") {\n            result.push(colDef.tableData.width + \"px\");\n          } else {\n            result.push(colDef.tableData.width);\n          }\n        }\n      }\n\n      return \"calc(\" + result.join(\" + \") + \")\";\n    });\n\n    var calculatedProps = _this.getProps(_props);\n\n    _this.setDataManagerFields(calculatedProps, true);\n\n    var renderState = _this.dataManager.getRenderState();\n\n    _this.state = (0, _objectSpread2[\"default\"])({\n      data: [],\n      errorState: undefined\n    }, renderState, {\n      query: {\n        filters: renderState.columns.filter(function (a) {\n          return a.tableData.filterValue;\n        }).map(function (a) {\n          return {\n            column: a,\n            operator: \"=\",\n            value: a.tableData.filterValue\n          };\n        }),\n        orderBy: renderState.columns.find(function (a) {\n          return a.tableData.id === renderState.orderBy;\n        }),\n        orderDirection: renderState.orderDirection,\n        page: 0,\n        pageSize: calculatedProps.options.pageSize,\n        search: renderState.searchText,\n        totalCount: 0\n      },\n      showAddRow: false,\n      bulkEditOpen: false,\n      width: 0\n    });\n    _this.tableContainerDiv = React.createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(MaterialTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState((0, _objectSpread2[\"default\"])({}, this.dataManager.getRenderState(), {\n        width: this.tableContainerDiv.current.scrollWidth\n      }), function () {\n        if (_this2.isRemoteData()) {\n          _this2.onQueryChange(_this2.state.query);\n        }\n      });\n    }\n  }, {\n    key: \"setDataManagerFields\",\n    value: function setDataManagerFields(props, isInit) {\n      var defaultSortColumnIndex = -1;\n      var defaultSortDirection = \"\";\n\n      if (props && props.options.sorting !== false) {\n        defaultSortColumnIndex = props.columns.findIndex(function (a) {\n          return a.defaultSort && a.sorting !== false;\n        });\n        defaultSortDirection = defaultSortColumnIndex > -1 ? props.columns[defaultSortColumnIndex].defaultSort : \"\";\n      }\n\n      this.dataManager.setColumns(props.columns);\n      this.dataManager.setDefaultExpanded(props.options.defaultExpanded);\n      this.dataManager.changeRowEditing();\n\n      if (this.isRemoteData(props)) {\n        this.dataManager.changeApplySearch(false);\n        this.dataManager.changeApplyFilters(false);\n        this.dataManager.changeApplySort(false);\n      } else {\n        this.dataManager.changeApplySearch(true);\n        this.dataManager.changeApplyFilters(true);\n        this.dataManager.changeApplySort(true);\n        this.dataManager.setData(props.data);\n      } // If the columns changed and the defaultSorting differs from the current sorting, it will trigger a new sorting\n\n\n      var shouldReorder = isInit || defaultSortColumnIndex !== this.dataManager.orderBy && defaultSortDirection !== this.dataManager.orderDirection;\n      shouldReorder && this.dataManager.changeOrder(defaultSortColumnIndex, defaultSortDirection);\n      isInit && this.dataManager.changeSearchText(props.options.searchText || \"\");\n      isInit && this.dataManager.changeCurrentPage(props.options.initialPage ? props.options.initialPage : 0);\n      (isInit || this.isRemoteData()) && this.dataManager.changePageSize(props.options.pageSize);\n      this.dataManager.changePaging(props.options.paging);\n      isInit && this.dataManager.changeParentFunc(props.parentChildData);\n      this.dataManager.changeDetailPanelType(props.options.detailPanelType);\n    }\n  }, {\n    key: \"cleanColumns\",\n    value: function cleanColumns(columns) {\n      return columns.map(function (col) {\n        var colClone = (0, _objectSpread2[\"default\"])({}, col);\n        delete colClone.tableData;\n        return colClone;\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // const propsChanged = Object.entries(this.props).reduce((didChange, prop) => didChange || prop[1] !== prevProps[prop[0]], false);\n      var fixedPrevColumns = this.cleanColumns(prevProps.columns);\n      var fixedPropsColumns = this.cleanColumns(this.props.columns);\n      var propsChanged = !(0, _fastDeepEqual[\"default\"])(fixedPrevColumns, fixedPropsColumns);\n      propsChanged = propsChanged || !(0, _fastDeepEqual[\"default\"])(prevProps.options, this.props.options);\n\n      if (!this.isRemoteData()) {\n        propsChanged = propsChanged || !(0, _fastDeepEqual[\"default\"])(prevProps.data, this.props.data);\n      }\n\n      if (propsChanged) {\n        var props = this.getProps(this.props);\n        this.setDataManagerFields(props);\n        this.setState(this.dataManager.getRenderState());\n      }\n\n      var count = this.isRemoteData() ? this.state.query.totalCount : this.state.data.length;\n      var currentPage = this.isRemoteData() ? this.state.query.page : this.state.currentPage;\n      var pageSize = this.isRemoteData() ? this.state.query.pageSize : this.state.pageSize;\n\n      if (count <= pageSize * currentPage && currentPage !== 0) {\n        this.onChangePage(null, Math.max(0, Math.ceil(count / pageSize) - 1));\n      }\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props) {\n      var _this3 = this;\n\n      var calculatedProps = (0, _objectSpread2[\"default\"])({}, props || this.props);\n      calculatedProps.components = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.components, calculatedProps.components);\n      calculatedProps.icons = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.icons, calculatedProps.icons);\n      calculatedProps.options = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.options, calculatedProps.options);\n      var localization = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.body, calculatedProps.localization.body);\n      calculatedProps.actions = (0, _toConsumableArray2[\"default\"])(calculatedProps.actions || []);\n      if (calculatedProps.options.selection) calculatedProps.actions = calculatedProps.actions.filter(function (a) {\n        return a;\n      }).map(function (action) {\n        if (action.position === \"auto\" || action.isFreeAction === false || action.position === undefined && action.isFreeAction === undefined) {\n          if (typeof action === \"function\") return {\n            action: action,\n            position: \"toolbarOnSelect\"\n          };else return (0, _objectSpread2[\"default\"])({}, action, {\n            position: \"toolbarOnSelect\"\n          });\n        } else if (action.isFreeAction) {\n          if (typeof action === \"function\") return {\n            action: action,\n            position: \"toolbar\"\n          };else return (0, _objectSpread2[\"default\"])({}, action, {\n            position: \"toolbar\"\n          });\n        } else return action;\n      });else calculatedProps.actions = calculatedProps.actions.filter(function (a) {\n        return a;\n      }).map(function (action) {\n        if (action.position === \"auto\" || action.isFreeAction === false || action.position === undefined && action.isFreeAction === undefined) {\n          if (typeof action === \"function\") return {\n            action: action,\n            position: \"row\"\n          };else return (0, _objectSpread2[\"default\"])({}, action, {\n            position: \"row\"\n          });\n        } else if (action.isFreeAction) {\n          if (typeof action === \"function\") return {\n            action: action,\n            position: \"toolbar\"\n          };else return (0, _objectSpread2[\"default\"])({}, action, {\n            position: \"toolbar\"\n          });\n        } else return action;\n      });\n\n      if (calculatedProps.editable) {\n        if (calculatedProps.editable.onRowAdd) {\n          calculatedProps.actions.push({\n            icon: calculatedProps.icons.Add,\n            tooltip: localization.addTooltip,\n            position: \"toolbar\",\n            disabled: !!this.dataManager.lastEditingRow,\n            onClick: function onClick() {\n              _this3.dataManager.changeRowEditing();\n\n              _this3.setState((0, _objectSpread2[\"default\"])({}, _this3.dataManager.getRenderState(), {\n                showAddRow: !_this3.state.showAddRow\n              }));\n            }\n          });\n        }\n\n        if (calculatedProps.editable.onRowUpdate) {\n          calculatedProps.actions.push(function (rowData) {\n            return {\n              icon: calculatedProps.icons.Edit,\n              tooltip: calculatedProps.editable.editTooltip ? calculatedProps.editable.editTooltip(rowData) : localization.editTooltip,\n              disabled: calculatedProps.editable.isEditable && !calculatedProps.editable.isEditable(rowData),\n              hidden: calculatedProps.editable.isEditHidden && calculatedProps.editable.isEditHidden(rowData),\n              onClick: function onClick(e, rowData) {\n                _this3.dataManager.changeRowEditing(rowData, \"update\");\n\n                _this3.setState((0, _objectSpread2[\"default\"])({}, _this3.dataManager.getRenderState(), {\n                  showAddRow: false\n                }));\n              }\n            };\n          });\n        }\n\n        if (calculatedProps.editable.onRowDelete) {\n          calculatedProps.actions.push(function (rowData) {\n            return {\n              icon: calculatedProps.icons.Delete,\n              tooltip: calculatedProps.editable.deleteTooltip ? calculatedProps.editable.deleteTooltip(rowData) : localization.deleteTooltip,\n              disabled: calculatedProps.editable.isDeletable && !calculatedProps.editable.isDeletable(rowData),\n              hidden: calculatedProps.editable.isDeleteHidden && calculatedProps.editable.isDeleteHidden(rowData),\n              onClick: function onClick(e, rowData) {\n                _this3.dataManager.changeRowEditing(rowData, \"delete\");\n\n                _this3.setState((0, _objectSpread2[\"default\"])({}, _this3.dataManager.getRenderState(), {\n                  showAddRow: false\n                }));\n              }\n            };\n          });\n        }\n\n        if (calculatedProps.editable.onBulkUpdate) {\n          calculatedProps.actions.push({\n            icon: calculatedProps.icons.Edit,\n            tooltip: localization.bulkEditTooltip,\n            position: \"toolbar\",\n            hidden: this.dataManager.bulkEditOpen,\n            onClick: function onClick() {\n              _this3.dataManager.changeBulkEditOpen(true);\n\n              _this3.setState(_this3.dataManager.getRenderState());\n            }\n          });\n          calculatedProps.actions.push({\n            icon: calculatedProps.icons.Check,\n            tooltip: localization.bulkEditApprove,\n            position: \"toolbar\",\n            hidden: !this.dataManager.bulkEditOpen,\n            onClick: function onClick() {\n              return _this3.onEditingApproved(\"bulk\");\n            }\n          });\n          calculatedProps.actions.push({\n            icon: calculatedProps.icons.Clear,\n            tooltip: localization.bulkEditCancel,\n            position: \"toolbar\",\n            hidden: !this.dataManager.bulkEditOpen,\n            onClick: function onClick() {\n              _this3.dataManager.changeBulkEditOpen(false);\n\n              _this3.dataManager.clearBulkEditChangedRows();\n\n              _this3.setState(_this3.dataManager.getRenderState());\n            }\n          });\n        }\n      }\n\n      return calculatedProps;\n    }\n  }, {\n    key: \"renderFooter\",\n    value: function renderFooter() {\n      var props = this.getProps();\n\n      if (props.options.paging) {\n        var localization = (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.pagination, this.props.localization.pagination);\n        var isOutsidePageNumbers = this.isOutsidePageNumbers(props);\n        var currentPage = isOutsidePageNumbers ? Math.min(props.page, Math.floor(props.totalCount / this.state.pageSize)) : this.state.currentPage;\n        var totalCount = isOutsidePageNumbers ? props.totalCount : this.state.data.length;\n        return /*#__PURE__*/React.createElement(_Table[\"default\"], null, /*#__PURE__*/React.createElement(_TableFooter[\"default\"], {\n          style: {\n            display: \"grid\"\n          }\n        }, /*#__PURE__*/React.createElement(_TableRow[\"default\"], null, /*#__PURE__*/React.createElement(props.components.Pagination, {\n          classes: {\n            root: props.classes.paginationRoot,\n            toolbar: props.classes.paginationToolbar,\n            caption: props.classes.paginationCaption,\n            selectRoot: props.classes.paginationSelectRoot\n          },\n          style: {\n            \"float\": props.theme.direction === \"rtl\" ? \"\" : \"right\",\n            overflowX: \"auto\"\n          },\n          colSpan: 3,\n          count: this.isRemoteData() ? this.state.query.totalCount : totalCount,\n          icons: props.icons,\n          rowsPerPage: this.state.pageSize,\n          rowsPerPageOptions: props.options.pageSizeOptions,\n          SelectProps: {\n            renderValue: function renderValue(value) {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                style: {\n                  padding: \"0px 5px\"\n                }\n              }, value + \" \" + localization.labelRowsSelect + \" \");\n            }\n          },\n          page: this.isRemoteData() ? this.state.query.page : currentPage,\n          onChangePage: this.onChangePage,\n          onChangeRowsPerPage: this.onChangeRowsPerPage,\n          ActionsComponent: function ActionsComponent(subProps) {\n            return props.options.paginationType === \"normal\" ? /*#__PURE__*/React.createElement(_components.MTablePagination, (0, _extends2[\"default\"])({}, subProps, {\n              icons: props.icons,\n              localization: localization,\n              showFirstLastPageButtons: props.options.showFirstLastPageButtons\n            })) : /*#__PURE__*/React.createElement(_components.MTableSteppedPagination, (0, _extends2[\"default\"])({}, subProps, {\n              icons: props.icons,\n              localization: localization,\n              showFirstLastPageButtons: props.options.showFirstLastPageButtons\n            }));\n          },\n          labelDisplayedRows: function labelDisplayedRows(row) {\n            return localization.labelDisplayedRows.replace(\"{from}\", row.from).replace(\"{to}\", row.to).replace(\"{count}\", row.count);\n          },\n          labelRowsPerPage: localization.labelRowsPerPage\n        }))));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var props = this.getProps();\n      return /*#__PURE__*/React.createElement(_reactBeautifulDnd.DragDropContext, {\n        onDragEnd: this.onDragEnd,\n        nonce: props.options.cspNonce\n      }, /*#__PURE__*/React.createElement(props.components.Container, {\n        style: (0, _objectSpread2[\"default\"])({\n          position: \"relative\"\n        }, props.style)\n      }, props.options.paginationPosition === \"top\" || props.options.paginationPosition === \"both\" ? this.renderFooter() : null, props.options.toolbar && /*#__PURE__*/React.createElement(props.components.Toolbar, {\n        actions: props.actions,\n        components: props.components,\n        selectedRows: this.state.selectedCount > 0 ? this.state.originalData.filter(function (a) {\n          return a.tableData.checked;\n        }) : [],\n        columns: this.state.columns,\n        columnsButton: props.options.columnsButton,\n        icons: props.icons,\n        exportAllData: props.options.exportAllData,\n        exportButton: props.options.exportButton,\n        exportDelimiter: props.options.exportDelimiter,\n        exportFileName: props.options.exportFileName,\n        exportCsv: props.options.exportCsv,\n        exportPdf: props.options.exportPdf,\n        getFieldValue: this.dataManager.getFieldValue,\n        data: this.state.data,\n        renderData: this.state.renderData,\n        search: props.options.search,\n        showTitle: props.options.showTitle,\n        showTextRowsSelected: props.options.showTextRowsSelected,\n        toolbarButtonAlignment: props.options.toolbarButtonAlignment,\n        searchFieldAlignment: props.options.searchFieldAlignment,\n        searchAutoFocus: props.options.searchAutoFocus,\n        searchFieldStyle: props.options.searchFieldStyle,\n        searchFieldVariant: props.options.searchFieldVariant,\n        title: props.title,\n        searchText: this.dataManager.searchText,\n        onSearchChanged: this.onSearchChangeDebounce,\n        dataManager: this.dataManager,\n        onColumnsChanged: this.onChangeColumnHidden,\n        localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.toolbar, this.props.localization.toolbar)\n      }), props.options.grouping && /*#__PURE__*/React.createElement(props.components.Groupbar, {\n        icons: props.icons,\n        localization: (0, _objectSpread2[\"default\"])({}, MaterialTable.defaultProps.localization.grouping, props.localization.grouping),\n        groupColumns: this.state.columns.filter(function (col) {\n          return col.tableData.groupOrder > -1;\n        }).sort(function (col1, col2) {\n          return col1.tableData.groupOrder - col2.tableData.groupOrder;\n        }),\n        onSortChanged: this.onChangeGroupOrder,\n        onGroupRemoved: this.onGroupRemoved\n      }), /*#__PURE__*/React.createElement(ScrollBar, {\n        \"double\": props.options.doubleHorizontalScroll\n      }, /*#__PURE__*/React.createElement(_reactBeautifulDnd.Droppable, {\n        droppableId: \"headers\",\n        direction: \"horizontal\"\n      }, function (provided, snapshot) {\n        var table = _this4.renderTable(props);\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          ref: provided.innerRef\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          ref: _this4.tableContainerDiv,\n          style: {\n            maxHeight: props.options.maxBodyHeight,\n            minHeight: props.options.minBodyHeight,\n            overflowY: props.options.overflowY\n          }\n        }, _this4.state.width && props.options.fixedColumns && props.options.fixedColumns.right ? /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: _this4.getColumnsWidth(props, -1 * props.options.fixedColumns.right),\n            position: \"absolute\",\n            top: 0,\n            right: 0,\n            boxShadow: \"-2px 0px 15px rgba(125,147,178,.25)\",\n            overflowX: \"hidden\",\n            zIndex: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: _this4.state.width,\n            background: \"white\",\n            transform: \"translateX(calc(\".concat(_this4.getColumnsWidth(props, -1 * props.options.fixedColumns.right), \" - 100%))\")\n          }\n        }, table)) : null, /*#__PURE__*/React.createElement(\"div\", null, table), _this4.state.width && props.options.fixedColumns && props.options.fixedColumns.left ? /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: _this4.getColumnsWidth(props, props.options.fixedColumns.left),\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            boxShadow: \"2px 0px 15px rgba(125,147,178,.25)\",\n            overflowX: \"hidden\",\n            zIndex: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            width: _this4.state.width,\n            background: \"white\"\n          }\n        }, table)) : null), provided.placeholder);\n      })), (this.state.isLoading || props.isLoading) && props.options.loadingType === \"linear\" && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          width: \"100%\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\"\n        }\n      }, /*#__PURE__*/React.createElement(_LinearProgress[\"default\"], null))), props.options.paginationPosition === \"bottom\" || props.options.paginationPosition === \"both\" ? this.renderFooter() : null, (this.state.isLoading || props.isLoading) && props.options.loadingType === \"overlay\" && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\",\n          zIndex: 11\n        }\n      }, /*#__PURE__*/React.createElement(props.components.OverlayLoading, {\n        theme: props.theme\n      })), this.state.errorState && this.state.errorState.errorCause === \"query\" && /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          height: \"100%\",\n          width: \"100%\",\n          zIndex: 11\n        }\n      }, /*#__PURE__*/React.createElement(props.components.OverlayError, {\n        error: this.state.errorState,\n        retry: this.retry,\n        theme: props.theme,\n        icon: props.icons.Retry\n      }))));\n    }\n  }]);\n  return MaterialTable;\n}(React.Component);\n\nexports[\"default\"] = MaterialTable;\n\nvar style = function style() {\n  return {\n    horizontalScrollContainer: {\n      \"& ::-webkit-scrollbar\": {\n        \"-webkit-appearance\": \"none\"\n      },\n      \"& ::-webkit-scrollbar:horizontal\": {\n        height: 8\n      },\n      \"& ::-webkit-scrollbar-thumb\": {\n        borderRadius: 4,\n        border: \"2px solid white\",\n        backgroundColor: \"rgba(0, 0, 0, .3)\"\n      }\n    }\n  };\n};\n\nvar ScrollBar = (0, _core.withStyles)(style)(function (_ref) {\n  var _double = _ref[\"double\"],\n      children = _ref.children,\n      classes = _ref.classes;\n\n  if (_double) {\n    return /*#__PURE__*/React.createElement(_reactDoubleScrollbar[\"default\"], null, children);\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.horizontalScrollContainer,\n      style: {\n        overflowX: \"auto\",\n        position: \"relative\"\n      }\n    }, children);\n  }\n});","map":null,"metadata":{},"sourceType":"script"}