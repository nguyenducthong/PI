{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\ConceptClass\\\\ConceptClassEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, DialogTitle, DialogContent, DialogActions } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { checkCode, addNewConceptClass, updateConceptClass } from \"./ConceptClassService\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar ConceptClassEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(ConceptClassEditorDialog, _Component);\n\n  var _super = _createSuper(ConceptClassEditorDialog);\n\n  function ConceptClassEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, ConceptClassEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      shortName: \"\",\n      description: \"\",\n      isActive: false,\n      isView: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var _this$state = _this.state,\n          id = _this$state.id,\n          code = _this$state.code;\n      var t = _this.props.t;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          console.log(\"Code đã được sử dụng\");\n          toast.warning(t('mess_code'));\n        } else {\n          //Nếu trả về false là code chưa sử dụng có thể dùng\n          if (id) {\n            _this.setState({\n              isView: true\n            });\n\n            updateConceptClass(_objectSpread({}, _this.state)).then(function () {\n              _this.props.handleOKEditClose();\n\n              toast.success(t('mess_edit'));\n            });\n          } else {\n            _this.setState({\n              isView: true\n            });\n\n            addNewConceptClass(_objectSpread({}, _this.state)).then(function () {\n              _this.props.handleOKEditClose();\n\n              toast.success(t('mess_add'));\n            });\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ConceptClassEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          name = _this$state2.name,\n          code = _this$state2.code,\n          shortName = _this$state2.shortName,\n          isView = _this$state2.isView,\n          description = _this$state2.description;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: 'sm',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, \" \", t(\"SaveUpdate\"), \" \")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 32\n          }\n        }, \" * \"), t(\"ConceptClass.code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 32\n          }\n        }, \" * \"), t(\"ConceptClass.name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"ConceptClass.Short_Name\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"shortName\",\n        value: shortName,\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"ConceptClass.description\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }\n      }, t('Cancel')), !isView && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 28\n        }\n      }, t('Save')))));\n    }\n  }]);\n\n  return ConceptClassEditorDialog;\n}(Component);\n\nexport default ConceptClassEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/ConceptClass/ConceptClassEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogTitle","DialogContent","DialogActions","ValidatorForm","TextValidator","checkCode","addNewConceptClass","updateConceptClass","Draggable","Paper","toast","configure","PaperComponent","props","ConceptClassEditorDialog","state","name","code","shortName","description","isActive","isView","handleChange","event","source","persist","setState","target","checked","value","handleFormSubmit","id","t","then","result","data","console","log","warning","handleOKEditClose","success","open","handleClose","item","i18n","cursor","overflowY","display","flexDirection","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { checkCode, addNewConceptClass, updateConceptClass } from \"./ConceptClassService\";\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntoast.configure();\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass ConceptClassEditorDialog extends Component {\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    shortName:\"\",\r\n    description:\"\",\r\n    isActive: false,\r\n    isView: false\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleFormSubmit = () => {\r\n    let { id , code} = this.state;\r\n    let { t } = this.props;\r\n    \r\n    checkCode(id, code).then((result) => {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if (result.data) {\r\n        console.log(\"Code đã được sử dụng\");\r\n        toast.warning(t('mess_code'));\r\n      } else {\r\n        //Nếu trả về false là code chưa sử dụng có thể dùng\r\n        if (id) {\r\n          this.setState({isView: true});\r\n            updateConceptClass({\r\n            ...this.state\r\n          }).then(() => {\r\n            this.props.handleOKEditClose();\r\n            toast.success(t('mess_edit'));\r\n          });\r\n        } else {\r\n          this.setState({isView: true});\r\n            addNewConceptClass({\r\n            ...this.state\r\n          }).then(() => {\r\n            this.props.handleOKEditClose();\r\n            toast.success(t('mess_add'));\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\r\n    let { open, handleClose,item } = this.props;\r\n    this.setState(item);\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      shortName,\r\n      isView,\r\n      description\r\n    } = this.state;\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    return (\r\n      <Dialog open={open} PaperComponent={PaperComponent} maxWidth={'sm'} fullWidth={true}>\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20\"> {t(\"SaveUpdate\")} </span>\r\n        </DialogTitle>\r\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit} style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}>\r\n          <DialogContent dividers>\r\n          <Grid className=\"mb-16\" container spacing={4}>\r\n              <Grid item sm={12} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={<span><span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"ConceptClass.code\")}\r\n                      </span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={<span><span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"ConceptClass.name\")}\r\n                      </span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"ConceptClass.Short_Name\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"shortName\"\r\n                  value={shortName}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"ConceptClass.description\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n \t        </DialogContent>\r\n            \r\n            <DialogActions spacing={4}  className=\"flex flex-end flex-middle\">\r\n            <Button \r\n                variant=\"contained\" \r\n                color=\"secondary\" \r\n                onClick={() => this.props.handleClose()}>\r\n                  {t('Cancel')}\r\n              </Button>\r\n              {(!isView && <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\">\r\n                  {t('Save')}\r\n              </Button>)}\r\n            </DialogActions>\r\n          </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConceptClassEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}