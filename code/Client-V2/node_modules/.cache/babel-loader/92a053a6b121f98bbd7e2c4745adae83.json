{"ast":null,"code":"import _createForOfIteratorHelper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQASampleSet\\\\EQASampleSetEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, InputLabel, FormControl, MenuItem, Select, InputAdornment, DialogActions, DialogContent, DialogTitle, FormHelperText, Icon, IconButton } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\nimport { saveItem, checkCode } from \"./EQASampleSetService\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EQARoundSearchDialog from \"./EQARoundSearchDialog\";\nimport EQASampleSearchDialog from \"./EQASampleSearchDialog\";\nimport { el } from \"date-fns/locale\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport '../../../styles/views/_style.scss';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar EQASampleSetEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQASampleSetEditorDialog, _Component);\n\n  var _super = _createSuper(EQASampleSetEditorDialog);\n\n  function EQASampleSetEditorDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQASampleSetEditorDialog);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var details = _this.state.details;\n      var t = _this.props.t;\n\n      if (details != null && details.length > 0) {\n        details.forEach(function (element) {\n          if (event.target.value == element.orderNumber) {//toast.warning(t(\"EQASampleSet.duplicate_orderNumber\") + \" \" + event.target.value);\n          }\n\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name == \"orderNumber\") {\n              element.orderNumber = event.target.value;\n            }\n          }\n        });\n\n        _this.setState({\n          details: details\n        });\n      }\n    };\n\n    _this.checkDuplicate = function (data) {\n      var t = _this.props.t;\n      var count = 0;\n\n      if (data != null && data.length > 0) {\n        data.forEach(function (item1) {\n          data.forEach(function (item2) {\n            if (item1.orderNumber == item2.orderNumber) {\n              count++;\n            }\n          });\n        });\n\n        if (count > data.length) {\n          toast.warning(t(\"EQASampleSet.duplicate_orderNumber\"));\n          return true;\n        } else {\n          return false;\n        }\n      }\n    };\n\n    _this.handleFormSubmit = function () {\n      _this.setState({\n        hasErrorRound: false\n      });\n\n      var _this$state = _this.state,\n          code = _this$state.code,\n          id = _this$state.id,\n          details = _this$state.details;\n      var t = _this.props.t;\n\n      if (!_this.checkDuplicate(details)) {\n        checkCode(id, code).then(function (result) {\n          //Nếu trả về true là code đã được sử dụng\n          if (result.data) {\n            // console.log(\"Code đã được sử dụng\");\n            toast.warning(t(\"mess_code\"));\n          } else if (details != null && details.length > 0) {\n            if (id) {\n              _this.setState({\n                isView: true\n              });\n\n              saveItem(_objectSpread({}, _this.state)).then(function (response) {\n                if (response.data != null && response.status == 200) {\n                  _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                    isView: false\n                  }));\n\n                  toast.success(t(\"mess_edit\"));\n                } // this.props.handleOKEditClose();\n\n              }).catch(function () {\n                toast.warning(t(\"EQASampleSet.notify.deleteError\"));\n\n                _this.setState({\n                  isView: false\n                });\n              });\n            } else {\n              _this.setState({\n                isView: true\n              });\n\n              saveItem(_objectSpread({}, _this.state)).then(function (response) {\n                if (response.data != null && response.status == 200) {\n                  id = response.data.id;\n\n                  _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                    isView: false\n                  }));\n\n                  toast.success(t(\"mess_add\"));\n                } // this.props.handleOKEditClose();\n\n              }).catch(function () {\n                toast.warning(t(\"EQASampleSet.notify.deleteError\"));\n\n                _this.setState({\n                  isView: false\n                });\n              });\n            }\n          } else {\n            toast.warning(t(\"EQASampleSet.notify.checkDetails\"));\n          }\n        });\n      }\n    };\n\n    _this.handleSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchDialog: false\n      });\n    };\n\n    _this.handleSearchEQARoundDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchEQARoundSearchDialog: false\n      });\n    };\n\n    _this.handleSelectEQARound = function (item) {\n      _this.setState({\n        eqaRound: item,\n        details: [],\n        sampleList: []\n      });\n\n      if (item != null) {\n        _this.setState({\n          eqaRoundId: item.id\n        });\n      }\n\n      _this.handleSearchEQARoundDialogClose();\n    };\n\n    _this.handleSearchEQASampleDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchEQASampleSearchDialog: false\n      });\n    };\n\n    _this.handleSelectEQASample = function (listItem) {\n      var details = _this.state.details;\n      listItem.forEach(function (item) {\n        var notInList = true;\n\n        if (details == null || details.length == 0) {\n          details = [];\n          var eQASampleSetDetail = {};\n          eQASampleSetDetail.orderNumber = 1; //nếu là lần đầu thì mặc định orderNumber = 1\n\n          eQASampleSetDetail.sample = item.sampleList;\n          eQASampleSetDetail.sampleCode = item.sampleList.code;\n          eQASampleSetDetail.result = item.sampleList.result;\n          details.push(eQASampleSetDetail);\n        } else {\n          details.forEach(function (eQASampleSetDetail) {\n            if (eQASampleSetDetail.sample != null && item.sampleList.id != null && eQASampleSetDetail.sample.id == item.sampleList.id) {\n              notInList = false;\n            }\n          });\n\n          if (notInList) {\n            var _eQASampleSetDetail = {};\n            _eQASampleSetDetail.orderNumber = details.length + 1; //nếu không là lần đầu thì mặc định = số lượng danh sách + 1\n\n            _eQASampleSetDetail.sample = item.sampleList;\n            _eQASampleSetDetail.sampleCode = item.sampleList.code;\n            _eQASampleSetDetail.result = item.sampleList.result;\n            details.push(_eQASampleSetDetail);\n          }\n        }\n      });\n\n      if (details && details.length > 0) {\n        details.forEach(function (element) {\n          var str = element.sampleCode;\n          str = str.split(\"-\");\n          str = parseInt(str[str.length - 1]);\n          element.number = str;\n        });\n        details.sort(function (a, b) {\n          return a.number > b.number ? 1 : a.number === b.number ? a.code > b.code ? 1 : -1 : -1;\n        });\n      }\n\n      _this.setState({\n        details\n      }, function () {\n        this.handleSearchEQASampleDialogClose();\n      });\n    };\n\n    _this.handleAddSampleButtonClick = function () {\n      var _this$state2 = _this.state,\n          eqaRound = _this$state2.eqaRound,\n          eqaRoundId = _this$state2.eqaRoundId;\n\n      if (eqaRound != null && eqaRoundId != \"\") {\n        _this.setState({\n          shouldOpenSearchEQASampleSearchDialog: true\n        });\n      } else {\n        toast.warn(_this.props.t(\"EQASampleSet.please_select_eqa_round\"));\n      }\n    };\n\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      details: [],\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenSearchEQASampleSearchDialog: false,\n      eqaRound: [],\n      eqaRoundId: \"\",\n      sampleList: [],\n      isView: false\n    };\n    _this.dialogRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(EQASampleSetEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n\n      if (item && item.details && item.details.length > 0) {\n        item.details.forEach(function (element) {\n          var str = element.sampleCode;\n          str = str.split(\"-\");\n          str = parseInt(str[str.length - 1]);\n          element.number = str;\n        });\n        item.details.sort(function (a, b) {\n          return a.number > b.number ? 1 : a.number === b.number ? a.code > b.code ? 1 : -1 : -1;\n        });\n      }\n\n      var sampleList = [];\n\n      if (typeof item.details != \"undefined\" && item.details != null) {\n        var _iterator = _createForOfIteratorHelper(item.details),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _detail$sample;\n\n            var detail = _step.value;\n            var myItem = {\n              sampleList: _objectSpread(_objectSpread({}, detail), {}, {\n                id: (_detail$sample = detail.sample) === null || _detail$sample === void 0 ? void 0 : _detail$sample.id\n              })\n            };\n            sampleList.push(myItem);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.setState(_objectSpread(_objectSpread({}, this.props.item), {}, {\n        sampleList\n      }));\n\n      if (item != null && item.eqaRound != null) {\n        this.setState({\n          eqaRoundId: item.eqaRound.id\n        });\n      }\n    }\n  }, {\n    key: \"deleteEQASampleSetDetail\",\n    value: function deleteEQASampleSetDetail(eQASampleSetDetail) {\n      var _this$state3 = this.state,\n          details = _this$state3.details,\n          sampleList = _this$state3.sampleList;\n      var index = details.findIndex(function (element) {\n        if (element.tableData && element.tableData.id && eQASampleSetDetail && eQASampleSetDetail.tableData && eQASampleSetDetail.tableData.id) {\n          return element.tableData.id == eQASampleSetDetail.tableData.id;\n        }\n      });\n\n      if (index) {\n        details.splice(index, 1);\n        sampleList.splice(index, 1);\n        this.setState({\n          details,\n          sampleList\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000\n      };\n      var _this$state4 = this.state,\n          id = _this$state4.id,\n          name = _this$state4.name,\n          code = _this$state4.code,\n          eqaRound = _this$state4.eqaRound,\n          eqaRoundId = _this$state4.eqaRoundId,\n          eqaSample = _this$state4.eqaSample,\n          details = _this$state4.details,\n          sampleList = _this$state4.sampleList,\n          round = _this$state4.round,\n          isView = _this$state4.isView,\n          shouldOpenSearchEQARoundSearchDialog = _this$state4.shouldOpenSearchEQARoundSearchDialog,\n          shouldOpenSearchEQASampleSearchDialog = _this$state4.shouldOpenSearchEQASampleSearchDialog,\n          shouldOpenConfirmationDialog = _this$state4.shouldOpenConfirmationDialog,\n          hasErrorRound = _this$state4.hasErrorRound,\n          shouldOpenSearchDialog = _this$state4.shouldOpenSearchDialog,\n          administrativeUnit = _this$state4.administrativeUnit;\n      var columns = [{\n        title: t(\"STT\"),\n        field: \"orderNumber\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        cellStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            className: \"w-30 mb-8\",\n            onChange: function onChange(orderNumber) {\n              return _this2.handleRowDataCellChange(rowData, orderNumber);\n            },\n            type: \"number\",\n            name: \"orderNumber\",\n            value: rowData.orderNumber,\n            validators: [\"required\", \"minNumber:0\"],\n            errorMessages: [t(\"EQASampleSet.required_field\"), t(\"EQASampleSet.number_cannot_be_negative\")],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t(\"EQASampleSet.sample_code\"),\n        field: \"sampleCode\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: t(\"EQASampleSet.tube_code\"),\n        field: \"code\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        }\n      }, {\n        title: t(\"Action\"),\n        field: \"custom\",\n        width: \"250\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"center\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Button, {\n            className: \"mr-16 mb-8\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: function onClick() {\n              return _this2.deleteEQASampleSetDetail(rowData);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 11\n            }\n          }, t(\"Delete\"));\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }\n      }, \" \", (id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"EQASampleSet.title\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 114\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 49\n          }\n        }, \" * \"), t(\"Code\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 49\n          }\n        }, \" * \"), t(\"Name\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(AsynchronousAutocomplete, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 49\n          }\n        }, \" * \"), t(\"EQARound.title\")),\n        size: \"small\",\n        variant: \"outlined\",\n        searchFunction: searchByPageEQARound,\n        searchObject: searchObject,\n        defaultValue: eqaRound,\n        value: eqaRound,\n        displayLable: \"code\",\n        valueTextValidator: eqaRound,\n        onSelect: this.handleSelectEQARound,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mt-8\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleAddSampleButtonClick //, sampleList: {details}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 17\n        }\n      }, t(\"EQASampleSet.add_sample\"))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t(\"SampleManagement.sample-list.title\"),\n        data: details,\n        columns: columns,\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              style: {\n                witdth: \"100%\"\n              },\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 23\n              }\n            }, /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 25\n              }\n            })));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this2.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 17\n        }\n      }), shouldOpenSearchEQASampleSearchDialog && /*#__PURE__*/React.createElement(EQASampleSearchDialog, {\n        open: this.state.shouldOpenSearchEQASampleSearchDialog,\n        handleSelect: this.handleSelectEQASample,\n        eqaRound: eqaRound,\n        sampleList: this.state.sampleList,\n        handleClose: this.handleSearchEQASampleDialogClose,\n        ref: this.dialogRef,\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"button\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 13\n        }\n      }, \" \", t(\"Cancel\")), /*#__PURE__*/React.createElement(Button, {\n        disabled: isView,\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }\n      }, t(\"Save\")))));\n    }\n  }]);\n\n  return EQASampleSetEditorDialog;\n}(Component);\n\nexport default EQASampleSetEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQASampleSet/EQASampleSetEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","InputLabel","FormControl","MenuItem","Select","InputAdornment","DialogActions","DialogContent","DialogTitle","FormHelperText","Icon","IconButton","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","ValidatorForm","TextValidator","TextField","saveItem","checkCode","searchByPage","searchByPageEQARound","AsynchronousAutocomplete","Draggable","Paper","EQARoundSearchDialog","EQASampleSearchDialog","el","toast","configure","autoClose","draggable","limit","PaperComponent","props","EQASampleSetEditorDialog","handleChange","event","source","persist","setState","isActive","target","checked","name","value","handleRowDataCellChange","rowData","details","state","t","length","forEach","element","orderNumber","tableData","id","checkDuplicate","data","count","item1","item2","warning","handleFormSubmit","hasErrorRound","code","then","result","isView","response","status","success","catch","handleSearchDialogClose","shouldOpenSearchDialog","handleSearchEQARoundDialogClose","shouldOpenSearchEQARoundSearchDialog","handleSelectEQARound","item","eqaRound","sampleList","eqaRoundId","handleSearchEQASampleDialogClose","shouldOpenSearchEQASampleSearchDialog","handleSelectEQASample","listItem","notInList","eQASampleSetDetail","sample","sampleCode","push","str","split","parseInt","number","sort","a","b","handleAddSampleButtonClick","warn","shouldOpenConfirmationDialog","dialogRef","createRef","open","handleClose","detail","myItem","index","findIndex","splice","handleOKEditClose","i18n","searchObject","pageIndex","pageSize","eqaSample","round","administrativeUnit","columns","title","field","width","headerStyle","minWidth","paddingLeft","paddingRight","textAlign","cellStyle","render","align","deleteEQASampleSetDetail","overflowY","display","flexDirection","cursor","position","right","top","color","selection","actionsColumnIndex","paging","search","rowStyle","backgroundColor","padding","toolbar","Toolbar","witdth","rows","body","emptyDataSourceMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  InputAdornment,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormHelperText,\r\n  Icon, IconButton\r\n} from \"@material-ui/core\";\r\n\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader\r\n} from \"material-table\";\r\nimport {\r\n  ValidatorForm,\r\n  TextValidator,\r\n  TextField\r\n} from \"react-material-ui-form-validator\";\r\nimport { saveItem, checkCode } from \"./EQASampleSetService\";\r\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport EQARoundSearchDialog from \"./EQARoundSearchDialog\";\r\nimport EQASampleSearchDialog from \"./EQASampleSearchDialog\";\r\nimport { el } from \"date-fns/locale\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport '../../../styles/views/_style.scss';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass EQASampleSetEditorDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      code: \"\",\r\n      details: [],\r\n      shouldOpenSearchDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenSearchEQASampleSearchDialog: false,\r\n      eqaRound: [],\r\n      eqaRoundId: \"\",\r\n      sampleList: [],\r\n      isView: false\r\n    };\r\n    this.dialogRef = React.createRef();\r\n  }\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  handleRowDataCellChange = (rowData, event) => {\r\n    let { details } = this.state;\r\n    let { t } = this.props;\r\n    if (details != null && details.length > 0) {\r\n      details.forEach(element => {\r\n        if(event.target.value == element.orderNumber){\r\n         //toast.warning(t(\"EQASampleSet.duplicate_orderNumber\") + \" \" + event.target.value);\r\n        }\r\n        if (\r\n          element.tableData != null &&\r\n          rowData != null &&\r\n          rowData.tableData != null &&\r\n          element.tableData.id == rowData.tableData.id\r\n        ) {\r\n          if (event.target.name == \"orderNumber\") {\r\n            element.orderNumber = event.target.value;\r\n          }\r\n        }\r\n      });\r\n      this.setState({ details: details });\r\n    }\r\n  };\r\n\r\n  checkDuplicate = (data)=>{\r\n    let { t } = this.props;\r\n    let count = 0;\r\n    if(data != null && data.length > 0){\r\n      data.forEach(item1 =>{\r\n        data.forEach(item2 =>{\r\n          if(item1.orderNumber == item2.orderNumber){\r\n            count++;\r\n          }\r\n        })\r\n      });\r\n      if(count > data.length){\r\n        toast.warning(t(\"EQASampleSet.duplicate_orderNumber\"));\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  handleFormSubmit = () => {\r\n    this.setState({ hasErrorRound: false });\r\n    let { code, id, details } = this.state;\r\n    let { t } = this.props;\r\n    if(!this.checkDuplicate(details)){\r\n      checkCode(id, code).then(result => {\r\n        //Nếu trả về true là code đã được sử dụng\r\n        if (result.data) {\r\n          // console.log(\"Code đã được sử dụng\");\r\n          toast.warning(t(\"mess_code\"));\r\n        } else if(details != null && details.length > 0 ) {\r\n          if (id) {\r\n            this.setState({isView: true});\r\n            saveItem({\r\n              ...this.state\r\n            }).then((response) => {\r\n              if(response.data != null && response.status == 200){\r\n                this.setState({...this.state,isView: false});\r\n                toast.success(t(\"mess_edit\"));\r\n              }\r\n              // this.props.handleOKEditClose();\r\n            }).catch(()=>{\r\n              toast.warning(t(\"EQASampleSet.notify.deleteError\"));\r\n              this.setState({isView: false});\r\n            });\r\n           \r\n          } else {\r\n            this.setState({isView: true});\r\n            saveItem({\r\n              ...this.state\r\n            }).then((response) => {\r\n              if(response.data != null && response.status == 200){\r\n                id = response.data.id\r\n                this.setState({...this.state,isView: false});\r\n                toast.success(t(\"mess_add\"));\r\n              }\r\n              // this.props.handleOKEditClose();\r\n            }).catch(()=>{\r\n              toast.warning(t(\"EQASampleSet.notify.deleteError\"));\r\n              this.setState({isView: false});\r\n            });\r\n          }\r\n        }else{\r\n          toast.warning(t(\"EQASampleSet.notify.checkDetails\"));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    if (item && item.details && item.details.length > 0) {\r\n      item.details.forEach(element=>{\r\n        let str = element.sampleCode;\r\n        str = str.split(\"-\");\r\n        str = parseInt(str[str.length - 1]);\r\n        element.number = str;\r\n      })\r\n    \r\n      item.details.sort((a, b) =>\r\n        a.number > b.number\r\n          ? 1\r\n          : a.number === b.number\r\n          ? a.code > b.code\r\n            ? 1\r\n            : -1\r\n          : -1\r\n      );\r\n    }\r\n  \r\n\r\n\r\n    let sampleList = [];\r\n    if (typeof item.details != \"undefined\" && item.details != null) {\r\n      for (const detail of item.details) {\r\n        const myItem = {\r\n          sampleList: {\r\n            ...detail,\r\n            id: detail.sample?.id\r\n          }\r\n        };\r\n        sampleList.push(myItem);\r\n      }\r\n    }\r\n    this.setState({\r\n      ...this.props.item,\r\n      sampleList\r\n    });\r\n    if (item != null && item.eqaRound != null) {\r\n      this.setState({ eqaRoundId: item.eqaRound.id });\r\n    }\r\n  }\r\n\r\n  handleSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchDialog: false\r\n    });\r\n  };\r\n\r\n  handleSearchEQARoundDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchEQARoundSearchDialog: false\r\n    });\r\n  };\r\n\r\n  handleSelectEQARound = item => {\r\n    this.setState({ eqaRound: item, details: [], sampleList: [] });\r\n    if (item != null) {\r\n      this.setState({ eqaRoundId: item.id });\r\n    }\r\n    this.handleSearchEQARoundDialogClose();\r\n  };\r\n\r\n  handleSearchEQASampleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchEQASampleSearchDialog: false\r\n    });\r\n  };\r\n\r\n  handleSelectEQASample = listItem => {\r\n    let { details } = this.state;\r\n    listItem.forEach(item => {\r\n      let notInList = true;\r\n      if (details == null || details.length == 0) {\r\n        details = [];\r\n        let eQASampleSetDetail = {};\r\n        eQASampleSetDetail.orderNumber = 1; //nếu là lần đầu thì mặc định orderNumber = 1\r\n        eQASampleSetDetail.sample = item.sampleList;\r\n        eQASampleSetDetail.sampleCode = item.sampleList.code;\r\n        eQASampleSetDetail.result = item.sampleList.result;\r\n        details.push(eQASampleSetDetail);\r\n      } else {\r\n        details.forEach(eQASampleSetDetail => {\r\n          if (\r\n            eQASampleSetDetail.sample != null &&\r\n            item.sampleList.id != null &&\r\n            eQASampleSetDetail.sample.id == item.sampleList.id\r\n          ) {\r\n            notInList = false;\r\n          }\r\n        });\r\n\r\n        if (notInList) {\r\n          let eQASampleSetDetail = {};\r\n          eQASampleSetDetail.orderNumber = details.length + 1; //nếu không là lần đầu thì mặc định = số lượng danh sách + 1\r\n          eQASampleSetDetail.sample = item.sampleList;\r\n          eQASampleSetDetail.sampleCode = item.sampleList.code;\r\n          eQASampleSetDetail.result = item.sampleList.result;\r\n          details.push(eQASampleSetDetail);\r\n        }\r\n      }\r\n    });\r\n\r\n    if (details && details.length > 0) {\r\n      details.forEach(element=>{\r\n        let str = element.sampleCode;\r\n        str = str.split(\"-\");\r\n        str = parseInt(str[str.length - 1]);\r\n        element.number = str;\r\n      })\r\n      details.sort((a, b) =>\r\n        a.number > b.number\r\n          ? 1\r\n          : a.number === b.number\r\n          ? a.code > b.code\r\n            ? 1\r\n            : -1\r\n          : -1\r\n      );\r\n    }\r\n  \r\n    this.setState({ details }, function() {\r\n      this.handleSearchEQASampleDialogClose();\r\n    });\r\n  };\r\n\r\n  deleteEQASampleSetDetail(eQASampleSetDetail) {\r\n    let { details, sampleList } = this.state;\r\n    let index = details.findIndex(function(element) {\r\n      if (\r\n        element.tableData &&\r\n        element.tableData.id &&\r\n        eQASampleSetDetail &&\r\n        eQASampleSetDetail.tableData &&\r\n        eQASampleSetDetail.tableData.id\r\n      ) {\r\n        return element.tableData.id == eQASampleSetDetail.tableData.id;\r\n      }\r\n    });\r\n\r\n    if (index) {\r\n      details.splice(index, 1);\r\n      sampleList.splice(index, 1);\r\n      this.setState({ details, sampleList });\r\n    }\r\n  }\r\n\r\n  handleAddSampleButtonClick = () => {\r\n    const { eqaRound, eqaRoundId } = this.state;\r\n    if (eqaRound != null && eqaRoundId != \"\") {\r\n      this.setState({\r\n        shouldOpenSearchEQASampleSearchDialog: true\r\n      });\r\n    } else {\r\n      toast.warn(this.props.t(\"EQASampleSet.please_select_eqa_round\"));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000 };\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      eqaRound,\r\n      eqaRoundId,\r\n      eqaSample,\r\n      details,\r\n      sampleList,\r\n      round,\r\n      isView,\r\n      shouldOpenSearchEQARoundSearchDialog,\r\n      shouldOpenSearchEQASampleSearchDialog,\r\n      shouldOpenConfirmationDialog,\r\n      hasErrorRound,\r\n      shouldOpenSearchDialog,\r\n      administrativeUnit\r\n    } = this.state;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"STT\"),\r\n        field: \"orderNumber\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        render: rowData => (\r\n          <TextValidator\r\n            className=\"w-30 mb-8\"\r\n            onChange={orderNumber =>\r\n              this.handleRowDataCellChange(rowData, orderNumber)\r\n            }\r\n            type=\"number\"\r\n            name=\"orderNumber\"\r\n            value={rowData.orderNumber}\r\n            validators={[\"required\", \"minNumber:0\"]}\r\n            errorMessages={[\r\n              t(\"EQASampleSet.required_field\"),\r\n              t(\"EQASampleSet.number_cannot_be_negative\")\r\n            ]}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: t(\"EQASampleSet.sample_code\"),\r\n        field: \"sampleCode\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"EQASampleSet.tube_code\"),\r\n        field: \"code\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n      },\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        width: \"250\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"center\",\r\n        },\r\n        render: rowData => (\r\n          <Button\r\n            className=\"mr-16 mb-8\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => this.deleteEQASampleSetDetail(rowData)}\r\n          >\r\n            {t(\"Delete\")}\r\n          </Button>\r\n        )\r\n      }\r\n    ];\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth={\"md\"}\r\n        fullWidth={true}\r\n      >\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}\r\n        >\r\n          <DialogTitle style={{ cursor: \"move\" }} id=\"draggable-dialog-title\">\r\n          <span className=\"mb-20 styleColor\"> {(id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"EQASampleSet.title\")} </span>\r\n          <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"Code\")}\r\n                      </span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={5} md={5} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"Name\")}\r\n                      </span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <AsynchronousAutocomplete\r\n                  label={<span className=\"font\"><span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"EQARound.title\")}\r\n                      </span>}\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  searchFunction={searchByPageEQARound}\r\n                  searchObject={searchObject}\r\n                  defaultValue={eqaRound}\r\n                  value={eqaRound}\r\n                  displayLable={\"code\"}\r\n                  valueTextValidator={eqaRound}\r\n                  onSelect={this.handleSelectEQARound}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Button\r\n                  className=\"mt-8\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.handleAddSampleButtonClick} //, sampleList: {details}\r\n                >\r\n                  {t(\"EQASampleSet.add_sample\")}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <MaterialTable\r\n                  title={t(\"SampleManagement.sample-list.title\")}\r\n                  data={details}\r\n                  columns={columns}\r\n                  options={{\r\n                  selection: false,\r\n                  actionsColumnIndex: -1,\r\n                  paging: false,\r\n                  search: false,\r\n                  rowStyle: rowData => ({\r\n                    backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                  }), \r\n                  headerStyle: {\r\n                    backgroundColor: '#358600',\r\n                    color:'#fff',\r\n                  },\r\n                  padding: 'dense',\r\n                  toolbar: false\r\n                }}\r\n                  components={{\r\n                    Toolbar: props => (\r\n                      <div style={{ witdth: \"100%\" }}>\r\n                        <MTableToolbar {...props} />\r\n                      </div>\r\n                    )\r\n                  }}\r\n                  onSelectionChange={rows => {\r\n                    this.data = rows;\r\n                  }}\r\n                  localization={{\r\n                    body: {\r\n                      emptyDataSourceMessage: `${t(\r\n                        \"general.emptyDataMessageTable\"\r\n                      )}`,\r\n                    },\r\n                  }}\r\n                />\r\n                {shouldOpenSearchEQASampleSearchDialog && (\r\n                  <EQASampleSearchDialog\r\n                    open={this.state.shouldOpenSearchEQASampleSearchDialog}\r\n                    handleSelect={this.handleSelectEQASample}\r\n                    eqaRound={eqaRound}\r\n                    sampleList={this.state.sampleList}\r\n                    handleClose={this.handleSearchEQASampleDialogClose}\r\n                    ref={this.dialogRef}\r\n                    t={t}\r\n                    i18n={i18n}\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          \r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              type=\"button\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              {\" \"}\r\n              {t(\"Cancel\")}\r\n            </Button>\r\n            <Button disabled = {isView} variant=\"contained\" color=\"primary\" type=\"submit\">\r\n              {t(\"Save\")}\r\n            </Button>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQASampleSetEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}