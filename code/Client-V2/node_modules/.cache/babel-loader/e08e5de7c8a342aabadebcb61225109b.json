{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\AdministrativeUnit\\\\AdministrativeUnitEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, FormControlLabel, Switch, DialogTitle, DialogContent, DialogActions, Icon, IconButton } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser, addNewAdministrativeUnit, updateAdministrativeUnit, checkCode } from \"./AdministrativeUnitService\";\nimport { generateRandomId } from \"utils\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_loadding.scss';\nimport '../../../styles/views/_style.scss';\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar AdministrativeUnitEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(AdministrativeUnitEditorDialog, _Component);\n\n  var _super = _createSuper(AdministrativeUnitEditorDialog);\n\n  function AdministrativeUnitEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, AdministrativeUnitEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      level: 0,\n      isActive: false,\n      loading: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.openCircularProgress = function () {\n      _this.setState({\n        loading: true\n      });\n    };\n\n    _this.handleFormSubmit = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _this$state, id, code, t;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.openCircularProgress();\n\n            case 2:\n              _this$state = _this.state, id = _this$state.id, code = _this$state.code;\n              t = _this.props.t;\n              checkCode(id, code).then(function (result) {\n                //Nếu trả về true là code đã được sử dụng\n                if (result.data) {\n                  console.log(\"Code đã được sử dụng\");\n                  toast.warning(t('mess_code'));\n\n                  _this.setState({\n                    loading: false\n                  });\n                } else {\n                  if (id) {\n                    updateAdministrativeUnit(_objectSpread({}, _this.state)).then(function () {\n                      toast.success(t('mess_edit'));\n\n                      _this.setState({\n                        loading: false\n                      });\n                    });\n                  } else {\n                    addNewAdministrativeUnit(_objectSpread({}, _this.state)).then(function (response) {\n                      if (response.data != null && response.status == 200) {\n                        _this.state.id = response.data.id;\n\n                        _this.setState(_objectSpread(_objectSpread({}, _this.state), {}, {\n                          loading: false\n                        }));\n\n                        toast.success(t('mess_add'));\n                      }\n                    });\n                  }\n                }\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(AdministrativeUnitEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(item);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var _this$state2 = this.state,\n          id = _this$state2.id,\n          name = _this$state2.name,\n          code = _this$state2.code,\n          level = _this$state2.level,\n          isActive = _this$state2.isActive,\n          loading = _this$state2.loading;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: 'sm',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: clsx(\"wrapperButton\", !loading && 'hidden'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CircularProgress, {\n        className: \"buttonProgress\",\n        size: 24,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, \" \", (id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"AdministrativeUnit.title\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 112\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 23\n          }\n        }, \" *\"), t('AdministrativeUnit.code')),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }\n        }, \" *\"), t('AdministrativeUnit.name')),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        variant: \"outlined\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, t('Cancel')), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }\n      }, t('Save')))));\n    }\n  }]);\n\n  return AdministrativeUnitEditorDialog;\n}(Component);\n\nexport default AdministrativeUnitEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/AdministrativeUnit/AdministrativeUnitEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","FormControlLabel","Switch","DialogTitle","DialogContent","DialogActions","Icon","IconButton","ValidatorForm","TextValidator","getUserById","updateUser","addNewAdministrativeUnit","updateAdministrativeUnit","checkCode","generateRandomId","Draggable","Paper","toast","clsx","CircularProgress","configure","autoClose","draggable","limit","PaperComponent","props","AdministrativeUnitEditorDialog","state","name","code","level","isActive","loading","handleChange","event","source","persist","setState","target","checked","value","openCircularProgress","handleFormSubmit","id","t","then","result","data","console","log","warning","success","response","status","open","handleClose","item","handleOKEditClose","i18n","cursor","position","right","top","overflowY","display","flexDirection","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Dialog,\n  Button,\n  Grid,\n  FormControlLabel,\n  Switch,\n  DialogTitle,\n  DialogContent,\n  DialogActions, Icon, IconButton\n} from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { getUserById, updateUser, addNewAdministrativeUnit,updateAdministrativeUnit, checkCode } from \"./AdministrativeUnitService\";\nimport { generateRandomId } from \"utils\";\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_loadding.scss';\nimport '../../../styles/views/_style.scss';\n\nimport clsx from 'clsx';\nimport CircularProgress from '@material-ui/core/CircularProgress';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit:3\n});\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nclass AdministrativeUnitEditorDialog extends Component {\n  state = {\n    name: \"\",\n    code: \"\",\n    level:0,\n    isActive: false,\n    loading:false\n  };\n\n  handleChange = (event, source) => {\n    event.persist();\n    if (source === \"switch\") {\n      this.setState({ isActive: event.target.checked });\n      return;\n    }\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  openCircularProgress = () => {\n    this.setState({ loading: true });\n  };\n\n  handleFormSubmit = async () => {\n    await this.openCircularProgress();\n    let { id, code } = this.state;\n    let { t } = this.props;\n    checkCode(id, code).then((result) => {\n      //Nếu trả về true là code đã được sử dụng\n      if (result.data) {\n        console.log(\"Code đã được sử dụng\");\n        toast.warning(t('mess_code'));\n        this.setState({loading:false})\n      } else {\n        if (id) {\n          updateAdministrativeUnit({\n            ...this.state\n          }).then(() => {\n            toast.success(t('mess_edit'));\n            this.setState({loading:false})\n          });\n        } else {\n          addNewAdministrativeUnit({\n            ...this.state\n          }).then((response) => {\n            if(response.data != null && response.status == 200){\n              this.state.id = response.data.id\n              this.setState({...this.state, loading:false})\n              toast.success(t('mess_add'));\n            }\n          });\n        }\n      }\n    });\n  };\n\n  componentWillMount() {\n    //getUserById(this.props.uid).then(data => this.setState({ ...data.data }));\n    let { open, handleClose,item } = this.props;\n    this.setState(item);\n  }\n\n  render() {\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\n    let {\n      id,\n      name,\n      code,\n      level,\n      isActive,\n      loading\n    } = this.state;\n    return (\n      <Dialog open={open} PaperComponent={PaperComponent} maxWidth={'sm'} fullWidth={true}>\n        <div className={clsx(\"wrapperButton\", !loading && 'hidden')} >\n          <CircularProgress className=\"buttonProgress\" size={24} />\n        </div>\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n        <span className=\"mb-20 styleColor\" > {(id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"AdministrativeUnit.title\")} </span>\n        <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\n              title={t(\"close\")}>\n              close\n            </Icon>\n            </IconButton>\n        </DialogTitle>\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit} style={{\n            overflowY: \"auto\",\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}>\n          <DialogContent dividers>\n          <Grid className=\"\" container spacing={4}>\n              <Grid item sm={12} xs={12}>\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label={<span className=\"font\">\n                      <span style={{ color: \"red\" }}> *</span>\n                      { t('AdministrativeUnit.code')}\n                    </span>\n                   }\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"code\"\n                  value={code}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n                <TextValidator\n                  className=\"w-100 mb-16\"\n                  label={ <span className=\"font\">\n                    <span style={{ color: \"red\" }}> *</span>\n                    {t('AdministrativeUnit.name')}\n                  </span>}\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                  variant=\"outlined\"\n                  size=\"small\"\n                />\n                {/* <TextValidator\n                  className=\"w-100 mb-16\"\n                  label=\"Level\"\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  name=\"level\"\n                  value={level}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                /> */}\n              </Grid>\n              {/* <Grid>\n                <FormControlLabel\n                  className=\"my-20\"\n                  control={\n                    <Switch\n                      checked={isActive}\n                      onChange={event => this.handleChange(event, \"switch\")}\n                    />\n                  }\n                  label=\"Active Customer\"\n                />\n              </Grid> */}\n            </Grid>\n \t        </DialogContent>\n            \n\n           <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\n            <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                onClick={() => this.props.handleClose()}>\n                  {t('Cancel')}\n              </Button>\n              <Button \n                variant=\"contained\"    \n                color=\"primary\" \n                type=\"submit\">\n                  {t('Save')}\n              </Button>\n            </DialogActions>\n          </ValidatorForm>\n      </Dialog>\n    );\n  }\n}\n\nexport default AdministrativeUnitEditorDialog;\n"]},"metadata":{},"sourceType":"module"}