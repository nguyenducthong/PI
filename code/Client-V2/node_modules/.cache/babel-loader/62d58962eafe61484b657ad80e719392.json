{"ast":null,"code":"import _slicedToArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportEclia\\\\EQAResultReportEcliaTabs.jsx\";\nimport ConstantList from \"../../appConfig\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport moment from \"moment\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Helmet } from 'react-helmet';\nimport Fab from \"@material-ui/core/Fab\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Typography, Tabs, Box, Tab, AppBar, TextField, Checkbox, FormLabel, Button, Grid, FormControlLabel, IconButton, Icon, FormControl, RadioGroup, Radio, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport QRCode from 'qrcode.react';\nimport { MuiPickersUtilsProvider, DateTimePicker, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport AsynchronousAutocomplete from '../utilities/AsynchronousAutocomplete';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport NumberFormat from 'react-number-format';\nimport Card from \"@material-ui/core/Card\";\nimport EQAResultReportEcliaInformation from \"./EQAResultReportEcliaInformation\";\nimport EQAResultReportEcliaFileAttachment from \"./EQAResultReportEcliaFileAttachment\";\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: '-10px',\n      left: '-25px',\n      width: '80px'\n    }\n  };\n})(Tooltip);\n\nfunction MaterialButton(props) {\n  var t = props.t,\n      i18n = props.i18n;\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"delete\")));\n}\n\nfunction NumberFormatCustom(props) {\n  var inputRef = props.inputRef,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: function onValueChange(values) {\n      props.onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    name: props.name,\n    value: props.value,\n    thousandSeparator: true,\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-force-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-force-tab-\".concat(index)\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }, children))));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-force-tab-\".concat(index),\n    'aria-controls': \"scrollable-force-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      width: '100%',\n      minHeight: \"500px\",\n      maxHeight: \"500px\",\n      backgroundColor: theme.palette.background.paper\n    },\n    textHeader: {\n      fontSize: '0.75rem'\n    }\n  };\n}); // const textHeader = {\n//   fontSize:{fontSize:'0.5rem',}\n// }\n\nexport default function CreateStaff(props) {\n  var t = props.t;\n  var i18n = props.i18n;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      item = _React$useState4[0],\n      setItem = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      v = _React$useState6[0],\n      setValueD = _React$useState6[1];\n\n  var handleChangeValue = function handleChangeValue(event, newValue) {\n    setValue(newValue);\n  };\n\n  var searchObject = {\n    pageIndex: 1,\n    pageSize: 1000000\n  };\n  var isEmpty = true;\n\n  if (props.item != null && props.item.files != null) {\n    isEmpty = props.item.files.length === 0;\n\n    if (props.item.logoPath) {\n      isEmpty = false;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"#ffffff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    orientation: \"horizontal\",\n    value: value,\n    onChange: handleChangeValue,\n    variant: \"scrollable\",\n    scrollButtons: \"on\",\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    \"aria-label\": \"scrollable force tabs example\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    label: t('EQAResultReportEclia.information'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Tab, {\n    label: t('fileAttachment'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 0,\n    color: \"#ffffff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EQAResultReportEcliaInformation, {\n    t: t,\n    useStyles: useStyles,\n    item: props.item ? props.item : {} // isView={props.isView ? props.isView : {}}\n    ,\n    isRoleAdmin: props.isRoleAdmin,\n    listHealthOrgRound: props.listHealthOrgRound ? props.listHealthOrgRound : [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: 1,\n    color: \"#ffffff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(EQAResultReportEcliaFileAttachment, {\n    t: t,\n    useStyles: useStyles,\n    item: props.item ? props.item : {},\n    isRoleAdmin: props.isRoleAdmin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  })));\n}","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportEclia/EQAResultReportEcliaTabs.jsx"],"names":["ConstantList","React","PropTypes","makeStyles","PhoneIcon","FavoriteIcon","PersonPinIcon","HelpIcon","ShoppingBasket","ThumbDown","ThumbUp","moment","Breadcrumb","ConfirmationDialog","Helmet","Fab","Autocomplete","Typography","Tabs","Box","Tab","AppBar","TextField","Checkbox","FormLabel","Button","Grid","FormControlLabel","IconButton","Icon","FormControl","RadioGroup","Radio","InputLabel","MenuItem","Select","QRCode","MuiPickersUtilsProvider","DateTimePicker","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","ValidatorForm","TextValidator","AsynchronousAutocomplete","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","withStyles","Tooltip","NumberFormat","Card","EQAResultReportEcliaInformation","EQAResultReportEcliaFileAttachment","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","width","MaterialButton","props","t","i18n","item","onSelect","NumberFormatCustom","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","TabPanel","children","index","node","any","a11yProps","id","useStyles","root","flexGrow","minHeight","maxHeight","background","paper","textHeader","CreateStaff","classes","useState","setValue","setItem","v","setValueD","handleChangeValue","event","newValue","searchObject","pageIndex","pageSize","isEmpty","files","length","logoPath","isRoleAdmin","listHealthOrgRound"],"mappings":"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","sourcesContent":["import ConstantList from \"../../appConfig\";\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket'\r\nimport ThumbDown from '@material-ui/icons/ThumbDown'\r\nimport ThumbUp from '@material-ui/icons/ThumbUp'\r\nimport moment from \"moment\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Helmet } from 'react-helmet';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport {\r\n    Typography,\r\n    Tabs,\r\n    Box,\r\n    Tab,\r\n    AppBar,\r\n    TextField,\r\n    Checkbox,\r\n    FormLabel,\r\n    Button,\r\n    Grid,\r\n    FormControlLabel,\r\n    IconButton,\r\n    Icon,\r\n    FormControl,\r\n    RadioGroup,\r\n    Radio,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n} from '@material-ui/core';\r\nimport QRCode from 'qrcode.react'\r\nimport {\r\n    MuiPickersUtilsProvider, DateTimePicker,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport AsynchronousAutocomplete from '../utilities/AsynchronousAutocomplete'\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport NumberFormat from 'react-number-format';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport EQAResultReportEcliaInformation from \"./EQAResultReportEcliaInformation\";\r\nimport EQAResultReportEcliaFileAttachment from \"./EQAResultReportEcliaFileAttachment\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n    tooltip: {\r\n        backgroundColor: theme.palette.common.white,\r\n        color: 'rgba(0, 0, 0, 0.87)',\r\n        boxShadow: theme.shadows[1],\r\n        fontSize: 11,\r\n        position: \"absolute\",\r\n        top: '-10px',\r\n        left: '-25px',\r\n        width: '80px'\r\n    }\r\n}))(Tooltip);\r\n\r\nfunction MaterialButton(props) {\r\n    const { t, i18n } = props;\r\n    const item = props.item;\r\n    return (\r\n        <span>\r\n            {/* <LightTooltip title={t('Asset.reload_code')} placement=\"top\" enterDelay={300} leaveDelay={200}> */}\r\n            <IconButton onClick={() => props.onSelect(item, 1)}>\r\n                <Icon color=\"primary\">delete</Icon>\r\n            </IconButton>\r\n            {/* </LightTooltip> */}\r\n        </span>\r\n    )\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={(values) => {\r\n                props.onChange({\r\n                    target: {\r\n                        name: props.name,\r\n                        value: values.value,\r\n\r\n                    },\r\n                });\r\n            }}\r\n            name={props.name}\r\n            value={props.value}\r\n            thousandSeparator\r\n            isNumericString\r\n        />\r\n    );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n    inputRef: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div role=\"tabpanel\"\r\n                hidden={value !== index}\r\n                id={`scrollable-force-tabpanel-${index}`}\r\n                aria-labelledby={`scrollable-force-tab-${index}`}\r\n                {...other}\r\n            >\r\n                {value === index && (\r\n                    <Box p={3}>\r\n                        <Typography>{children}</Typography>\r\n                    </Box>\r\n                )\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        minHeight:\"500px\",\r\n        maxHeight: \"500px\",\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    textHeader: { fontSize: '0.75rem', }\r\n}))\r\n\r\n// const textHeader = {\r\n//   fontSize:{fontSize:'0.5rem',}\r\n\r\n\r\n// }\r\n\r\nexport default function CreateStaff(props) {\r\n    const t = props.t\r\n    const i18n = props.i18n\r\n    const classes = useStyles()\r\n    const [value, setValue] = React.useState(0)\r\n    const [item, setItem] = React.useState({})\r\n    const [v, setValueD] = React.useState('')\r\n    const handleChangeValue = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    const searchObject = { pageIndex: 1, pageSize: 1000000 }\r\n\r\n    let isEmpty = true;\r\n    if (props.item != null && props.item.files != null) {\r\n        isEmpty = props.item.files.length === 0;\r\n        if (props.item.logoPath) {\r\n            isEmpty = false\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} value={value} index={0} >\r\n\r\n            <AppBar position=\"static\" color=\"#ffffff\">\r\n                <Tabs orientation=\"horizontal\"\r\n                    value={value}\r\n                    onChange={handleChangeValue}\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"on\"\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    aria-label=\"scrollable force tabs example\"\r\n                >\r\n                    <Tab label={t('EQAResultReportEclia.information')} />\r\n                    <Tab label={t('fileAttachment')} />\r\n                    {/* <Tab label={t('human_resources_information.working_process')} /> */}\r\n                </Tabs>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0} color=\"#ffffff\">\r\n                <EQAResultReportEcliaInformation t={t}\r\n                    useStyles={useStyles}\r\n                    item={props.item ? props.item : {}}\r\n                    // isView={props.isView ? props.isView : {}}\r\n                    isRoleAdmin={props.isRoleAdmin}\r\n                    listHealthOrgRound={props.listHealthOrgRound ? props.listHealthOrgRound : []}\r\n                />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1} color=\"#ffffff\">\r\n                <EQAResultReportEcliaFileAttachment\r\n                    t={t}\r\n                    useStyles={useStyles}\r\n                    item={props.item ? props.item : {}}\r\n                    isRoleAdmin={props.isRoleAdmin} />\r\n            </TabPanel>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}