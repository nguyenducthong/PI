{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\AllocationSampleSet\\\\AllocationSampleSet.jsx\";\nimport { Grid, MuiThemeProvider, IconButton, Icon, TextField, Button, Table, TableBody, TableContainer, TableCell, TableHead, TableRow, Paper, Checkbox, TablePagination } from \"@material-ui/core\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport React, { Component } from \"react\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { deleteItem, saveItem, getItemById, searchByPage } from \"./AllocationSampleSetService\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport allocationSampleSetRoutes from \"./AllocationSampleSetRoutes\";\nimport { classifyHealthOrgByRound, allocationSampleToHealthOrg } from \"./AllocationSampleSetService\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AllocationSampleViewDetailHealthOrg from \"./AllocationSampleViewDetailHealthOrg\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\nvar listRule = [{\n  name: \"Chẵn lẻ\",\n  value: 2\n}, {\n  name: \"Chia hết cho 5\",\n  value: 5\n}, {\n  name: \"Chia hết cho 10\",\n  value: 10\n}, {\n  name: \"Chia đôi danh sách\",\n  value: 50\n}];\ntoast.configure();\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nvar AllocationSampleSet = /*#__PURE__*/function (_React$Component) {\n  _inherits(AllocationSampleSet, _React$Component);\n\n  var _super = _createSuper(AllocationSampleSet);\n\n  function AllocationSampleSet(props) {\n    var _this;\n\n    _classCallCheck(this, AllocationSampleSet);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 5,\n      page: 0,\n      data: {},\n      item: {},\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      shouldOpenViewDetailHealthOrgDialog: false,\n      listEQARound: [],\n      //selectedItems:[],\n      keyword: ''\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false,\n        shouldOpenViewDetailHealthOrgDialog: false\n      });\n    };\n\n    _this.handleViewGrouping = function () {\n      var t = _this.props.t;\n\n      if (!_this.state.roundId) {\n        _this.warning(t(\"AllocationSampleSet.errorRound\"));\n\n        return;\n      }\n\n      if (!_this.state.rule) {\n        _this.warning(t(\"AllocationSampleSet.errorRule\"));\n\n        return;\n      }\n\n      classifyHealthOrgByRound(_this.state.roundId, _this.state.rule).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          data: data,\n          listSampleSet: data.listSampleSet\n        });\n      });\n    };\n\n    _this.handleSave = function () {\n      var t = _this.props.t;\n\n      if (_this.state.data && _this.state.data.listDetail != null && _this.state.data.listDetail.length > 0) {\n        for (var index = 0; index < _this.state.data.listDetail.length; index++) {\n          var detail = _this.state.data.listDetail[index];\n\n          if (!detail.eQASampleSetDto) {\n            _this.warning(t(\"AllocationSampleSet.errorSample\") + detail.note);\n\n            return;\n          }\n        }\n\n        allocationSampleToHealthOrg(_this.state.data).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this.success(t(\"AllocationSampleSet.success\"));\n        });\n      }\n    };\n\n    _this.handleDeleteAll = function (event) {\n      //alert(this.data.length);\n      _this.handleDeleteList(_this.data).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleFilterEQARound = function (event, round, reason, details) {\n      if (round != null && round.id != null) {\n        _this.setState({\n          roundId: round.id\n        });\n      } else {}\n    };\n\n    _this.handleSampleSetChange = function (event, row, reason, details) {// console.log(row);\n      // console.log(this.state.data.listDetail);\n    };\n\n    _this.handleRule = function (event, rule, reason, details) {\n      if (rule != null) {\n        _this.setState({\n          rule: rule.value\n        });\n      } else {\n        _this.setState({\n          rule: null\n        });\n      }\n    };\n\n    _this.useStyles = makeStyles({\n      table: {\n        minWidth: 650\n      }\n    });\n\n    _this.handleViewDetailOrg = function (listHealthOrg) {\n      _this.setState({\n        listHealthOrg,\n        shouldOpenViewDetailHealthOrgDialog: true\n      });\n    };\n\n    _this.renderRow = function () {\n      var _this$props = _this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n\n      if (_this.state.data && _this.state.data.listDetail && _this.state.data.listDetail.length > 0) {\n        return _this.state.data.listDetail.map(function (de, i) {\n          return /*#__PURE__*/React.createElement(\"tr\", {\n            className: \"MuiTableRow-root\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"td\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Autocomplete, {\n            size: \"small\",\n            id: \"combo-box\" // options={listSampleSet}\n            ,\n            className: \"flex-end\",\n            getOptionLabel: function getOptionLabel(option) {\n              return option.name;\n            },\n            onChange: function onChange(event, dto, reason, details) {\n              de.eQASampleSetDto = dto;\n            },\n            value: de.eQASampleSetDto,\n            renderInput: function renderInput(params) {\n              return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n                variant: \"outlined\",\n                label: t('AllocationSampleSet.selectSampleSet'),\n                __self: _assertThisInitialized(_this),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 44\n                }\n              }));\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }\n          })), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }\n          }, de.listHealthOrg.length), /*#__PURE__*/React.createElement(\"td\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }\n          }, \"aaa\"));\n        });\n      } else {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          className: \"MuiTableRow-root\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"td\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }\n        }));\n      }\n    };\n\n    _this.success = function (content) {\n      toast.success(content);\n    };\n\n    _this.info = function (content) {\n      toast.info(content);\n    };\n\n    _this.warning = function (content) {\n      toast.warning(content);\n    };\n\n    _this.error = function (content) {\n      toast.error(content);\n    };\n\n    return _this;\n  }\n\n  _createClass(AllocationSampleSet, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000\n      };\n      searchByPageEQARound(searchObject).then(function (_ref3) {\n        var data = _ref3.data;\n\n        if (data != null && data.content.length > 0) {\n          _this2.setState({\n            listEQARound: _toConsumableArray(data.content)\n          }, function () {});\n        }\n\n        ;\n      });\n    }\n  }, {\n    key: \"handleDeleteList\",\n    value: function () {\n      var _handleDeleteList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(list) {\n        var i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < list.length)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return deleteItem(list[i].id);\n\n              case 4:\n                i++;\n                _context.next = 1;\n                break;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function handleDeleteList(_x) {\n        return _handleDeleteList.apply(this, arguments);\n      }\n\n      return handleDeleteList;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var classes = this.useStyles;\n      var _this$state = this.state,\n          rule = _this$state.rule,\n          roundId = _this$state.roundId,\n          listEQARound = _this$state.listEQARound,\n          listSampleSet = _this$state.listSampleSet,\n          data = _this$state.data;\n      var columns = [{\n        title: \"Phân nhóm\",\n        field: \"note\",\n        align: \"left\",\n        width: \"100\"\n      }, {\n        title: \"Số lượng đơn vị tham gia\",\n        field: \"numberOfHealthOrg\",\n        align: \"left\",\n        width: \"100\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Button, {\n            className: \"mb-16 mr-16 align-bottom\",\n            variant: \"contained\",\n            color: \"primary\",\n            title: t('AllocationSampleSet.ViewDetailOrg'),\n            onClick: function onClick() {\n              _this3.handleViewDetailOrg(rowData.listHealthOrg);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 28\n            }\n          }, rowData.numberOfHealthOrg);\n        }\n      }, {\n        title: \"Chọn tập mẫu\",\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Autocomplete, {\n            size: \"small\",\n            id: \"combo-box\",\n            options: listSampleSet,\n            className: \"flex-end\",\n            getOptionLabel: function getOptionLabel(option) {\n              return option.name;\n            },\n            value: rowData.eQASampleSetDto,\n            onChange: function onChange(event, dto, reason, details) {\n              // console.log(this.state.data.listDetail)\n              // let check = false\n              if (_this3.state.data.listDetail != null && _this3.state.data.listDetail.length > 0) {\n                _this3.state.data.listDetail.forEach(function (el) {// if(el.eQASampleSetDto != null && dto != null && el.eQASampleSetDto.id == dto.id){\n                  //   check = true\n                  // }\n                });\n              } // if(check){\n              //   toast.warning(t('AllocationSampleSet.warningSelectSampleSet'));\n              //   rowData.eQASampleSetDto = null;\n              // }else{\n              //   rowData.eQASampleSetDto = dto;\n              // }\n\n\n              rowData.eQASampleSetDto = dto;\n\n              _this3.setState({\n                data: data\n              });\n            },\n            renderInput: function renderInput(params) {\n              return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n                variant: \"outlined\",\n                label: t('AllocationSampleSet.selectSampleSet'),\n                __self: _this3,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 36\n                }\n              }));\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 28\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"AllocationSampleSet.title\")\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listEQARound,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.code;\n        },\n        onChange: this.handleFilterEQARound,\n        value: roundId,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            variant: \"outlined\",\n            label: t('general.fillterByRoundEQA'),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 40\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listRule,\n        className: \"flex-end\",\n        getOptionLabel: function getOptionLabel(option) {\n          return option.name;\n        },\n        onChange: this.handleRule,\n        value: rule,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            variant: \"outlined\",\n            label: t('AllocationSampleSet.rule'),\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 40\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this3.handleViewGrouping();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, t('AllocationSampleSet.groupResult')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this3.handleSave();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      }, t('Save')), this.state.shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: this.state.shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        title: t(\"confirm\"),\n        text: t('DeleteAllConfirm'),\n        Yes: t('general.Yes'),\n        No: t('general.No'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      }, this.state.shouldOpenViewDetailHealthOrgDialog && /*#__PURE__*/React.createElement(AllocationSampleViewDetailHealthOrg, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: this.state.shouldOpenViewDetailHealthOrgDialog,\n        item: this.state.listHealthOrg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: data.listDetail,\n        columns: columns,\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData) {\n            return {\n              backgroundColor: rowData.tableData.id % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 19\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return AllocationSampleSet;\n}(React.Component);\n\nexport default AllocationSampleSet;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/AllocationSampleSet/AllocationSampleSet.jsx"],"names":["Grid","MuiThemeProvider","IconButton","Icon","TextField","Button","Table","TableBody","TableContainer","TableCell","TableHead","TableRow","Paper","Checkbox","TablePagination","createMuiTheme","React","Component","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","deleteItem","saveItem","getItemById","searchByPage","searchByPageEQARound","Breadcrumb","ConfirmationDialog","Link","SearchIcon","Autocomplete","MenuItem","Select","InputLabel","FormControl","allocationSampleSetRoutes","classifyHealthOrgByRound","allocationSampleToHealthOrg","makeStyles","toast","AllocationSampleViewDetailHealthOrg","configure","autoClose","draggable","limit","listRule","name","value","MaterialButton","props","t","i18n","item","onSelect","AllocationSampleSet","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","shouldOpenViewDetailHealthOrgDialog","listEQARound","keyword","handleDialogClose","setState","handleViewGrouping","roundId","warning","rule","then","listSampleSet","handleSave","listDetail","length","index","detail","eQASampleSetDto","note","success","handleDeleteAll","event","handleDeleteList","updatePageData","handleFilterEQARound","round","reason","details","id","handleSampleSetChange","row","handleRule","useStyles","table","minWidth","handleViewDetailOrg","listHealthOrg","renderRow","map","de","i","option","dto","params","content","info","error","searchObject","pageIndex","pageSize","list","classes","columns","title","field","align","width","render","rowData","numberOfHealthOrg","forEach","el","code","selection","actionsColumnIndex","paging","search","rowStyle","backgroundColor","tableData","headerStyle","color","padding","toolbar","Toolbar","rows","body","emptyDataSourceMessage"],"mappings":"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","sourcesContent":["import {\r\n  Grid, MuiThemeProvider, IconButton, Icon, TextField, Button,\r\n  Table, TableBody, TableContainer, TableCell, TableHead, TableRow, Paper, Checkbox, TablePagination\r\n} from \"@material-ui/core\";\r\n\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { deleteItem, saveItem, getItemById, searchByPage } from \"./AllocationSampleSetService\";\r\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport allocationSampleSetRoutes from \"./AllocationSampleSetRoutes\";\r\nimport { classifyHealthOrgByRound, allocationSampleToHealthOrg } from \"./AllocationSampleSetService\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport AllocationSampleViewDetailHealthOrg from \"./AllocationSampleViewDetailHealthOrg\";\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\nconst listRule = [\r\n  { name: \"Chẵn lẻ\", value: 2 },\r\n  { name: \"Chia hết cho 5\", value: 5 },\r\n  { name: \"Chia hết cho 10\", value: 10 },\r\n  { name: \"Chia đôi danh sách\", value: 50 }\r\n]\r\ntoast.configure();\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item, 0)}>\r\n      <Icon color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    <IconButton onClick={() => props.onSelect(item, 1)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\nclass AllocationSampleSet extends React.Component {\r\n  state = {\r\n    rowsPerPage: 5,\r\n    page: 0,\r\n    data: {},\r\n    item: {},\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    shouldOpenViewDetailHealthOrgDialog: false,\r\n    listEQARound: [],\r\n    //selectedItems:[],\r\n    keyword: '',\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000 }\r\n    searchByPageEQARound(searchObject).then(({ data }) => {\r\n      if (data != null && data.content.length > 0) {\r\n        this.setState({ listEQARound: [...data.content] }, () => {\r\n        });\r\n      };\r\n    });\r\n  }\r\n\r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false,\r\n      shouldOpenViewDetailHealthOrgDialog: false,\r\n    });\r\n  };\r\n\r\n  handleViewGrouping = () => {\r\n    let { t } = this.props;\r\n    if (!this.state.roundId) {\r\n      this.warning(t(\"AllocationSampleSet.errorRound\"));\r\n      return;\r\n    }\r\n    if (!this.state.rule) {\r\n      this.warning(t(\"AllocationSampleSet.errorRule\"));\r\n      return;\r\n    }\r\n    classifyHealthOrgByRound(this.state.roundId, this.state.rule).then(({ data }) => {\r\n      this.setState({ data: data, listSampleSet: data.listSampleSet });\r\n    });\r\n\r\n  };\r\n  handleSave = () => {\r\n    let { t } = this.props;\r\n    if (this.state.data && this.state.data.listDetail != null && this.state.data.listDetail.length > 0) {\r\n      for (let index = 0; index < this.state.data.listDetail.length; index++) {\r\n        let detail = this.state.data.listDetail[index];\r\n        if (!detail.eQASampleSetDto) {\r\n          this.warning(t(\"AllocationSampleSet.errorSample\") + detail.note);\r\n          return;\r\n        }\r\n      }\r\n      allocationSampleToHealthOrg(this.state.data).then(({ data }) => {\r\n        this.success(t(\"AllocationSampleSet.success\"));\r\n      })\r\n    }\r\n  }\r\n\r\n  async handleDeleteList(list) {\r\n    for (var i = 0; i < list.length; i++) {\r\n      await deleteItem(list[i].id);\r\n    }\r\n  }\r\n  handleDeleteAll = (event) => {\r\n    //alert(this.data.length);\r\n    this.handleDeleteList(this.data).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n    }\r\n    );\r\n  };\r\n  handleFilterEQARound = (event, round, reason, details) => {\r\n    if (round != null && round.id != null) {\r\n      this.setState({ roundId: round.id });\r\n    } else {\r\n\r\n    }\r\n  }\r\n  handleSampleSetChange = (event, row, reason, details) => {\r\n    // console.log(row);\r\n    // console.log(this.state.data.listDetail);\r\n\r\n  }\r\n  handleRule = (event, rule, reason, details) => {\r\n    if (rule != null) {\r\n      this.setState({ rule: rule.value });\r\n    }\r\n    else {\r\n      this.setState({ rule: null });\r\n    }\r\n  }\r\n  useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n  handleViewDetailOrg = (listHealthOrg) => {\r\n    this.setState({ listHealthOrg, shouldOpenViewDetailHealthOrgDialog: true });\r\n  }\r\n \r\n  renderRow = () => {\r\n    const { t, i18n } = this.props;\r\n    if (this.state.data && this.state.data.listDetail && this.state.data.listDetail.length > 0) {\r\n      return (\r\n        this.state.data.listDetail.map((de, i) =>\r\n          (\r\n            <tr className='MuiTableRow-root'>\r\n              <td>\r\n                <Autocomplete\r\n                  size=\"small\"\r\n                  id=\"combo-box\"\r\n                  // options={listSampleSet}\r\n                  className=\"flex-end\"\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={(event, dto, reason, details) => {\r\n                    de.eQASampleSetDto = dto;\r\n                  }}\r\n                  value={de.eQASampleSetDto}\r\n\r\n                  renderInput={(params) => <TextField {...params}\r\n                    variant=\"outlined\"\r\n                    label={t('AllocationSampleSet.selectSampleSet')}\r\n                  />}\r\n                />\r\n              </td>\r\n              <td>{de.listHealthOrg.length}</td>\r\n              <td>aaa</td>\r\n            </tr>\r\n          ))\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <tr className='MuiTableRow-root'>\r\n          <td></td>\r\n          <td></td>\r\n          <td></td>\r\n        </tr>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  success = (content) => {\r\n    toast.success(content);\r\n  }\r\n  info = (content) => {\r\n    toast.info(content);\r\n  }\r\n  warning = (content) => {\r\n    toast.warning(content);\r\n  }\r\n  error = (content) => {\r\n    toast.error(content);\r\n  }\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    const classes = this.useStyles;\r\n    let { rule, roundId, listEQARound, listSampleSet, data} = this.state;\r\n\r\n    let columns = [\r\n      { title: \"Phân nhóm\", field: \"note\", align: \"left\", width: \"100\" },\r\n      {\r\n        title: \"Số lượng đơn vị tham gia\",field: \"numberOfHealthOrg\", align: \"left\", width: \"100\",\r\n        render: rowData => <Button\r\n          className=\"mb-16 mr-16 align-bottom\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          title={t('AllocationSampleSet.ViewDetailOrg')}\r\n          onClick={() => { this.handleViewDetailOrg(rowData.listHealthOrg) }}\r\n        >\r\n          {rowData.numberOfHealthOrg}\r\n        </Button>\r\n      },\r\n      {\r\n        title: \"Chọn tập mẫu\",\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData => <Autocomplete\r\n          size=\"small\"\r\n          id=\"combo-box\"\r\n          options={listSampleSet}\r\n          className=\"flex-end\"\r\n          getOptionLabel={(option) => option.name}\r\n          value={rowData.eQASampleSetDto}\r\n          onChange={(event, dto, reason, details) => {\r\n            // console.log(this.state.data.listDetail)\r\n            // let check = false\r\n            if(this.state.data.listDetail != null && this.state.data.listDetail.length > 0){\r\n              this.state.data.listDetail.forEach(el =>{\r\n                \r\n                // if(el.eQASampleSetDto != null && dto != null && el.eQASampleSetDto.id == dto.id){\r\n                //   check = true\r\n                  \r\n                // }\r\n              })\r\n            }\r\n            // if(check){\r\n            //   toast.warning(t('AllocationSampleSet.warningSelectSampleSet'));\r\n            //   rowData.eQASampleSetDto = null;\r\n            // }else{\r\n            //   rowData.eQASampleSetDto = dto;\r\n            // }\r\n            rowData.eQASampleSetDto = dto;\r\n            this.setState({ data: data });\r\n          }}\r\n          renderInput={(params) => <TextField {...params}\r\n            variant=\"outlined\"\r\n            label={t('AllocationSampleSet.selectSampleSet')}\r\n          />}\r\n        />\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n          <Breadcrumb routeSegments={[{ name: t(\"AllocationSampleSet.title\") }]} />\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Autocomplete\r\n              size=\"small\"\r\n              id=\"combo-box\"\r\n              options={listEQARound}\r\n              className=\"flex-end\"\r\n              getOptionLabel={(option) => option.code}\r\n              onChange={this.handleFilterEQARound}\r\n              value={roundId}\r\n              renderInput={(params) => <TextField {...params}\r\n                variant=\"outlined\"\r\n                label={t('general.fillterByRoundEQA')}\r\n              />}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Autocomplete\r\n              size=\"small\"\r\n              id=\"combo-box\"\r\n              options={listRule}\r\n              className=\"flex-end\"\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={this.handleRule}\r\n              value={rule}\r\n\r\n              renderInput={(params) => <TextField {...params}\r\n                variant=\"outlined\"\r\n                label={t('AllocationSampleSet.rule')}\r\n              />}\r\n            />\r\n          </Grid>\r\n          <Grid item lg={4} md={4} sm={12} xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleViewGrouping();\r\n              }\r\n              }\r\n            >\r\n              {t('AllocationSampleSet.groupResult')}\r\n            </Button>\r\n            <Button className=\"mb-16 mr-36 align-bottom\" variant=\"contained\" color=\"primary\"\r\n              onClick={() => this.handleSave()}>\r\n              {t('Save')}\r\n            </Button>\r\n\r\n            {this.state.shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={this.state.shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                title={t(\"confirm\")}\r\n                text={t('DeleteAllConfirm')}\r\n                Yes={t('general.Yes')}\r\n                No={t('general.No')}\r\n              />\r\n            )}\r\n\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            {this.state.shouldOpenViewDetailHealthOrgDialog && (\r\n              <AllocationSampleViewDetailHealthOrg\r\n                t={t}\r\n                i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={this.state.shouldOpenViewDetailHealthOrgDialog}\r\n                item={this.state.listHealthOrg}\r\n              />\r\n            )}\r\n            <MaterialTable\r\n              title={t('List')}\r\n              data={data.listDetail}\r\n              columns={columns}\r\n              options={{\r\n                selection: false,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: rowData => ({\r\n                  backgroundColor: (rowData.tableData.id % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n              components={{\r\n                Toolbar: props => (\r\n                  <MTableToolbar {...props} />\r\n                ),\r\n              }}\r\n              onSelectionChange={(rows) => {\r\n                this.data = rows;\r\n              }}\r\n              localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default AllocationSampleSet;"]},"metadata":{},"sourceType":"module"}