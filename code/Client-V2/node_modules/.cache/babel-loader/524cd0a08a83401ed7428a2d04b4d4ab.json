{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportSerodia\\\\EQAResultReportSerodiaPrint.jsx\";\nimport React, { Component, useRef } from \"react\";\nimport { Dialog, Button, Grid, Checkbox, IconButton, Icon, DialogActions } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { divide } from \"lodash\";\nimport moment from \"moment\";\nimport html2canvas from \"html2canvas\";\nimport { jsPDF } from \"jspdf\";\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })));\n}\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n}\n\nvar EQAResultReportSerodiaPrint = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQAResultReportSerodiaPrint, _React$Component);\n\n  var _super = _createSuper(EQAResultReportSerodiaPrint);\n\n  function EQAResultReportSerodiaPrint() {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportSerodiaPrint);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      AssetAllocation: [],\n      item: {},\n      asset: {},\n      assetVouchers: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenViewDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false\n    };\n\n    _this.handleFormSubmit = function () {\n      var content = document.getElementById(\"divcontents\");\n      var pri = document.getElementById(\"ifmcontentstoprint\").contentWindow;\n      pri.document.open();\n      pri.document.write(content.innerHTML);\n      pri.document.close();\n      pri.focus();\n      pri.print();\n    };\n\n    _this.handleExportPdf = function () {\n      var content = document.getElementById(\"divcontents\");\n      html2canvas(content).then(function (canvas) {\n        var imgData = canvas.toDataURL(\"image/png\");\n        var pdf = new jsPDF();\n        pdf.addImage(imgData, \"JPEG\", 0, 0); // pdf.output('dataurlnewwindow');\n\n        pdf.save(\"download.pdf\");\n      });\n\n      _this.props.handleOKEditClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportSerodiaPrint, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n\n      if (item && item.details && item.details.length > 0) {\n        item.details.sort(function (a, b) {\n          return a.orderNumber > b.orderNumber ? 1 : a.orderNumber === b.orderNumber ? a.sampleTube.code > b.sampleTube.code ? 1 : -1 : -1;\n        });\n      }\n\n      this.setState(_objectSpread({}, this.props.item), function () {}); // this.setState({})\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var _this$props3 = this.props,\n          open = _this$props3.open,\n          handleClose = _this$props3.handleClose,\n          handleOKEditClose = _this$props3.handleOKEditClose,\n          item = _this$props3.item;\n      var now = new Date();\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"md\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: \"move\"\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"iframe\", {\n        id: \"ifmcontentstoprint\",\n        style: {\n          height: \"0px\",\n          width: \"0px\",\n          position: \"absolute\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        id: \"divcontents\",\n        style: {\n          width: \"210mm\",\n          minHeight: \"auto\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          fontSize: \"0.975rem\",\n          fontWeight: \"bold\",\n          marginBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }, \"K\\u1EBET QU\\u1EA2 NG\\u01AFNG K\\u1EBET H\\u1EA0T - SERODIA\")), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"left\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportElisa.healthOrgName\"), \" :\", \" \", this.state.healthOrgRound ? this.state.healthOrgRound.healthOrg.code : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }\n      }, t(\"EqaResult.reagent\"), \" :\", \" \", this.state.reagent ? this.state.reagent.name : \"\", \" \", this.state.noteOtherReagent && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }\n      }, t(\"reagent.note\"), \" : \", this.state.noteOtherReagent))), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportElisa.reagentLot\"), \" :\", \" \", this.state.reagentLot ? this.state.reagentLot : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportElisa.reagentExpiryDate\"), \" :\", \" \", this.state.reagentExpiryDate ? moment(this.state.reagentExpiryDate).format(\"DD/MM/YYYY\") : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportElisa.reagentUnBoxDate\"), \" :\", \" \", this.state.reagentUnBoxDate ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 25\n        }\n      }, moment(this.state.reagentUnBoxDate).format(\"DD/MM/YYYY\")) : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportElisa.testDate\"), \" :\", \" \", this.state.testDate ? moment(this.state.testDate).format(\"DD/MM/YYYY\") : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportFastTest.technicianName\"), \" :\", \" \", this.state.technician ? this.state.technician.displayName : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      }, t(\"EQAResultReportElisa.note\"), \" :\", \" \", this.state.note ? this.state.note : \"\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 19\n        }\n      }, t(\"EQAResultReportElisa.list\") + \": \"))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        style: {\n          width: \"100%\",\n          border: \"1px solid\",\n          borderCollapse: \"collapse\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          border: \"1px solid\",\n          width: \"15%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 23\n        }\n      }, t(\"EQAResultReportEclia.sample_code\")), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          border: \"1px solid\",\n          width: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 23\n        }\n      }, t(\"EQAResultReportSerodia.checkValue\")), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          border: \"1px solid\",\n          width: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 23\n        }\n      }, t(\"EQAResultReportSerodia.testValue\")), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          border: \"1px solid\",\n          width: \"10%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 23\n        }\n      }, t(\"EQAResultReportSerodia.agglomeration\")), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          border: \"1px solid\",\n          width: \"25%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, t(\"EQAResultReportEclia.result\")), /*#__PURE__*/React.createElement(\"th\", {\n        style: {\n          border: \"1px solid\",\n          width: \"30%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }, t(\"SampleManagement.serum-bottle.note\"))), this.state.details !== null ? this.state.details.map(function (row, index) {\n        var result = \"\";\n        var checkValue = \"\",\n            testValue = \"\",\n            agglomeration = \"\";\n\n        if (row.result == 1) {\n          result = t(\"result.positive\");\n        } else if (row.result == -2) {\n          result = t(\"result.none\");\n        } else if (row.result == 0) {\n          result = t(\"result.indertermine\");\n        } else if (row.result == -1) {\n          result = t(\"result.negative\");\n        } else if (row.result == -2) {\n          result = t(\"result.none\");\n        }\n\n        if (row.checkValue == -1) {\n          checkValue = t(\"result.negative\");\n        } else if (row.checkValue == 1) {\n          checkValue = t(\"result.positive\");\n        }\n\n        if (row.testValue == -1) {\n          testValue = t(\"result.negative\");\n        } else if (row.testValue == 0) {\n          testValue = t(\"result.indertermine\");\n        } else if (row.testValue == 1) {\n          testValue = t(\"result.positive\");\n        }\n\n        if (row.agglomeration == 1) {\n          agglomeration = \"-\";\n        } else if (row.agglomeration == 2) {\n          agglomeration = \" + / -\";\n        } else if (row.agglomeration == 3) {\n          agglomeration = \" + \";\n        } else if (row.agglomeration == 4) {\n          agglomeration = \" ++ \";\n        }\n\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            border: \"1px solid\",\n            textAlign: \"center\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 31\n          }\n        }, row.sampleTube !== null ? row.sampleTube.code : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            border: \"1px solid\",\n            textAlign: \"center\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 31\n          }\n        }, checkValue !== null ? checkValue : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            border: \"1px solid\",\n            textAlign: \"center\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 31\n          }\n        }, testValue !== null ? testValue : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            border: \"1px solid\",\n            textAlign: \"center\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 31\n          }\n        }, agglomeration !== null ? agglomeration : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            border: \"1px solid\",\n            textAlign: \"center\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 31\n          }\n        }, result !== null ? result : \"\"), /*#__PURE__*/React.createElement(\"td\", {\n          style: {\n            border: \"1px solid\",\n            textAlign: \"center\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 31\n          }\n        }, row.note !== null ? row.note : \"\"));\n      }) : \"\")))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"mr-12\",\n        onClick: function onClick() {\n          return _this2.props.handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      }, t(\"general.cancel\")), this.props.print && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }, t(\"In\")), this.props.pdf && /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.handleExportPdf,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }\n      }, t(\"Xuất PDF\"))))));\n    }\n  }]);\n\n  return EQAResultReportSerodiaPrint;\n}(React.Component);\n\nexport default EQAResultReportSerodiaPrint;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportSerodia/EQAResultReportSerodiaPrint.jsx"],"names":["React","Component","useRef","Dialog","Button","Grid","Checkbox","IconButton","Icon","DialogActions","ValidatorForm","TextValidator","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","DialogTitle","DialogContent","useTranslation","withTranslation","Trans","Draggable","Paper","divide","moment","html2canvas","jsPDF","PaperComponent","props","MaterialButton","t","i18n","EQAResultReportSerodiaPrint","state","AssetAllocation","item","asset","assetVouchers","shouldOpenEditorDialog","shouldOpenViewDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","handleFormSubmit","content","document","getElementById","pri","contentWindow","open","write","innerHTML","close","focus","print","handleExportPdf","then","canvas","imgData","toDataURL","pdf","addImage","save","handleOKEditClose","handleClose","details","length","sort","a","b","orderNumber","sampleTube","code","setState","now","Date","cursor","height","width","position","minHeight","marginLeft","marginRight","textAlign","fontSize","fontWeight","marginBottom","healthOrgRound","healthOrg","reagent","name","noteOtherReagent","reagentLot","reagentExpiryDate","format","reagentUnBoxDate","testDate","technician","displayName","note","border","borderCollapse","map","row","index","result","checkValue","testValue","agglomeration"],"mappings":"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","sourcesContent":["import React, { Component, useRef } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  IconButton,\r\n  Icon,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader,\r\n} from \"material-table\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { divide } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { jsPDF } from \"jspdf\";\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n}\r\n\r\nclass EQAResultReportSerodiaPrint extends React.Component {\r\n  state = {\r\n    AssetAllocation: [],\r\n    item: {},\r\n    asset: {},\r\n    assetVouchers: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenViewDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n  };\r\n\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    if (item && item.details && item.details.length > 0) {\r\n      item.details.sort((a, b) =>\r\n        a.orderNumber > b.orderNumber\r\n          ? 1\r\n          : a.orderNumber === b.orderNumber\r\n          ? a.sampleTube.code > b.sampleTube.code\r\n            ? 1\r\n            : -1\r\n          : -1\r\n      );\r\n    }\r\n    this.setState(\r\n      {\r\n        ...this.props.item,\r\n      },\r\n      function () {\r\n      }\r\n    );\r\n\r\n    // this.setState({})\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleFormSubmit = () => {\r\n    let content = document.getElementById(\"divcontents\");\r\n    let pri = document.getElementById(\"ifmcontentstoprint\").contentWindow;\r\n    pri.document.open();\r\n\r\n    pri.document.write(content.innerHTML);\r\n\r\n    pri.document.close();\r\n    pri.focus();\r\n    pri.print();\r\n  };\r\n  handleExportPdf = () => {\r\n    let content = document.getElementById(\"divcontents\");\r\n    html2canvas(content).then((canvas) => {\r\n      const imgData = canvas.toDataURL(\"image/png\");\r\n      const pdf = new jsPDF();\r\n      pdf.addImage(imgData, \"JPEG\", 0, 0);\r\n      // pdf.output('dataurlnewwindow');\r\n      pdf.save(\"download.pdf\");\r\n    });\r\n    this.props.handleOKEditClose();\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let { open, handleClose, handleOKEditClose, item } = this.props;\r\n    let now = new Date();\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        PaperComponent={PaperComponent}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle\r\n          style={{ cursor: \"move\" }}\r\n          id=\"draggable-dialog-title\"\r\n        ></DialogTitle>\r\n        <iframe\r\n          id=\"ifmcontentstoprint\"\r\n          style={{ height: \"0px\", width: \"0px\", position: \"absolute\" }}\r\n        ></iframe>\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n          <DialogContent\r\n            id=\"divcontents\"\r\n            style={{\r\n              width: \"210mm\",\r\n              minHeight: \"auto\",\r\n              marginLeft: \"auto\",\r\n              marginRight: \"auto\",\r\n            }}\r\n          >\r\n            <div style={{ textAlign: \"center\" }}>\r\n              <div>\r\n                <p\r\n                  style={{\r\n                    fontSize: \"0.975rem\",\r\n                    fontWeight: \"bold\",\r\n                    marginBottom: \"0px\",\r\n                  }}\r\n                >\r\n                  KẾT QUẢ NGƯNG KẾT HẠT - SERODIA\r\n                </p>\r\n              </div>\r\n              <div style={{ textAlign: \"left\" }}>\r\n                <ol>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportElisa.healthOrgName\")} :{\" \"}\r\n                      {this.state.healthOrgRound\r\n                        ? this.state.healthOrgRound.healthOrg.code\r\n                        : \"\"}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EqaResult.reagent\")} :{\" \"}\r\n                      {this.state.reagent ? this.state.reagent.name : \"\"}{\" \"}\r\n                      {this.state.noteOtherReagent && (\r\n                        <p>\r\n                          {t(\"reagent.note\")} : {this.state.noteOtherReagent}\r\n                        </p>\r\n                      )}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportElisa.reagentLot\")} :{\" \"}\r\n                      {this.state.reagentLot ? this.state.reagentLot : \"\"}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportElisa.reagentExpiryDate\")} :{\" \"}\r\n                      {this.state.reagentExpiryDate\r\n                        ? moment(this.state.reagentExpiryDate).format(\r\n                            \"DD/MM/YYYY\"\r\n                          )\r\n                        : \"\"}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportElisa.reagentUnBoxDate\")} :{\" \"}\r\n                      {this.state.reagentUnBoxDate ? (\r\n                        <span>\r\n                          {moment(this.state.reagentUnBoxDate).format(\r\n                            \"DD/MM/YYYY\"\r\n                          )}\r\n                        </span>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportElisa.testDate\")} :{\" \"}\r\n                      {this.state.testDate\r\n                        ? moment(this.state.testDate).format(\"DD/MM/YYYY\")\r\n                        : \"\"}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportFastTest.technicianName\")} :{\" \"}\r\n                      {this.state.technician\r\n                        ? this.state.technician.displayName\r\n                        : \"\"}\r\n                    </p>\r\n                  </li>\r\n                  <li>\r\n                    <p>\r\n                      {t(\"EQAResultReportElisa.note\")} :{\" \"}\r\n                      {this.state.note ? this.state.note : \"\"}\r\n                    </p>\r\n                  </li>\r\n                  <li>{t(\"EQAResultReportElisa.list\") + \": \"}</li>\r\n                </ol>\r\n              </div>\r\n              <div>\r\n                {\r\n                  <table\r\n                    style={{\r\n                      width: \"100%\",\r\n                      border: \"1px solid\",\r\n                      borderCollapse: \"collapse\",\r\n                    }}\r\n                  >\r\n                    <tr>\r\n                      <th style={{ border: \"1px solid\", width: \"15%\" }}>\r\n                        {t(\"EQAResultReportEclia.sample_code\")}\r\n                      </th>\r\n                      <th style={{ border: \"1px solid\", width: \"10%\" }}>\r\n                        {t(\"EQAResultReportSerodia.checkValue\")}\r\n                      </th>\r\n                      <th style={{ border: \"1px solid\", width: \"10%\" }}>\r\n                        {t(\"EQAResultReportSerodia.testValue\")}\r\n                      </th>\r\n                      <th style={{ border: \"1px solid\", width: \"10%\" }}>\r\n                        {t(\"EQAResultReportSerodia.agglomeration\")}\r\n                      </th>\r\n                      <th style={{ border: \"1px solid\", width: \"25%\" }}>\r\n                        {t(\"EQAResultReportEclia.result\")}\r\n                      </th>\r\n                      <th style={{ border: \"1px solid\", width: \"30%\" }}>\r\n                        {t(\"SampleManagement.serum-bottle.note\")}\r\n                      </th>\r\n                    </tr>\r\n\r\n                    {this.state.details !== null\r\n                      ? this.state.details.map((row, index) => {\r\n                          let result = \"\";\r\n                          let checkValue = \"\", testValue=\"\", agglomeration=\"\";\r\n                          if (row.result == 1) {\r\n                            result = t(\"result.positive\");\r\n                          } else if (row.result == -2) {\r\n                            result = t(\"result.none\");\r\n                          } else if (row.result == 0) {\r\n                            result = t(\"result.indertermine\");\r\n                          } else if (row.result == -1) {\r\n                            result = t(\"result.negative\");\r\n                          } else if (row.result == -2) {\r\n                            result = t(\"result.none\");\r\n                          }\r\n                          if(row.checkValue == -1){\r\n                            checkValue = t(\"result.negative\");\r\n                          }else if(row.checkValue == 1){\r\n                            checkValue = t(\"result.positive\");\r\n                          }\r\n\r\n                          if(row.testValue == -1){\r\n                            testValue = t(\"result.negative\");\r\n                          }else if (row.testValue == 0) {\r\n                            testValue = t(\"result.indertermine\");\r\n                          }else if(row.testValue == 1){\r\n                            testValue = t(\"result.positive\");\r\n                          }\r\n                          if(row.agglomeration == 1){\r\n                            agglomeration = \"-\";\r\n                          }else if (row.agglomeration == 2) {\r\n                            agglomeration = \" + / -\";\r\n                          }else if(row.agglomeration == 3){\r\n                            agglomeration = \" + \";\r\n                          }else if(row.agglomeration == 4){\r\n                            agglomeration = \" ++ \";\r\n                          }\r\n\r\n                          return (\r\n                            <tr>\r\n                              <td\r\n                                style={{\r\n                                  border: \"1px solid\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                {row.sampleTube !== null\r\n                                  ? row.sampleTube.code\r\n                                  : \"\"}\r\n                              </td>\r\n                              <td\r\n                                style={{\r\n                                  border: \"1px solid\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                {checkValue !== null ? checkValue : \"\"}\r\n                              </td>\r\n                              <td\r\n                                style={{\r\n                                  border: \"1px solid\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                {testValue !== null ? testValue : \"\"}\r\n                              </td>\r\n                              <td\r\n                                style={{\r\n                                  border: \"1px solid\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                {agglomeration !== null\r\n                                  ? agglomeration\r\n                                  : \"\"}\r\n                              </td>\r\n                              <td\r\n                                style={{\r\n                                  border: \"1px solid\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                {result !== null ? result : \"\"}\r\n                              </td>\r\n                              <td\r\n                                style={{\r\n                                  border: \"1px solid\",\r\n                                  textAlign: \"center\",\r\n                                }}\r\n                              >\r\n                                {row.note !== null ? row.note : \"\"}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                      : \"\"}\r\n                  </table>\r\n                }\r\n              </div>\r\n            </div>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n            <div className=\"flex flex-space-between flex-middle\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className=\"mr-12\"\r\n                onClick={() => this.props.handleClose()}\r\n              >\r\n                {t(\"general.cancel\")}\r\n              </Button>\r\n              {this.props.print && (\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                  {t(\"In\")}\r\n                </Button>\r\n              )}\r\n              {this.props.pdf && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.handleExportPdf}\r\n                >\r\n                  {t(\"Xuất PDF\")}\r\n                </Button>\r\n              )}\r\n              {/* <Example></Example> */}\r\n            </div>\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAResultReportSerodiaPrint;\r\n"]},"metadata":{},"sourceType":"module"}