{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\TestMethod\\\\TestMethodEditorDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, TablePagination, Radio, FormControlLabel, Switch, Icon, IconButton } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\nimport { getByPage, deleteItem, saveItem, getItemById, checkCode } from \"./TestMethodService\";\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Draggable from 'react-draggable';\nimport Paper from '@material-ui/core/Paper';\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { el } from \"date-fns/locale\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  })));\n}\n\nvar TestMethodEditorDialog = /*#__PURE__*/function (_Component) {\n  _inherits(TestMethodEditorDialog, _Component);\n\n  var _super = _createSuper(TestMethodEditorDialog);\n\n  function TestMethodEditorDialog() {\n    var _this;\n\n    _classCallCheck(this, TestMethodEditorDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      name: \"\",\n      code: \"\",\n      description: \"\",\n      details: [],\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenSearchEQASampleSearchDialog: false\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var code = _this.state.code;\n      var t = _this.props.t;\n      checkCode(id, code).then(function (result) {\n        //Nếu trả về true là code đã được sử dụng\n        if (result.data) {\n          toast.warning(t('mess_code'));\n        } else {\n          //Nếu trả về false là code chưa sử dụng có thể dùng\n          if (id) {\n            saveItem(_objectSpread({}, _this.state)).then(function () {\n              _this.props.handleOKEditClose();\n\n              toast.success(t('mess_edit'));\n            });\n          } else {\n            saveItem(_objectSpread({}, _this.state)).then(function () {\n              _this.props.handleOKEditClose();\n\n              toast.success(t('mess_add'));\n            });\n          }\n        }\n      });\n    };\n\n    _this.handleSearchDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchDialog: false\n      });\n    };\n\n    _this.handleSearchEQARoundDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchEQARoundSearchDialog: false\n      });\n    };\n\n    _this.handleSelectEQARound = function (item) {\n      _this.setState({\n        eqaRound: item\n      });\n\n      _this.handleSearchEQARoundDialogClose();\n    };\n\n    _this.handleSearchEQASampleDialogClose = function () {\n      _this.setState({\n        shouldOpenSearchEQASampleSearchDialog: false\n      });\n    };\n\n    _this.handleSelectEQASample = function (item) {\n      var notInList = true;\n      var details = _this.state.details;\n\n      if (details == null || details.length == 0) {\n        details = [];\n        var eQASampleSetDetail = {};\n        eQASampleSetDetail.orderNumber = 1; //nếu là lần đầu thì mặc định orderNumber = 1\n\n        eQASampleSetDetail.sample = item;\n        details.push(eQASampleSetDetail);\n      } else {\n        details.forEach(function (eQASampleSetDetail) {\n          if (eQASampleSetDetail.sample != null && item.id != null && eQASampleSetDetail.sample.id == item.id) {\n            notInList = false;\n          }\n        });\n\n        if (notInList) {\n          var _eQASampleSetDetail = {};\n          _eQASampleSetDetail.orderNumber = details.length + 1; //nếu không là lần đầu thì mặc định = số lượng danh sách + 1 \n\n          _eQASampleSetDetail.sample = item;\n          details.push(_eQASampleSetDetail);\n        }\n      }\n\n      _this.setState({\n        details\n      }, function () {\n        this.handleSearchEQASampleDialogClose();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TestMethodEditorDialog, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState(_objectSpread({}, this.props.item));\n    }\n  }, {\n    key: \"deleteTestMethodDetail\",\n    value: function deleteTestMethodDetail(eQASampleSetDetail) {\n      var index = null;\n      var details = this.state.details;\n\n      if (details != null && details.length > 0) {\n        details.forEach(function (element) {\n          if (element != null && element.sample != null && eQASampleSetDetail.sample != null && element.sample.id == eQASampleSetDetail.sample.id) {\n            if (index == null) {\n              index = 0;\n            } else {\n              index++;\n            }\n          }\n        });\n        details.splice(index, 1);\n        this.setState({\n          details\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var _this$state = this.state,\n          id = _this$state.id,\n          name = _this$state.name,\n          code = _this$state.code,\n          description = _this$state.description,\n          eqaSample = _this$state.eqaSample,\n          details = _this$state.details,\n          shouldOpenSearchEQASampleSearchDialog = _this$state.shouldOpenSearchEQASampleSearchDialog;\n      var columns = [{\n        title: t(\"STT\"),\n        field: \"orderNumber\",\n        width: \"150\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            className: \"w-50 mb-16\" //label={t(\"Code\")}\n            ,\n            onChange: _this2.handleChange,\n            type: \"text\",\n            name: \"orderNumber\",\n            value: rowData.orderNumber,\n            validators: [\"required\"],\n            errorMessages: [t(\"general.errorMessages_required\")],\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t(\"EQASerumBankTable.title\"),\n        field: \"sample.eqaSerumBank.serumCode\",\n        width: \"150\"\n      }, {\n        title: t(\"TestMethod.sample_code\"),\n        field: \"sample.code\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"TestMethod.sample_name\"),\n        field: \"sample.name\",\n        align: \"left\",\n        width: \"150\"\n      }, {\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Button, {\n            className: \"mb-16 mr-16\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: function onClick() {\n              return _this2.deleteTestMethodDetail(rowData);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }\n          }, t('Delete'));\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: 'md',\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      }, \" \", (id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"TestMethod.title\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 112\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Code\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"code\",\n        value: code,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Name\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: name,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100 mb-16\",\n        label: t(\"Description\"),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"description\",\n        value: description,\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex flex-space-between flex-middle mt-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, t('Save')), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        type: \"button\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 15\n        }\n      }, \" \", t('Cancel'))))));\n    }\n  }]);\n\n  return TestMethodEditorDialog;\n}(Component);\n\nexport default TestMethodEditorDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/TestMethod/TestMethodEditorDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","TablePagination","Radio","FormControlLabel","Switch","Icon","IconButton","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","ValidatorForm","TextValidator","TextField","getByPage","deleteItem","saveItem","getItemById","checkCode","DialogContent","DialogTitle","Draggable","Paper","MuiPickersUtilsProvider","DateTimePicker","DateFnsUtils","el","toast","configure","autoClose","draggable","limit","PaperComponent","props","TestMethodEditorDialog","state","name","code","description","details","shouldOpenSearchDialog","shouldOpenConfirmationDialog","shouldOpenSearchEQASampleSearchDialog","handleChange","event","source","persist","setState","isActive","target","checked","value","handleFormSubmit","id","t","then","result","data","warning","handleOKEditClose","success","handleSearchDialogClose","handleSearchEQARoundDialogClose","shouldOpenSearchEQARoundSearchDialog","handleSelectEQARound","item","eqaRound","handleSearchEQASampleDialogClose","handleSelectEQASample","notInList","length","eQASampleSetDetail","orderNumber","sample","push","forEach","open","handleClose","index","element","splice","i18n","eqaSample","columns","title","field","width","render","rowData","align","deleteTestMethodDetail","cursor","position","right","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  TablePagination,\r\n  Radio,\r\n  FormControlLabel,\r\n  Switch, Icon, IconButton\r\n} from \"@material-ui/core\";\r\n\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\r\nimport { getByPage, deleteItem, saveItem, getItemById, checkCode } from \"./TestMethodService\";\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { MuiPickersUtilsProvider, DateTimePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { el } from \"date-fns/locale\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\nfunction PaperComponent(props) {\r\n  return (\r\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n}\r\nclass TestMethodEditorDialog extends Component {\r\n  state = {\r\n    name: \"\",\r\n    code: \"\",\r\n    description: \"\",\r\n    details: [],\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenSearchEQASampleSearchDialog: false,\r\n  };\r\n\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n\r\n  handleFormSubmit = () => {\r\n    let { id } = this.state;\r\n    let { code } = this.state;\r\n    let { t } = this.props;\r\n    checkCode(id, code).then((result) => {\r\n      //Nếu trả về true là code đã được sử dụng\r\n      if (result.data) {\r\n       \r\n        toast.warning(t('mess_code'));\r\n      } else {\r\n        //Nếu trả về false là code chưa sử dụng có thể dùng\r\n        if(id){\r\n          saveItem({\r\n            ...this.state\r\n          }).then(() => {\r\n            this.props.handleOKEditClose();\r\n            toast.success(t('mess_edit'));\r\n          });\r\n        }else{\r\n          saveItem({\r\n            ...this.state\r\n          }).then(() => {\r\n            this.props.handleOKEditClose();\r\n            toast.success(t('mess_add'));\r\n          });\r\n        }\r\n       \r\n      }\r\n    });\r\n  };\r\n\r\n  componentWillMount() {\r\n    let { open, handleClose, item } = this.props;\r\n    this.setState({\r\n      ...this.props.item\r\n    });\r\n  }\r\n\r\n  handleSearchDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchDialog: false\r\n    });\r\n  };\r\n  handleSearchEQARoundDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchEQARoundSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectEQARound = (item) => {\r\n    this.setState({ eqaRound: item });\r\n    this.handleSearchEQARoundDialogClose();\r\n  }\r\n  handleSearchEQASampleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenSearchEQASampleSearchDialog: false\r\n    });\r\n  };\r\n  handleSelectEQASample = (item) => {\r\n    let notInList = true;\r\n    let { details } = this.state;\r\n    if (details == null || details.length == 0) {\r\n      details = [];\r\n      let eQASampleSetDetail = {};\r\n      eQASampleSetDetail.orderNumber = 1; //nếu là lần đầu thì mặc định orderNumber = 1\r\n      eQASampleSetDetail.sample = item;\r\n      details.push(eQASampleSetDetail);\r\n    }\r\n    else {\r\n      details.forEach(eQASampleSetDetail => {\r\n        if (eQASampleSetDetail.sample != null && item.id != null && eQASampleSetDetail.sample.id == item.id) {\r\n          notInList = false;\r\n        }\r\n      });\r\n\r\n      if (notInList) {\r\n        let eQASampleSetDetail = {};\r\n        eQASampleSetDetail.orderNumber = details.length + 1; //nếu không là lần đầu thì mặc định = số lượng danh sách + 1 \r\n        eQASampleSetDetail.sample = item;\r\n        details.push(eQASampleSetDetail);\r\n      }\r\n    }\r\n\r\n    this.setState({ details }, function () {\r\n      this.handleSearchEQASampleDialogClose();\r\n    });\r\n  }\r\n\r\n  deleteTestMethodDetail(eQASampleSetDetail) {\r\n    let index = null;\r\n    let { details } = this.state;\r\n    if (details != null && details.length > 0) {\r\n      details.forEach(element => {\r\n        if (element != null && element.sample != null && eQASampleSetDetail.sample != null && element.sample.id == eQASampleSetDetail.sample.id) {\r\n          if (index == null) {\r\n            index = 0;\r\n          }\r\n          else {\r\n            index++;\r\n          }\r\n        }\r\n      });\r\n\r\n      details.splice(index, 1);\r\n      this.setState({ details });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { open, handleClose, handleOKEditClose, t, i18n } = this.props;\r\n    let {\r\n      id,\r\n      name,\r\n      code,\r\n      description,\r\n      eqaSample,\r\n      details,\r\n      shouldOpenSearchEQASampleSearchDialog\r\n    } = this.state;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"STT\"), field: \"orderNumber\", width: \"150\",\r\n        render: rowData =>\r\n          <TextValidator\r\n            className=\"w-50 mb-16\"\r\n            //label={t(\"Code\")}\r\n            onChange={this.handleChange}\r\n            type=\"text\"\r\n            name=\"orderNumber\"\r\n            value={rowData.orderNumber}\r\n            validators={[\"required\"]}\r\n            errorMessages={[t(\"general.errorMessages_required\")]}\r\n          />\r\n      },\r\n      { title: t(\"EQASerumBankTable.title\"), field: \"sample.eqaSerumBank.serumCode\", width: \"150\" },\r\n      { title: t(\"TestMethod.sample_code\"), field: \"sample.code\", align: \"left\", width: \"150\" },\r\n      { title: t(\"TestMethod.sample_name\"), field: \"sample.name\", align: \"left\", width: \"150\" },\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        render: rowData =>\r\n          <Button className=\"mb-16 mr-16\" variant=\"contained\" color=\"primary\" onClick={() => this.deleteTestMethodDetail(rowData)}>{t('Delete')}</Button>\r\n      },\r\n\r\n    ];\r\n    return (\r\n      <Dialog  open={open} PaperComponent={PaperComponent} maxWidth={'md'} fullWidth={true} >\r\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n        <span className=\"mb-20\"> {(id ? t(\"update\") : t(\"Add\")) + \" \" + t(\"TestMethod.title\")} </span>\r\n        <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\r\n            <Grid className=\"mb-16\" container spacing={2}>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Code\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"code\"\r\n                  value={code}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Name\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n              <Grid item sm={6} xs={12}>\r\n                <TextValidator\r\n                  className=\"w-100 mb-16\"\r\n                  label={t(\"Description\")}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={description}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Grid item xs={12}>\r\n              <Button\r\n                className=\"\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => this.setState({ shouldOpenSearchEQASampleSearchDialog: true, item: {} })}\r\n              >\r\n                {t('TestMethod.add_sample')}\r\n              </Button>\r\n            </Grid> */}\r\n            {/* <Grid item xs={12}>\r\n              <MaterialTable title={t(\"SampleManagement.sample-list.title\")} data={details} columns={columns}\r\n                options={{\r\n                  selection: false,\r\n                  actionsColumnIndex: -1,\r\n                  paging: false,\r\n                  search: false\r\n                }}\r\n                components={{\r\n                  Toolbar: props => (\r\n                    <div style={{ witdth: \"100%\" }}>\r\n                      <MTableToolbar {...props} />\r\n                    </div>\r\n                  ),\r\n                }}\r\n                onSelectionChange={(rows) => {\r\n                  this.data = rows;\r\n                }}\r\n              />\r\n              {shouldOpenSearchEQASampleSearchDialog && (\r\n                <EQASampleSearchDialog\r\n                  open={this.state.shouldOpenSearchEQASampleSearchDialog}\r\n                  handleSelect={this.handleSelectEQASample}\r\n                  selectedItem={eqaSample != null ? eqaSample : {}}\r\n                  handleClose={this.handleSearchEQASampleDialogClose} t={t} i18n={i18n} />\r\n              )\r\n              }\r\n            </Grid> */}\r\n            <div className=\"flex flex-space-between flex-middle mt-16\">\r\n              <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                {t('Save')}\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"secondary\" type=\"button\" onClick={() => handleClose()}> {t('Cancel')}</Button>\r\n            </div>\r\n          </ValidatorForm>\r\n        </DialogContent>\r\n      </Dialog >\r\n    );\r\n  }\r\n}\r\n\r\nexport default TestMethodEditorDialog;\r\n"]},"metadata":{},"sourceType":"module"}