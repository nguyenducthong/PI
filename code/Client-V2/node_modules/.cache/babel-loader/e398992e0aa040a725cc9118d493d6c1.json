{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAResultReportElisa\\\\EQAResultReportElisaViewDialog.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, TextField, Icon, IconButton, FormControl, DialogTitle, DialogContent, DialogActions, Paper, InputAdornment, MenuItem, Checkbox, Select, FormControlLabel } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { technicianSearchByPage, saveItem, getEQASampleTubeByHealthOrgEQARoundId, checkReagentByHealthOrgRound } from \"./EQAResultReportElisaService\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport ConstantList from \"../../appConfig\";\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\nimport Draggable from 'react-draggable';\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport LocalConstants from \"./Constants\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_style.scss';\nimport { getCurrentUser, getListHealthOrgByUser } from \"../User/UserService\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n}); // function PaperComponent(props) {\n//   return (\n//     <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n//       <Paper {...props} />\n//     </Draggable>\n//   );\n// }\n\nfunction MaterialButton(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nfunction TableODColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    type: \"number\",\n    value: item.oDvalue,\n    name: \"itemODvalue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction TableCOColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    value: item.cutOff,\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    type: \"number\",\n    name: \"itemcutOff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction TableODDeviceCOColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    disabled: props.isView,\n    className: \"w-80\",\n    value: item.ratioOdAndCutOff,\n    type: \"number\",\n    name: \"itemRatioOdAndCutOff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }));\n}\n\nfunction TableResultColumn(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    disabled: props.isView,\n    value: item.result,\n    onChange: function onChange(event) {\n      return props.onChange(event, item);\n    },\n    inputProps: {\n      name: \"result\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.negative,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.negative\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.indertermine\")), /*#__PURE__*/React.createElement(MenuItem, {\n    value: LocalConstants.EQAResultReportDetail_TestValue.positive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, t(\"EQAResultReportElisa.Result.positive\")))));\n}\n\nfunction TableNoteColumn(props) {\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 10\n    }\n  });\n}\n\nvar EQAResultReportElisaViewDialog = /*#__PURE__*/function (_Component) {\n  _inherits(EQAResultReportElisaViewDialog, _Component);\n\n  var _super = _createSuper(EQAResultReportElisaViewDialog);\n\n  function EQAResultReportElisaViewDialog(props) {\n    var _this;\n\n    _classCallCheck(this, EQAResultReportElisaViewDialog);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 1000,\n      page: 0,\n      // isView: false,\n      typeMethod: 1,\n      healthOrg: [],\n      listHealthOrgRound: [],\n      reagent: null,\n      technician: null,\n      details: [],\n      healthOrg: null,\n      reagentExpiryDate: null,\n      testDate: new Date(),\n      reagentUnBoxDate: null,\n      dateSubmitResults: null,\n      roundLists: [],\n      eqaRoundRegister: [],\n      roundId: \"\",\n      listReagent: [],\n      reagentId: '',\n      healthOrgRound: null,\n      round: null,\n      orderTest: '',\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenHealthOrgRoundPopup: false,\n      // isCheck:false,\n      isViewButton: false,\n      isFinalResult: false,\n      isRoleAdmin: false,\n      typeMethod: 1,\n      isView: true\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenConfirmationDialog: false\n      });\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"switch\") {\n        _this.setState({\n          isActive: event.target.checked\n        });\n\n        return;\n      }\n\n      if (source === \"isFinalResult\") {\n        _this.setState({\n          isFinalResult: event.target.checked\n        });\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleRowDataCellChange = function (rowData, event) {\n      var details = _this.state.details;\n      var t = _this.props.t;\n\n      if (details != null && details.length > 0) {\n        details.forEach(function (element) {\n          if (element.tableData != null && rowData != null && rowData.tableData != null && element.tableData.id == rowData.tableData.id) {\n            if (event.target.name == \"oDvalue\") {\n              if (element.oDvalue == '') {\n                element.cutOff = '';\n                element.ratioOdAndCutOff = '';\n                element.result = '';\n              }\n\n              element.oDvalue = parseFloat(event.target.value);\n\n              if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\n                element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\n              }\n            } else if (event.target.name == \"cutOff\") {\n              if (element.oDvalue == \"\" || element.oDvalue == null) {\n                toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\n                return;\n              }\n\n              element.cutOff = parseFloat(event.target.value);\n\n              if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\n                element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\n              }\n            } else if (event.target.name == \"result\") {\n              if (event.target.value !== LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented && (element.oDvalue === '' || element.oDvalue === null)) {\n                toast.warning(t(\"EQAResultReportElisa.notODvalue\"));\n                element.result = null;\n                return;\n              }\n\n              if (event.target.value === LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented) {\n                element.oDvalue = '';\n                element.cutOff = '';\n                element.ratioOdAndCutOff = '';\n              }\n\n              element.result = event.target.value;\n            }\n          }\n        }); //forEach\n\n        _this.setState({\n          details: details\n        });\n      }\n    };\n\n    _this.handleDateChange = function (date, name) {\n      _this.setState({\n        [name]: date\n      });\n    };\n\n    _this.selectReagent = function (reagent) {\n      if (reagent != null && reagent.id != null) {\n        _this.setState({\n          reagent: reagent\n        }, function () {});\n      }\n    };\n\n    _this.handleHealthOrgRoundPopupClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgRoundPopup: false\n      }, function () {});\n    };\n\n    _this.handleSelectHealthOrgRound = function (healthOrgRound) {\n      if (healthOrgRound && healthOrgRound.id) {\n        _this.setState({\n          healthOrgRound: healthOrgRound\n        }, function () {\n          var _this2 = this;\n\n          var _this$state = this.state,\n              healthOrgRound = _this$state.healthOrgRound,\n              details = _this$state.details;\n          details = [];\n          getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then(function (result) {\n            var listEQASampleTube = result.data;\n\n            if (listEQASampleTube != null && listEQASampleTube.length > 0) {\n              listEQASampleTube.forEach(function (tube) {\n                var eQAResultReportDetail = {};\n                eQAResultReportDetail.sampleTube = tube;\n\n                if (tube.eqaSampleSetDetail && tube.eqaSampleSetDetail.orderNumber) {\n                  eQAResultReportDetail.orderNumber = tube.eqaSampleSetDetail.orderNumber;\n                }\n\n                eQAResultReportDetail.cutOff = '';\n                eQAResultReportDetail.oDvalue = '';\n                eQAResultReportDetail.ratioOdAndCutOff = '';\n                eQAResultReportDetail.result = '';\n                details.push(eQAResultReportDetail);\n              });\n            }\n\n            _this2.setState({\n              details\n            });\n          });\n        });\n      }\n\n      _this.handleHealthOrgRoundPopupClose();\n    };\n\n    _this.notificationFinalResult = function () {\n      if (!_this.state.isFinalResult || _this.state.isFinalResult == null) {\n        _this.setState({\n          shouldOpenConfirmationDialog: true\n        });\n      }\n\n      _this.setState({\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleFinalResult = function () {\n      if (_this.state.isFinalResult == null || !_this.state.isFinalResult) {\n        _this.setState({\n          isFinalResult: true,\n          dateSubmitResults: new Date()\n        }, function () {});\n\n        _this.handleDialogClose();\n      }\n\n      if (_this.state.isFinalResult) {\n        _this.setState({\n          isFinalResult: false,\n          dateSubmitResults: new Date()\n        }, function () {});\n\n        _this.handleDialogClose();\n      }\n    };\n\n    _this.handleDialogFinalResultClose = function () {\n      // this.setState({isFinalResult:false, dateSubmitResults: null},()=>{\n      // })\n      _this.handleDialogClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAResultReportElisaViewDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView;\n\n      if (item != null && item.reagent != null && item.reagent.name != null) {\n        if (item.reagent.name === \"Sinh phẩm khác\") {\n          item[\"otherReagent\"] = true;\n        } else {\n          item[\"otherReagent\"] = false;\n        }\n      }\n\n      if (item && item.details && item.details.length > 0) {\n        item.details.sort(function (a, b) {\n          return a.orderNumber > b.orderNumber ? 1 : a.orderNumber === b.orderNumber ? a.sampleTube.code > b.sampleTube.code ? 1 : -1 : -1;\n        });\n      }\n\n      if (item.listHealthOrgRound != null) {\n        this.setState({\n          listHealthOrgRound: item.listHealthOrgRound,\n          healthOrgRound: item.listHealthOrgRound[0]\n        }, function () {\n          _this3.handleSelectHealthOrgRound(_this3.state.healthOrgRound);\n        });\n      }\n\n      this.setState(_objectSpread({}, item), function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          isRoleAdmin = _this$state2.isRoleAdmin,\n          isView = _this$state2.isView,\n          isCheck = _this$state2.isCheck,\n          id = _this$state2.id,\n          isViewButton = _this$state2.isViewButton,\n          supplyOfReagent = _this$state2.supplyOfReagent,\n          shouldOpenHealthOrgRoundPopup = _this$state2.shouldOpenHealthOrgRoundPopup,\n          personBuyReagent = _this$state2.personBuyReagent,\n          reagent = _this$state2.reagent,\n          listHealthOrgRound = _this$state2.listHealthOrgRound,\n          reagentLot = _this$state2.reagentLot,\n          orderTest = _this$state2.orderTest,\n          reagentExpiryDate = _this$state2.reagentExpiryDate,\n          testDate = _this$state2.testDate,\n          dateSubmitResults = _this$state2.dateSubmitResults,\n          technician = _this$state2.technician,\n          otherReagent = _this$state2.otherReagent,\n          healthOrgRound = _this$state2.healthOrgRound,\n          incubationTemp = _this$state2.incubationTemp,\n          incubationPeriod = _this$state2.incubationPeriod,\n          noteOtherReagent = _this$state2.noteOtherReagent,\n          incubationTempWithPlus = _this$state2.incubationTempWithPlus,\n          incubationPeriodWithPlus = _this$state2.incubationPeriodWithPlus,\n          incubationTempWithSubstrate = _this$state2.incubationTempWithSubstrate,\n          incubationPeriodWithSubstrate = _this$state2.incubationPeriodWithSubstrate,\n          details = _this$state2.details,\n          note = _this$state2.note,\n          isFinalResult = _this$state2.isFinalResult,\n          isManagementUnit = _this$state2.isManagementUnit,\n          reagentUnBoxDate = _this$state2.reagentUnBoxDate;\n      var searchObject = {\n        pageIndex: 0,\n        pageSize: 1000000\n      };\n      var technicianSearchObject = {\n        pageIndex: 0,\n        pageSize: 1000000,\n        searchByHealthOrg: true,\n        healthOrg: healthOrgRound && healthOrgRound.healthOrg && healthOrgRound.healthOrg.id ? {\n          id: healthOrgRound.healthOrg.id\n        } : null\n      };\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          classes = _this$props2.classes,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n;\n      var columns = [{\n        title: t(\"EQAResultReportElisa.sampleCode\"),\n        field: \"sampleTube.code\",\n        width: \"150px\",\n        headerStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.ODvalue\"),\n        field: \"oDvalue\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextField, {\n            disabled: true,\n            className: \"w-80\",\n            onChange: function onChange(oDvalue) {\n              return _this4.handleRowDataCellChange(rowData, oDvalue);\n            },\n            type: \"number\",\n            value: rowData.oDvalue ? rowData.oDvalue : '',\n            name: \"oDvalue\",\n            step: 0.0001,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 27\n            }\n          });\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.cutOff\"),\n        field: \"cutOff\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"50px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextField, {\n            disabled: true,\n            className: \"w-80\",\n            value: rowData.cutOff ? rowData.cutOff : '',\n            onChange: function onChange(cutOff) {\n              return _this4.handleRowDataCellChange(rowData, cutOff);\n            },\n            type: \"number\",\n            name: \"cutOff\",\n            step: 0.0001,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 11\n            }\n          });\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.ratioOdAndCutOff\"),\n        field: \"ratioOdAndCutOff\",\n        align: \"left\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return (\n            /*#__PURE__*/\n            // <TableODDeviceCOColumn item={rowData} isView={isView} />\n            React.createElement(TextField, {\n              disabled: true,\n              className: \"w-80\",\n              value: rowData.ratioOdAndCutOff ? rowData.ratioOdAndCutOff : '',\n              type: \"number\",\n              name: \"itemRatioOdAndCutOff\",\n              step: 0.0001,\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 11\n              }\n            })\n          );\n        }\n      }, {\n        title: t(\"EQAResultReportElisa.Result.title\"),\n        field: \"result\",\n        width: \"200px\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(FormControl, {\n            className: \"w-100\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(Select, {\n            disabled: true,\n            value: rowData.result,\n            onChange: function onChange(result) {\n              return _this4.handleRowDataCellChange(rowData, result);\n            },\n            inputProps: {\n              name: \"result\",\n              id: \"result-simple\"\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(MenuItem, {\n            value: \"\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"em\", {\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 30\n            }\n          }, \"None\"), \" \"), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 11\n            }\n          }, t(\"EQAResultReportElisa.Result.none\")), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.negative,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 11\n            }\n          }, t(\"EQAResultReportElisa.Result.negative\")), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.indertermine,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 493,\n              columnNumber: 11\n            }\n          }, t(\"EQAResultReportElisa.Result.indertermine\")), /*#__PURE__*/React.createElement(MenuItem, {\n            value: LocalConstants.EQAResultReportDetail_TestValue.positive,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 11\n            }\n          }, t(\"EQAResultReportElisa.Result.positive\"))));\n        }\n      }, {\n        title: t(\"SampleManagement.serum-bottle.note\"),\n        field: \"note\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(TextValidator, {\n            className: \"w-100\",\n            onChange: function onChange(note) {\n              return _this4.handleRowDataCellChange(rowData, note);\n            },\n            type: \"textarea\",\n            multiLine: true,\n            rowsMax: 4,\n            name: \"note\",\n            value: rowData.note ? rowData.note : '',\n            disabled: true,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 11\n            }\n          });\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Dialog, {\n        open: open,\n        maxWidth: \"lg\",\n        scroll: 'paper',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 13\n        }\n      }, !isView ? t(\"SaveUpdate\") : t(\"Details\")), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 116\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }\n      }, this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogFinalResultClose,\n        onYesClick: this.handleFinalResult,\n        text: isFinalResult ? t(\"EqaResult.unFinalResultConfirm\") : t(\"EqaResult.FinalResultConfirm\"),\n        Yes: t(\"general.Yes\"),\n        No: t(\"general.No\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Autocomplete, {\n        size: \"small\",\n        id: \"combo-box\",\n        options: listHealthOrgRound,\n        className: \"flex-end\",\n        disabled: isView,\n        getOptionLabel: function getOptionLabel(option) {\n          return option.healthOrg.name;\n        },\n        onChange: function onChange(event, healthOrgRound) {\n          return _this4.handleSelectHealthOrgRound(healthOrgRound);\n        },\n        value: healthOrgRound,\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n            label: /*#__PURE__*/React.createElement(\"span\", {\n              className: \"font\",\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 28\n              }\n            }, t('EQAResultReportElisa.healthOrgName')),\n            disabled: isView,\n            variant: \"outlined\",\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 44\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"EQAResultReportElisa.order\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"orderTest\",\n        value: orderTest,\n        disabled: isView,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        className: \"w-100\",\n        margin: \"none\",\n        id: \"mui-pickers-testDate\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 28\n          }\n        }, t(\"EQAResultReportElisa.testDate\")),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        autoOk: true,\n        format: \"dd/MM/yyyy\",\n        value: testDate,\n        disabled: isView,\n        onChange: function onChange(date) {\n          return _this4.handleDateChange(date, \"testDate\");\n        },\n        fullWidth: true,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 26\n          }\n        }, t(\"EQAResultReportElisa.technician\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"technician\",\n        value: technician,\n        disabled: isView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(AsynchronousAutocomplete, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"EqaResult.reagent\")),\n        size: \"small\",\n        variant: \"outlined\",\n        disabled: isView,\n        searchFunction: reagentSearchByPage,\n        searchObject: searchObject,\n        defaultValue: reagent,\n        value: reagent,\n        displayLable: 'name',\n        valueTextValidator: reagent,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        onSelect: this.selectReagent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"EQAResultReportElisa.reagentLot\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"reagentLot\",\n        value: reagentLot,\n        disabled: isView,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        fullWidth: true,\n        margin: \"none\",\n        id: \"mui-pickers-reagentExpiryDate\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 28\n          }\n        }, t('EQAResultReportElisa.reagentExpiryDate')),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        autoOk: false,\n        format: \"dd/MM/yyyy\",\n        value: reagentExpiryDate,\n        disabled: isView,\n        onChange: function onChange(date) {\n          return _this4.handleDateChange(date, \"reagentExpiryDate\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        fullWidth: true,\n        margin: \"none\",\n        id: \"mui-pickers-reagentExpiryDate\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 28\n          }\n        }, t('EQAResultReportElisa.reagentUnBoxDate')),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        autoOk: false,\n        format: \"dd/MM/yyyy\",\n        value: reagentUnBoxDate,\n        disabled: isView,\n        onChange: function onChange(date) {\n          return _this4.handleDateChange(date, \"reagentUnBoxDate\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 26\n          }\n        }, t(\"EQAResultReportElisa.supplyOfReagent\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"supplyOfReagent\",\n        value: supplyOfReagent,\n        disabled: isView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        size: \"small\",\n        variant: \"outlined\",\n        className: \"w-100 \",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 26\n          }\n        }, t(\"EQAResultReportElisa.personBuyReagent\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"personBuyReagent\",\n        value: personBuyReagent,\n        disabled: isView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 17\n        }\n      })), isFinalResult && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n        size: \"small\",\n        fullWidth: true,\n        margin: \"none\",\n        disabled: isView,\n        id: \"mui-pickers-dateSubmitResults\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 28\n          }\n        }, t('EQAResultReportElisa.dateSubmitResults')),\n        inputVariant: \"outlined\",\n        type: \"text\",\n        autoOk: false,\n        format: \"dd/MM/yyyy\",\n        value: dateSubmitResults,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 19\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 3,\n        md: 3,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControlLabel, {\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          style: {\n            fontWeight: \"bold\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 30\n          }\n        }, \" \", t('EQAResultReportFastTest.isFinalResult')),\n        control: /*#__PURE__*/React.createElement(Checkbox, {\n          disabled: isView,\n          checked: isFinalResult,\n          onClick: function onClick(isFinalResult) {\n            return _this4.notificationFinalResult(isFinalResult);\n          } // this.handleChange(isFinalResult, 'isFinalResult')\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 32\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        disabled: isView,\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 803,\n            columnNumber: 26\n          }\n        }, t(\"SampleManagement.serum-bottle.note\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        variant: \"outlined\",\n        size: \"small\",\n        name: \"note\",\n        value: note,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 17\n        }\n      })), otherReagent && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        disabled: isView,\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 26\n          }\n        }, t(\"reagent.note\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        size: \"small\",\n        variant: \"outlined\",\n        name: \"noteOtherReagent\",\n        value: noteOtherReagent,\n        validators: [\"required\"],\n        errorMessages: t('general.errorMessages_required'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(MaterialTable, {\n        title: \"\",\n        data: details,\n        columns: columns,\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 23\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this4.data = rows;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 17\n        }\n      })))), /*#__PURE__*/React.createElement(DialogActions, {\n        spacing: 4,\n        className: \"flex flex-end flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        className: \"\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 13\n        }\n      }, \" \", t('general.close')))));\n    }\n  }]);\n\n  return EQAResultReportElisaViewDialog;\n}(Component);\n\nexport default EQAResultReportElisaViewDialog;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAResultReportElisa/EQAResultReportElisaViewDialog.jsx"],"names":["React","Component","Dialog","Button","Grid","TextField","Icon","IconButton","FormControl","DialogTitle","DialogContent","DialogActions","Paper","InputAdornment","MenuItem","Checkbox","Select","FormControlLabel","ValidatorForm","TextValidator","technicianSearchByPage","saveItem","getEQASampleTubeByHealthOrgEQARoundId","checkReagentByHealthOrgRound","Autocomplete","ConstantList","AsynchronousAutocomplete","HealthOrgEQARoundPopup","searchByPage","reagentSearchByPage","Draggable","Breadcrumb","ConfirmationDialog","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","LocalConstants","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","toast","getCurrentUser","getListHealthOrgByUser","configure","autoClose","draggable","limit","MaterialButton","props","item","onSelect","TableODColumn","isView","event","onChange","oDvalue","TableCOColumn","cutOff","TableODDeviceCOColumn","ratioOdAndCutOff","TableResultColumn","t","i18n","result","name","EQAResultReportDetail_TestValue","Not_Implemented","negative","indertermine","positive","TableNoteColumn","EQAResultReportElisaViewDialog","state","rowsPerPage","page","typeMethod","healthOrg","listHealthOrgRound","reagent","technician","details","reagentExpiryDate","testDate","Date","reagentUnBoxDate","dateSubmitResults","roundLists","eqaRoundRegister","roundId","listReagent","reagentId","healthOrgRound","round","orderTest","shouldOpenSearchDialog","shouldOpenConfirmationDialog","shouldOpenHealthOrgRoundPopup","isViewButton","isFinalResult","isRoleAdmin","handleDialogClose","setState","handleChange","source","persist","isActive","target","checked","value","handleRowDataCellChange","rowData","length","forEach","element","tableData","id","parseFloat","toFixed","warning","handleDateChange","date","selectReagent","handleHealthOrgRoundPopupClose","handleSelectHealthOrgRound","then","listEQASampleTube","data","tube","eQAResultReportDetail","sampleTube","eqaSampleSetDetail","orderNumber","push","notificationFinalResult","handleFinalResult","handleDialogFinalResultClose","open","handleClose","sort","a","b","code","isCheck","supplyOfReagent","personBuyReagent","reagentLot","otherReagent","incubationTemp","incubationPeriod","noteOtherReagent","incubationTempWithPlus","incubationPeriodWithPlus","incubationTempWithSubstrate","incubationPeriodWithSubstrate","note","isManagementUnit","searchObject","pageIndex","pageSize","technicianSearchObject","searchByHealthOrg","classes","columns","title","field","width","headerStyle","minWidth","paddingLeft","paddingRight","textAlign","cellStyle","align","render","handleFormSubmit","overflowY","display","flexDirection","cursor","position","right","top","option","params","color","fontWeight","selection","actionsColumnIndex","paging","search","rowStyle","index","backgroundColor","padding","toolbar","Toolbar","rows"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Icon,\r\n  IconButton,\r\n  FormControl,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Paper,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Checkbox,Select,\r\n  FormControlLabel\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  technicianSearchByPage,\r\n  saveItem,\r\n  getEQASampleTubeByHealthOrgEQARoundId,\r\n  checkReagentByHealthOrgRound\r\n} from \"./EQAResultReportElisaService\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport ConstantList from \"../../appConfig\";\r\nimport AsynchronousAutocomplete from \"../utilities/AsynchronousAutocomplete\";\r\nimport HealthOrgEQARoundPopup from \"../Component/HealthOrgEQARound/HealthOrgEQARoundPopup\";\r\nimport { searchByPage as reagentSearchByPage } from \"../Reagent/ReagentService\";\r\nimport Draggable from 'react-draggable';\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport LocalConstants from \"./Constants\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../styles/views/_style.scss';\r\nimport {getCurrentUser,getListHealthOrgByUser} from \"../User/UserService\"\r\n\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\n// function PaperComponent(props) {\r\n//   return (\r\n//     <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n//       <Paper {...props} />\r\n//     </Draggable>\r\n//   );\r\n// }\r\nfunction MaterialButton(props) {\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton onClick={() => props.onSelect(item)}>\r\n      <Icon color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\n\r\nfunction TableODColumn(props) {\r\n  let item = props.item;\r\n  return <div>\r\n    <TextField\r\n      disabled={props.isView}\r\n      className=\"w-80\"\r\n      onChange={(event) => props.onChange(event, item)}\r\n      type=\"number\"\r\n      value={item.oDvalue}\r\n      name=\"itemODvalue\"\r\n    />\r\n  </div>;\r\n}\r\n\r\nfunction TableCOColumn(props) {\r\n  let item = props.item;\r\n  return <div>\r\n    <TextField\r\n      disabled={props.isView}\r\n      className=\"w-80\"\r\n      value={item.cutOff}\r\n      onChange={(event) => props.onChange(event, item)}\r\n      type=\"number\"\r\n      name=\"itemcutOff\"\r\n    />\r\n  </div>;\r\n}\r\n\r\nfunction TableODDeviceCOColumn(props) {\r\n\r\n  let item = props.item;\r\n  return <div>\r\n    <TextField\r\n      disabled={props.isView}\r\n      className=\"w-80\"\r\n      value={item.ratioOdAndCutOff}\r\n      type=\"number\"\r\n      name=\"itemRatioOdAndCutOff\"\r\n    />\r\n  </div>;\r\n}\r\n\r\nfunction TableResultColumn(props) {\r\n  const { t, i18n } = useTranslation();\r\n  let item = props.item;\r\n  return <div>\r\n    <FormControl className=\"w-100\">\r\n      <Select\r\n        disabled={props.isView}\r\n        value={item.result}\r\n        onChange={(event) => props.onChange(event, item)}\r\n        inputProps={{\r\n          name: \"result\",\r\n        }}\r\n      >\r\n        {/* <MenuItem value=''><em>None</em> </MenuItem> */}\r\n        <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented}>{t(\"EQAResultReportElisa.Result.none\")}</MenuItem>\r\n        <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.negative}>{t(\"EQAResultReportElisa.Result.negative\")}</MenuItem>\r\n        <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.indertermine}>{t(\"EQAResultReportElisa.Result.indertermine\")}</MenuItem>\r\n        <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.positive}>{t(\"EQAResultReportElisa.Result.positive\")}</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  </div>;\r\n}\r\nfunction TableNoteColumn(props) {\r\n  let item = props.item;\r\n  return <div>\r\n\r\n  </div>;\r\n}\r\nclass EQAResultReportElisaViewDialog extends Component {\r\n  state = {\r\n    rowsPerPage: 1000,\r\n    page: 0,\r\n    // isView: false,\r\n    typeMethod: 1, healthOrg: [],\r\n    listHealthOrgRound: [],\r\n    reagent: null,\r\n    technician: null,\r\n    details: [],\r\n    healthOrg: null,\r\n    reagentExpiryDate: null,\r\n    testDate: new Date(),\r\n    reagentUnBoxDate: null,\r\n    dateSubmitResults: null,\r\n    roundLists: [],\r\n    eqaRoundRegister: [],\r\n    roundId: \"\",\r\n    listReagent: [],\r\n    reagentId: '',\r\n    healthOrgRound: null,\r\n    round: null,\r\n    orderTest: '',\r\n    shouldOpenSearchDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenHealthOrgRoundPopup: false,\r\n    // isCheck:false,\r\n    isViewButton: false,\r\n    isFinalResult:false,\r\n    isRoleAdmin:false,\r\n    typeMethod: 1, isView: true\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n  handleDialogClose =()=>{\r\n    this.setState({shouldOpenConfirmationDialog: false,})\r\n  }\r\n  handleChange = (event, source) => {\r\n    event.persist();\r\n    if (source === \"switch\") {\r\n      this.setState({ isActive: event.target.checked });\r\n      return;\r\n    }\r\n    if(source === \"isFinalResult\"){\r\n      this.setState({isFinalResult:event.target.checked})\r\n    }\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n\r\n  };\r\n\r\n  handleRowDataCellChange = (rowData, event) => {\r\n    let {details} = this.state;\r\n    let { t } = this.props;\r\n    if (details != null && details.length > 0) {\r\n      details.forEach(element =>{\r\n        if(element.tableData != null && rowData != null && rowData.tableData != null &&  element.tableData.id == rowData.tableData.id){\r\n          if(event.target.name == \"oDvalue\"){\r\n            if(element.oDvalue == ''){\r\n              element.cutOff = '';\r\n              element.ratioOdAndCutOff = '';\r\n              element.result = '';\r\n            }\r\n            element.oDvalue = parseFloat(event.target.value);\r\n            if(parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue)>0){\r\n             element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\r\n            }\r\n          }else if(event.target.name == \"cutOff\"){\r\n            if(element.oDvalue ==\"\" ||element.oDvalue == null){\r\n              toast.warning(t(\"EQAResultReportElisa.notODvalue\"))\r\n              return\r\n            }\r\n            element.cutOff = parseFloat(event.target.value);\r\n            if (parseFloat(element.cutOff) > 0 && parseFloat(element.oDvalue) > 0) {\r\n              element.ratioOdAndCutOff = (parseFloat(element.oDvalue) / parseFloat(element.cutOff)).toFixed(2);\r\n            }\r\n          }else if(event.target.name == \"result\"){\r\n            if(event.target.value !== LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented && (element.oDvalue ==='' || element.oDvalue === null)){\r\n              toast.warning(t(\"EQAResultReportElisa.notODvalue\"))\r\n              element.result = null\r\n              return\r\n            }\r\n            if(event.target.value === LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented){\r\n              element.oDvalue = '';   \r\n              element.cutOff = '';\r\n              element.ratioOdAndCutOff = '';\r\n            }\r\n            \r\n            element.result = event.target.value;\r\n          }\r\n        }\r\n      });//forEach\r\n      this.setState({ details: details });\r\n    }\r\n  };\r\n\r\n\r\n  componentWillMount() {\r\n    let { open, handleClose, item,isRoleAdmin,isView } = this.props;\r\n    if(item != null && item.reagent !=  null && item.reagent.name != null){\r\n      if(item.reagent.name === \"Sinh phẩm khác\"){\r\n        item[\"otherReagent\"] = true\r\n      }else{\r\n        item[\"otherReagent\"] = false\r\n      }\r\n    }\r\n    if (item && item.details && item.details.length > 0) {\r\n      item.details.sort((a, b) => (a.orderNumber > b.orderNumber) ? 1 : (a.orderNumber === b.orderNumber) ? ((a.sampleTube.code > b.sampleTube.code) ? 1 : -1) : -1);\r\n    }\r\n    if(item.listHealthOrgRound != null){\r\n      this.setState({ listHealthOrgRound: item.listHealthOrgRound,\r\n      healthOrgRound: item.listHealthOrgRound[0]},() =>{\r\n        this.handleSelectHealthOrgRound(this.state.healthOrgRound);\r\n      });\r\n    }\r\n    this.setState({\r\n      ...item\r\n    }, function () {\r\n    });\r\n  }\r\n\r\n  handleDateChange = (date, name) => {\r\n    this.setState({\r\n      [name]: date\r\n    });\r\n  };\r\n\r\n  selectReagent = (reagent) => {\r\n    if (reagent != null && reagent.id != null) {\r\n      this.setState({ reagent: reagent }, function () {\r\n      });\r\n    }\r\n  }\r\n\r\n  handleHealthOrgRoundPopupClose = () => {\r\n    this.setState({ shouldOpenHealthOrgRoundPopup: false }, function () {\r\n    });\r\n  }\r\n\r\n  handleSelectHealthOrgRound = healthOrgRound => {\r\n    if (healthOrgRound && healthOrgRound.id) {\r\n      this.setState({ healthOrgRound: healthOrgRound }, function () {\r\n        let { healthOrgRound, details } = this.state;\r\n        details = [];\r\n        getEQASampleTubeByHealthOrgEQARoundId(healthOrgRound.id).then((result) => {\r\n          let listEQASampleTube = result.data;\r\n          if (listEQASampleTube != null && listEQASampleTube.length > 0) {\r\n            listEQASampleTube.forEach(tube => {\r\n              let eQAResultReportDetail = {};\r\n              eQAResultReportDetail.sampleTube = tube;\r\n              if (tube.eqaSampleSetDetail && tube.eqaSampleSetDetail.orderNumber) {\r\n                eQAResultReportDetail.orderNumber = tube.eqaSampleSetDetail.orderNumber;\r\n              }\r\n              eQAResultReportDetail.cutOff = '';\r\n              eQAResultReportDetail.oDvalue = '';\r\n              eQAResultReportDetail.ratioOdAndCutOff = '';\r\n              eQAResultReportDetail.result = '';\r\n              details.push(eQAResultReportDetail);\r\n            });\r\n          }\r\n          this.setState({ details });\r\n        });\r\n      });\r\n    }\r\n    this.handleHealthOrgRoundPopupClose();\r\n  }\r\n  notificationFinalResult =()=>{\r\n    if(!this.state.isFinalResult || this.state.isFinalResult == null){\r\n      this.setState({shouldOpenConfirmationDialog:true})\r\n    }\r\n    this.setState({shouldOpenConfirmationDialog:true})\r\n  }\r\n  handleFinalResult =()=>{\r\n    if(this.state.isFinalResult == null || !this.state.isFinalResult){\r\n      this.setState({isFinalResult:true, dateSubmitResults: new Date() },()=>{\r\n      })\r\n      this.handleDialogClose()\r\n    }\r\n    if(this.state.isFinalResult){\r\n      this.setState({isFinalResult:false, dateSubmitResults: new Date() },()=>{\r\n      })\r\n      this.handleDialogClose()\r\n    }\r\n  }\r\n  handleDialogFinalResultClose = ()=>{\r\n    // this.setState({isFinalResult:false, dateSubmitResults: null},()=>{\r\n    // })\r\n    this.handleDialogClose()\r\n  }\r\n  render() {\r\n    let {\r\n      isRoleAdmin,\r\n      isView,\r\n      isCheck,\r\n      id,\r\n      isViewButton,\r\n      supplyOfReagent,\r\n      shouldOpenHealthOrgRoundPopup,\r\n      personBuyReagent,\r\n      reagent,\r\n      listHealthOrgRound,\r\n      reagentLot,\r\n      orderTest,\r\n      reagentExpiryDate,\r\n      testDate,\r\n      dateSubmitResults,\r\n      technician,\r\n      otherReagent,\r\n      healthOrgRound,\r\n      incubationTemp,\r\n      incubationPeriod,\r\n      noteOtherReagent,\r\n      incubationTempWithPlus,\r\n      incubationPeriodWithPlus,\r\n      incubationTempWithSubstrate,\r\n      incubationPeriodWithSubstrate,\r\n      details,note,isFinalResult,isManagementUnit,\r\n      reagentUnBoxDate\r\n    } = this.state;\r\n    let searchObject = { pageIndex: 0, pageSize: 1000000 };\r\n    let technicianSearchObject = { pageIndex: 0, pageSize: 1000000, searchByHealthOrg: true, healthOrg: (healthOrgRound && healthOrgRound.healthOrg && healthOrgRound.healthOrg.id) ? { id: healthOrgRound.healthOrg.id } : null };\r\n\r\n    let { open, handleClose, classes, t, i18n } = this.props;\r\n    let columns = [\r\n      { \r\n        title: t(\"EQAResultReportElisa.sampleCode\"), \r\n        field: \"sampleTube.code\", \r\n        width: \"150px\",\r\n        headerStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        }, \r\n      },\r\n      {\r\n        title: t(\"EQAResultReportElisa.ODvalue\"),\r\n        field: \"oDvalue\",\r\n        align: \"left\", width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n       render: rowData => <TextField\r\n          disabled={true}\r\n          className=\"w-80\"\r\n          onChange={(oDvalue) => this.handleRowDataCellChange(rowData, oDvalue)}\r\n          type=\"number\"\r\n          value={rowData.oDvalue ? rowData.oDvalue: ''}\r\n          name=\"oDvalue\"\r\n          step={0.0001}\r\n        />\r\n      },\r\n      {\r\n        title: t(\"EQAResultReportElisa.cutOff\"),\r\n        field: \"cutOff\",\r\n        align: \"left\",\r\n        width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"50px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => \r\n          <TextField\r\n            disabled={true }\r\n            className=\"w-80\"\r\n            value={rowData.cutOff ? rowData.cutOff : ''}\r\n            onChange={(cutOff) => this.handleRowDataCellChange(rowData, cutOff)}\r\n            type=\"number\"\r\n            name=\"cutOff\"\r\n            step = {0.0001}\r\n        />\r\n      },\r\n      {\r\n        title: t(\"EQAResultReportElisa.ratioOdAndCutOff\"),\r\n        field: \"ratioOdAndCutOff\",\r\n        align: \"left\",\r\n        width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => \r\n        // <TableODDeviceCOColumn item={rowData} isView={isView} />\r\n          <TextField\r\n            disabled={true }\r\n            className=\"w-80\"\r\n            value={rowData.ratioOdAndCutOff ? rowData.ratioOdAndCutOff : ''}\r\n            type=\"number\"\r\n            name=\"itemRatioOdAndCutOff\"\r\n            step = {0.0001}\r\n        />\r\n      },\r\n      {\r\n        title: t(\"EQAResultReportElisa.Result.title\"),\r\n        field: \"result\",\r\n        width: \"200px\",\r\n        headerStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => \r\n          <FormControl className=\"w-100\">\r\n            <Select\r\n              disabled={true}\r\n              value={rowData.result}\r\n              onChange={(result) => this.handleRowDataCellChange(rowData, result)}\r\n              inputProps={{\r\n                name: \"result\",\r\n                id: \"result-simple\"\r\n              }}\r\n        >\r\n          <MenuItem value=''><em>None</em> </MenuItem>\r\n          <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.Not_Implemented}>{t(\"EQAResultReportElisa.Result.none\")}</MenuItem>\r\n          <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.negative}>{t(\"EQAResultReportElisa.Result.negative\")}</MenuItem>\r\n          <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.indertermine}>{t(\"EQAResultReportElisa.Result.indertermine\")}</MenuItem>\r\n          <MenuItem value={LocalConstants.EQAResultReportDetail_TestValue.positive}>{t(\"EQAResultReportElisa.Result.positive\")}</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      },\r\n      {\r\n        title:t(\"SampleManagement.serum-bottle.note\"),\r\n        field: \"note\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          <TextValidator\r\n            className=\"w-100\"\r\n            onChange={note => this.handleRowDataCellChange(rowData, note)}\r\n            type=\"textarea\"\r\n            multiLine\r\n            rowsMax={4}\r\n            name=\"note\"\r\n            value={rowData.note ? rowData.note : ''}\r\n            disabled={true}\r\n          />\r\n      }\r\n    ];\r\n    return (\r\n      <Dialog open={open}  maxWidth={\"lg\"} scroll={'paper'} >\r\n        <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}\r\n          style={{\r\n            overflowY: \"auto\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n          }}>\r\n          <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n            <span className=\"mb-20 styleColor\">{!isView ? t(\"SaveUpdate\") : t(\"Details\")}</span>\r\n            <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n          {this.state.shouldOpenConfirmationDialog && (\r\n              <ConfirmationDialog\r\n                title={t(\"confirm\")}\r\n                open={this.state.shouldOpenConfirmationDialog}\r\n                onConfirmDialogClose={this.handleDialogFinalResultClose}\r\n                onYesClick={this.handleFinalResult}\r\n                text={isFinalResult? t(\"EqaResult.unFinalResultConfirm\"):t(\"EqaResult.FinalResultConfirm\")}\r\n                Yes={t(\"general.Yes\")}\r\n                No={t(\"general.No\")}\r\n              />\r\n            )}\r\n            <Grid container spacing={2}>\r\n              {/* <Grid item md={8} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  disabled={isView}\r\n                  label={t(\"EQAResultReportElisa.healthOrgName\")}\r\n                  placeholder={t(\"EQAResultReportElisa.healthOrgName\")}\r\n                  id=\"healthOrgRound\"\r\n                  className=\"w-100\"\r\n                  value={(healthOrgRound != null && healthOrgRound.healthOrg) ? healthOrgRound.healthOrg.name : ''}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={[t(\"general.errorMessages_required\")]}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <Button\r\n                          size={'small'}\r\n                          disabled={isView }\r\n                          className=\"align-bottom\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          onClick={() => this.setState({ shouldOpenHealthOrgRoundPopup: true })}\r\n                        >\r\n                          {t('Select')}\r\n                        </Button>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />{shouldOpenHealthOrgRoundPopup && (\r\n                  <HealthOrgEQARoundPopup\r\n                    open={shouldOpenHealthOrgRoundPopup}\r\n                    handleSelect={this.handleSelectHealthOrgRound}\r\n                    selectedItem={healthOrgRound}\r\n                    handleClose={this.handleHealthOrgRoundPopupClose} \r\n                    t={t} i18n={i18n} />\r\n                )}\r\n              </Grid> */}\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <Autocomplete\r\n                  size=\"small\"\r\n                  id=\"combo-box\"\r\n                  options={listHealthOrgRound}\r\n                  className=\"flex-end\"\r\n                  disabled = {isView}\r\n                  getOptionLabel={(option) => option.healthOrg.name}\r\n                  onChange={(event, healthOrgRound)=> this.handleSelectHealthOrgRound(healthOrgRound)}\r\n                  value={healthOrgRound}\r\n                  renderInput={(params) => <TextField {...params}\r\n                    label={<span className=\"font\">{t('EQAResultReportElisa.healthOrgName')}</span>}\r\n                    disabled={isView}\r\n                    variant = \"outlined\"\r\n                  />}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"EQAResultReportElisa.order\")}\r\n                    </span>\r\n                    }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"orderTest\"\r\n                  value={orderTest}\r\n                  disabled={isView}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={t('general.errorMessages_required')}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    size=\"small\"\r\n                    className=\"w-100\"\r\n                    margin=\"none\"\r\n                    id=\"mui-pickers-testDate\"\r\n                    label={<span className=\"font\">{t(\"EQAResultReportElisa.testDate\")}</span>}\r\n                    inputVariant=\"outlined\"\r\n                    type=\"text\"\r\n                    autoOk={true}\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={testDate}\r\n                    disabled={isView }\r\n                    onChange={date => this.handleDateChange(date, \"testDate\")}\r\n                    fullWidth\r\n                    validators={[\"required\"]}\r\n                    errorMessages={t('general.errorMessages_required')}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\">{t(\"EQAResultReportElisa.technician\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"technician\"\r\n                  value={technician}\r\n                  disabled={isView }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <AsynchronousAutocomplete\r\n                 label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"EqaResult.reagent\")}\r\n                    </span>\r\n                    }\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  disabled={isView }\r\n                  searchFunction={reagentSearchByPage}\r\n                  searchObject={searchObject}\r\n                  defaultValue={reagent}\r\n                  value={reagent}\r\n                  displayLable={'name'}\r\n                  valueTextValidator={reagent}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={t('general.errorMessages_required')}\r\n                  onSelect={this.selectReagent}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={\r\n                    <span className=\"font\">\r\n                      <span style={{ color: \"red\" }}> * </span>\r\n                      {t(\"EQAResultReportElisa.reagentLot\")}\r\n                    </span>\r\n                    }\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"reagentLot\"\r\n                  value={reagentLot}\r\n                  disabled={isView }\r\n                  validators={[\"required\"]}\r\n                  errorMessages={t('general.errorMessages_required')}\r\n                />\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    margin=\"none\"\r\n                    id=\"mui-pickers-reagentExpiryDate\"\r\n                    label={<span className=\"font\">{t('EQAResultReportElisa.reagentExpiryDate')}</span>}\r\n                    inputVariant=\"outlined\"\r\n                    type=\"text\"\r\n                    autoOk={false}\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={reagentExpiryDate}\r\n                    disabled={isView }\r\n                    onChange={date => this.handleDateChange(date, \"reagentExpiryDate\")}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    margin=\"none\"\r\n                    id=\"mui-pickers-reagentExpiryDate\"\r\n                    label={<span className=\"font\">{t('EQAResultReportElisa.reagentUnBoxDate')}</span>}\r\n                    inputVariant=\"outlined\"\r\n                    type=\"text\"\r\n                    autoOk={false}\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={reagentUnBoxDate}\r\n                    disabled={isView }\r\n                    onChange={date => this.handleDateChange(date, \"reagentUnBoxDate\")}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>\r\n              <Grid item lg={4} md={4} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\">{t(\"EQAResultReportElisa.supplyOfReagent\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"supplyOfReagent\"\r\n                  value={supplyOfReagent}\r\n                  disabled={isView }\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextValidator\r\n                  size=\"small\"\r\n                  variant = \"outlined\"\r\n                  className=\"w-100 \"\r\n                  label={<span className=\"font\">{t(\"EQAResultReportElisa.personBuyReagent\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  name=\"personBuyReagent\"\r\n                  value={personBuyReagent}\r\n                  disabled={isView }\r\n                />\r\n              </Grid>\r\n              {isFinalResult && (<Grid item lg={3} md={3} sm={12} xs={12}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                  <KeyboardDatePicker\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    margin=\"none\"\r\n                    disabled = {isView}\r\n                    id=\"mui-pickers-dateSubmitResults\"\r\n                    label={<span className=\"font\">{t('EQAResultReportElisa.dateSubmitResults')}</span>}\r\n                    inputVariant=\"outlined\"\r\n                    type=\"text\"\r\n                    autoOk={false}\r\n                    format=\"dd/MM/yyyy\"\r\n                    value={dateSubmitResults}\r\n                  />\r\n                </MuiPickersUtilsProvider>\r\n              </Grid>)} \r\n              <Grid item lg={3} md={3} sm={12} xs={12}>\r\n              <FormControlLabel\r\n                      label={<span className=\"font\" style={{ fontWeight : \"bold\"}}> {t('EQAResultReportFastTest.isFinalResult')}</span>}\r\n                      control={<Checkbox disabled={isView} checked={isFinalResult} \r\n                      onClick={(isFinalResult) =>\r\n                        this.notificationFinalResult(isFinalResult)\r\n                      // this.handleChange(isFinalResult, 'isFinalResult')\r\n                        }\r\n                        />}\r\n                        \r\n                      />\r\n              </Grid>\r\n             \r\n              <Grid item lg={12} md ={12} sm={12} xs={12}>\r\n                <TextValidator\r\n                  disabled ={isView}\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\">{t(\"SampleManagement.serum-bottle.note\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  variant = \"outlined\"\r\n                  size=\"small\"\r\n                  name=\"note\"\r\n                  value={note}\r\n                />\r\n              </Grid>\r\n              {otherReagent && (<Grid item lg={12} md ={12} sm={12} xs={12}>\r\n                <TextValidator\r\n                  disabled ={isView}\r\n                  className=\"w-100\"\r\n                  label={<span className=\"font\">{t(\"reagent.note\")}</span>}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n                  size = \"small\"\r\n                  variant = \"outlined\"\r\n                  name=\"noteOtherReagent\"\r\n                  value={noteOtherReagent}\r\n                  validators={[\"required\"]}\r\n                  errorMessages={t('general.errorMessages_required')}\r\n                />\r\n              </Grid>)}\r\n            \r\n              <Grid item sm={12} xs={12}>\r\n                <MaterialTable\r\n                  title={\"\"}\r\n                  data={details}\r\n                  columns={columns}\r\n                  options={{\r\n                    selection: false,\r\n                    actionsColumnIndex: -1,\r\n                    paging: false,\r\n                    search: false,\r\n                    rowStyle: (rowData, index) => ({\r\n                      backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                    }),\r\n                    headerStyle: {\r\n                      backgroundColor: '#358600',\r\n                      color:'#fff',\r\n                    },\r\n                    padding: 'dense',\r\n                    toolbar: false\r\n                  }}\r\n                  components={{\r\n                    Toolbar: props => (\r\n                      <MTableToolbar {...props} />\r\n                    ),\r\n                  }}\r\n                  onSelectionChange={(rows) => {\r\n                    this.data = rows;\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions spacing={4} className=\"flex flex-end flex-middle\">\r\n            <Button variant=\"contained\" className=\"\" color=\"secondary\" onClick={() => handleClose()}> {t('general.close')}</Button>\r\n            {/* {((!isView || isRoleAdmin) && <Button  variant=\"contained\" disabled={isViewButton} color=\"primary\" type=\"submit\" >\r\n              {t('Save')}\r\n            </Button> */}\r\n            {/* )} */}\r\n          </DialogActions>\r\n        </ValidatorForm>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAResultReportElisaViewDialog;\r\n"]},"metadata":{},"sourceType":"module"}