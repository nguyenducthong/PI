{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _TextField = _interopRequireDefault(require(\"@material-ui/core/TextField\"));\n\nvar _Checkbox = _interopRequireDefault(require(\"@material-ui/core/Checkbox\"));\n\nvar _Select = _interopRequireDefault(require(\"@material-ui/core/Select\"));\n\nvar _MenuItem = _interopRequireDefault(require(\"@material-ui/core/MenuItem\"));\n\nvar _FormControl = _interopRequireDefault(require(\"@material-ui/core/FormControl\"));\n\nvar _FormHelperText = _interopRequireDefault(require(\"@material-ui/core/FormHelperText\"));\n\nvar _FormGroup = _interopRequireDefault(require(\"@material-ui/core/FormGroup\"));\n\nvar _FormControlLabel = _interopRequireDefault(require(\"@material-ui/core/FormControlLabel\"));\n\nvar _dateFns = _interopRequireDefault(require(\"@date-io/date-fns\"));\n\nvar _pickers = require(\"@material-ui/pickers\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = (0, _getPrototypeOf2[\"default\"])(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2[\"default\"])(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return (0, _possibleConstructorReturn2[\"default\"])(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar MTableEditField = /*#__PURE__*/function (_React$Component) {\n  (0, _inherits2[\"default\"])(MTableEditField, _React$Component);\n\n  var _super = _createSuper(MTableEditField);\n\n  function MTableEditField() {\n    (0, _classCallCheck2[\"default\"])(this, MTableEditField);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2[\"default\"])(MTableEditField, [{\n    key: \"getProps\",\n    value: function getProps() {\n      var _this$props = this.props,\n          columnDef = _this$props.columnDef,\n          rowData = _this$props.rowData,\n          onRowDataChange = _this$props.onRowDataChange,\n          errorState = _this$props.errorState,\n          onBulkEditRowChanged = _this$props.onBulkEditRowChanged,\n          props = (0, _objectWithoutProperties2[\"default\"])(_this$props, [\"columnDef\", \"rowData\", \"onRowDataChange\", \"errorState\", \"onBulkEditRowChanged\"]);\n      return props;\n    }\n  }, {\n    key: \"renderLookupField\",\n    value: function renderLookupField() {\n      var _this = this;\n\n      var _this$getProps = this.getProps(),\n          helperText = _this$getProps.helperText,\n          error = _this$getProps.error,\n          props = (0, _objectWithoutProperties2[\"default\"])(_this$getProps, [\"helperText\", \"error\"]);\n\n      return /*#__PURE__*/React.createElement(_FormControl[\"default\"], {\n        error: Boolean(error)\n      }, /*#__PURE__*/React.createElement(_Select[\"default\"], (0, _extends2[\"default\"])({}, props, {\n        value: this.props.value === undefined ? \"\" : this.props.value,\n        onChange: function onChange(event) {\n          return _this.props.onChange(event.target.value);\n        },\n        style: {\n          fontSize: 13\n        },\n        SelectDisplayProps: {\n          \"aria-label\": this.props.columnDef.title\n        }\n      }), Object.keys(this.props.columnDef.lookup).map(function (key) {\n        return /*#__PURE__*/React.createElement(_MenuItem[\"default\"], {\n          key: key,\n          value: key\n        }, _this.props.columnDef.lookup[key]);\n      })), Boolean(helperText) && /*#__PURE__*/React.createElement(_FormHelperText[\"default\"], null, helperText));\n    }\n  }, {\n    key: \"renderBooleanField\",\n    value: function renderBooleanField() {\n      var _this2 = this;\n\n      var _this$getProps2 = this.getProps(),\n          helperText = _this$getProps2.helperText,\n          error = _this$getProps2.error,\n          props = (0, _objectWithoutProperties2[\"default\"])(_this$getProps2, [\"helperText\", \"error\"]);\n\n      return /*#__PURE__*/React.createElement(_FormControl[\"default\"], {\n        error: Boolean(error),\n        component: \"fieldset\"\n      }, /*#__PURE__*/React.createElement(_FormGroup[\"default\"], null, /*#__PURE__*/React.createElement(_FormControlLabel[\"default\"], {\n        label: \"\",\n        control: /*#__PURE__*/React.createElement(_Checkbox[\"default\"], (0, _extends2[\"default\"])({}, props, {\n          value: String(this.props.value),\n          checked: Boolean(this.props.value),\n          onChange: function onChange(event) {\n            return _this2.props.onChange(event.target.checked);\n          },\n          style: {\n            padding: 0,\n            width: 24,\n            marginLeft: 9\n          },\n          inputProps: {\n            \"aria-label\": this.props.columnDef.title\n          }\n        }))\n      })), /*#__PURE__*/React.createElement(_FormHelperText[\"default\"], null, helperText));\n    }\n  }, {\n    key: \"renderDateField\",\n    value: function renderDateField() {\n      var dateFormat = this.props.columnDef.dateSetting && this.props.columnDef.dateSetting.format ? this.props.columnDef.dateSetting.format : \"dd.MM.yyyy\";\n      return /*#__PURE__*/React.createElement(_pickers.MuiPickersUtilsProvider, {\n        utils: _dateFns[\"default\"],\n        locale: this.props.locale\n      }, /*#__PURE__*/React.createElement(_pickers.DatePicker, (0, _extends2[\"default\"])({}, this.getProps(), {\n        format: dateFormat,\n        value: this.props.value || null,\n        onChange: this.props.onChange,\n        clearable: true,\n        InputProps: {\n          style: {\n            fontSize: 13\n          }\n        },\n        inputProps: {\n          \"aria-label\": \"\".concat(this.props.columnDef.title, \": press space to edit\")\n        }\n      })));\n    }\n  }, {\n    key: \"renderTimeField\",\n    value: function renderTimeField() {\n      return /*#__PURE__*/React.createElement(_pickers.MuiPickersUtilsProvider, {\n        utils: _dateFns[\"default\"],\n        locale: this.props.locale\n      }, /*#__PURE__*/React.createElement(_pickers.TimePicker, (0, _extends2[\"default\"])({}, this.getProps(), {\n        format: \"HH:mm:ss\",\n        value: this.props.value || null,\n        onChange: this.props.onChange,\n        clearable: true,\n        InputProps: {\n          style: {\n            fontSize: 13\n          },\n          inputProps: {\n            \"aria-label\": \"\".concat(this.props.columnDef.title, \": press space to edit\")\n          }\n        }\n      })));\n    }\n  }, {\n    key: \"renderDateTimeField\",\n    value: function renderDateTimeField() {\n      return /*#__PURE__*/React.createElement(_pickers.MuiPickersUtilsProvider, {\n        utils: _dateFns[\"default\"],\n        locale: this.props.locale\n      }, /*#__PURE__*/React.createElement(_pickers.DateTimePicker, (0, _extends2[\"default\"])({}, this.getProps(), {\n        format: \"dd.MM.yyyy HH:mm:ss\",\n        value: this.props.value || null,\n        onChange: this.props.onChange,\n        clearable: true,\n        InputProps: {\n          style: {\n            fontSize: 13\n          },\n          inputProps: {\n            \"aria-label\": \"\".concat(this.props.columnDef.title, \": press space to edit\")\n          }\n        }\n      })));\n    }\n  }, {\n    key: \"renderTextField\",\n    value: function renderTextField() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(_TextField[\"default\"], (0, _extends2[\"default\"])({}, this.getProps(), {\n        fullWidth: true,\n        style: this.props.columnDef.type === \"numeric\" ? {\n          \"float\": \"right\"\n        } : {},\n        type: this.props.columnDef.type === \"numeric\" ? \"number\" : \"text\",\n        placeholder: this.props.columnDef.editPlaceholder || this.props.columnDef.title,\n        value: this.props.value === undefined ? \"\" : this.props.value,\n        onChange: function onChange(event) {\n          return _this3.props.onChange(_this3.props.columnDef.type === \"numeric\" ? event.target.valueAsNumber : event.target.value);\n        },\n        InputProps: {\n          style: {\n            fontSize: 13\n          },\n          inputProps: {\n            \"aria-label\": this.props.columnDef.title\n          }\n        }\n      }));\n    }\n  }, {\n    key: \"renderCurrencyField\",\n    value: function renderCurrencyField() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(_TextField[\"default\"], (0, _extends2[\"default\"])({}, this.getProps(), {\n        placeholder: this.props.columnDef.editPlaceholder || this.props.columnDef.title,\n        style: {\n          \"float\": \"right\"\n        },\n        type: \"number\",\n        value: this.props.value === undefined ? \"\" : this.props.value,\n        onChange: function onChange(event) {\n          var value = event.target.valueAsNumber;\n\n          if (!value && value !== 0) {\n            value = undefined;\n          }\n\n          return _this4.props.onChange(value);\n        },\n        inputProps: {\n          style: {\n            fontSize: 13,\n            textAlign: \"right\",\n            \"aria-label\": this.props.columnDef.title\n          }\n        },\n        onKeyDown: this.props.onKeyDown,\n        autoFocus: this.props.autoFocus\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var component = \"ok\";\n\n      if (this.props.columnDef.lookup) {\n        component = this.renderLookupField();\n      } else if (this.props.columnDef.type === \"boolean\") {\n        component = this.renderBooleanField();\n      } else if (this.props.columnDef.type === \"date\") {\n        component = this.renderDateField();\n      } else if (this.props.columnDef.type === \"time\") {\n        component = this.renderTimeField();\n      } else if (this.props.columnDef.type === \"datetime\") {\n        component = this.renderDateTimeField();\n      } else if (this.props.columnDef.type === \"currency\") {\n        component = this.renderCurrencyField();\n      } else {\n        component = this.renderTextField();\n      }\n\n      return component;\n    }\n  }]);\n  return MTableEditField;\n}(React.Component);\n\nMTableEditField.propTypes = {\n  value: _propTypes[\"default\"].any,\n  onChange: _propTypes[\"default\"].func.isRequired,\n  columnDef: _propTypes[\"default\"].object.isRequired,\n  locale: _propTypes[\"default\"].object\n};\nvar _default = MTableEditField;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}