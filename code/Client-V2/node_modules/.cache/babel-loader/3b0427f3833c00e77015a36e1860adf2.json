{"ast":null,"code":"import _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\HealthOrgRegisterForm\\\\EQAPlanningActiveFrom.jsx\";\nimport { InputAdornment, Input, Grid, IconButton, TextField, Button, TablePagination } from \"@material-ui/core\";\nimport React, { Component } from \"react\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from \"material-table\";\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\nimport { healthOrgRegisterRound, handleCancelRegistration, searchEQAPlanningByPage as searchByPage } from \"./HealthOrgRegisterFormService\";\nimport moment from \"moment\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport EQAHealthOrgPlanningRegisterDialog from \"./EQAHealthOrgPlanningRegisterDialog\";\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    title: \"\\u0110\\u0103ng k\\xFD tham gia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"material-icons\",\n    style: {\n      color: \"#7467ef\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"add_circle\")));\n}\n\nvar EQAPlanningActiveFrom = /*#__PURE__*/function (_React$Component) {\n  _inherits(EQAPlanningActiveFrom, _React$Component);\n\n  var _super = _createSuper(EQAPlanningActiveFrom);\n\n  function EQAPlanningActiveFrom(props) {\n    var _this;\n\n    _classCallCheck(this, EQAPlanningActiveFrom);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      rowsPerPage: 10,\n      page: 0,\n      data: [],\n      totalElements: 0,\n      itemList: [],\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      shouldOpenConfirmationDeleteAllDialog: false,\n      shouldOpenHealthOrgRegisterDialog: false,\n      isRunning: true,\n      text: \"\",\n      listEQARound: [],\n      round: null,\n      planning: null\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === \"Enter\") {\n        _this.search();\n      }\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n      searchObject.text = _this.state.text;\n\n      if (_this.state.planning != null) {\n        searchObject.planningId = _this.state.planning.id;\n      }\n\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchObject.isRunning = _this.state.isRunning;\n      searchByPage(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.healthOrgRegisterRound = function (rowData) {\n      _this.setState({\n        shouldOpenHealthOrgRegisterDialog: true,\n        planning: rowData\n      }, function () {});\n    };\n\n    _this.handleHealthOrgRegisterDialogClose = function () {\n      _this.setState({\n        shouldOpenHealthOrgRegisterDialog: false\n      });\n    };\n\n    _this.handleTextChange = _this.handleTextChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EQAPlanningActiveFrom, [{\n    key: \"handleTextChange\",\n    value: function handleTextChange(event) {\n      this.setState({\n        text: event.target.value\n      });\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      var _this2 = this;\n\n      var searchObject = {};\n      searchObject.text = this.state.text;\n\n      if (this.state.planning != null) {\n        searchObject.planningId = this.state.planning.id;\n      }\n\n      searchObject.pageIndex = this.state.page;\n      searchObject.pageSize = this.state.rowsPerPage;\n      searchObject.isRunning = this.state.isRunning;\n      searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // let searchObject = { pageIndex: 0, pageSize: 1000000 };\n      // searchByPageEQARound(searchObject).then(({ data }) => {\n      //   if (data != null && data.content.length > 0) {\n      //     this.setState({ listEQARound: [...data.content] }, () => {});\n      //   }\n      // });\n      this.updatePageData();\n    }\n  }, {\n    key: \"render\",\n    // handleFilterEQARound = (event, round, reason, details) => {\n    //   if (round != null && round.id != null) {\n    //     let searchObject = {};\n    //     searchObject.roundId = round.id;\n    //     searchObject.isRunning = this.state.isRunning;\n    //     searchObject.pageIndex = this.state.page;\n    //     searchObject.pageSize = this.state.rowsPerPage;\n    //     searchByPage(searchObject).then(({ data }) => {\n    //       this.setState({\n    //         itemList: [...data.content],\n    //         totalElements: data.totalElements,\n    //         round: round\n    //       });\n    //     });\n    //     if (reason == \"clear\") {\n    //       this.setState({ round: null });\n    //     }\n    //   } else {\n    //     this.setState({ round: null }, () => {\n    //       let searchObject = {};\n    //       searchObject.isRunning = this.state.isRunning;\n    //       searchObject.pageIndex = this.state.page;\n    //       searchObject.pageSize = this.state.rowsPerPage;\n    //       searchByPage(searchObject).then(({ data }) => {\n    //         this.setState({\n    //           itemList: [...data.content],\n    //           totalElements: data.totalElements,\n    //           round: round\n    //         });\n    //       });\n    //     });\n    //   }\n    // };\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          text = _this$state.text,\n          shouldOpenHealthOrgRegisterDialog = _this$state.shouldOpenHealthOrgRegisterDialog;\n      var _this$state2 = this.state,\n          listEQARound = _this$state2.listEQARound,\n          planning = _this$state2.planning;\n      var columns = [{\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"100\",\n        headerStyle: {\n          minWidth: \"80px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"80px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(Button // className=\"mb-16 mr-16 align-bottom\"\n          , {\n            variant: \"contained\",\n            color: \"primary\",\n            title: t(\"AllocationSampleSet.ViewDetailOrg\"),\n            onClick: function onClick() {\n              _this3.healthOrgRegisterRound(rowData);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 11\n            }\n          }, t(\"general.register\"));\n        }\n      }, // {\n      //   title: t(\"stt\"),\n      //   width: \"150\",\n      //   align: \"left\",\n      //   headerStyle: {\n      //     minWidth: \"75px\",\n      //     paddingLeft: \"0px\",\n      //     paddingRight: \"0px\",\n      //   },\n      //   cellStyle: {\n      //     minWidth: \"75px\",\n      //     paddingLeft: \"0px\",\n      //     paddingRight: \"0px\",\n      //     textAlign: \"left\",\n      //   },\n      //   render: rowData => rowData.tableData.id + 1\n      // },\n      {\n        title: t(\"Year\"),\n        field: \"name\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        cellStyle: {\n          minWidth: \"100px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.year ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 9\n            }\n          }, rowData.year, \"  -  \", parseFloat(rowData.year) + 1) : \"\";\n        }\n      }, {\n        title: t(\"EQARound.registrationStartDate\"),\n        field: \"\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.startDate ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 13\n            }\n          }, moment(rowData.startDate).format(\"DD/MM/YYYY HH:mm\")) : \"\";\n        }\n      }, {\n        title: t(\"EQARound.registrationExpiryDate\"),\n        field: \"\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"200px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return rowData.endDate ? /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 13\n            }\n          }, moment(rowData.endDate).format(\"DD/MM/YYYY HH:mm\")) : \"\";\n        }\n      }];\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        className: \"flex-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }\n      }, t(\"EQAHealthOrgRoundRegister.titlePage\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }\n      }, this.state.shouldOpenHealthOrgRegisterDialog && /*#__PURE__*/React.createElement(EQAHealthOrgPlanningRegisterDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleHealthOrgRegisterDialogClose,\n        open: this.state.shouldOpenHealthOrgRegisterDialog,\n        item: this.state.planning,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }), this.state.shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: this.state.shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t(\"DeleteConfirm\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        data: this.state.itemList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: false,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this3,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this3.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref3) {\n          var from = _ref3.from,\n              to = _ref3.to,\n              count = _ref3.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: this.state.totalElements,\n        rowsPerPage: this.state.rowsPerPage,\n        page: this.state.page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return EQAPlanningActiveFrom;\n}(React.Component);\n\nexport default EQAPlanningActiveFrom;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/HealthOrgRegisterForm/EQAPlanningActiveFrom.jsx"],"names":["InputAdornment","Input","Grid","IconButton","TextField","Button","TablePagination","React","Component","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","useTranslation","withTranslation","Trans","healthOrgRegisterRound","handleCancelRegistration","searchEQAPlanningByPage","searchByPage","moment","Breadcrumb","ConfirmationDialog","Helmet","Link","SearchIcon","EQAHealthOrgPlanningRegisterDialog","searchByPageEQARound","Autocomplete","toast","configure","MaterialButton","props","t","i18n","item","onSelect","color","EQAPlanningActiveFrom","state","rowsPerPage","page","data","totalElements","itemList","shouldOpenEditorDialog","shouldOpenConfirmationDialog","shouldOpenConfirmationDeleteAllDialog","shouldOpenHealthOrgRegisterDialog","isRunning","text","listEQARound","round","planning","handleKeyDownEnterSearch","e","key","search","updatePageData","searchObject","planningId","id","pageIndex","pageSize","then","setState","content","setPage","setRowsPerPage","event","target","value","handleChangePage","newPage","rowData","handleHealthOrgRegisterDialogClose","handleTextChange","bind","columns","title","field","align","width","headerStyle","minWidth","paddingLeft","paddingRight","textAlign","cellStyle","render","year","parseFloat","startDate","format","endDate","handleDialogClose","handleConfirmationResponse","row","rows","list","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","padding","toolbar","Toolbar","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import {\r\n  InputAdornment,\r\n  Input,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Button,\r\n  TablePagination\r\n} from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport MaterialTable, {\r\n  MTableToolbar,\r\n  Chip,\r\n  MTableBody,\r\n  MTableHeader\r\n} from \"material-table\";\r\nimport { useTranslation, withTranslation, Trans } from \"react-i18next\";\r\nimport {\r\n  healthOrgRegisterRound,\r\n  handleCancelRegistration,\r\n  searchEQAPlanningByPage as searchByPage\r\n} from \"./HealthOrgRegisterFormService\";\r\nimport moment from \"moment\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport EQAHealthOrgPlanningRegisterDialog from \"./EQAHealthOrgPlanningRegisterDialog\";\r\nimport { searchByPage as searchByPageEQARound } from \"../EQARound/EQARoundService\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\ntoast.configure();\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        onClick={() => props.onSelect(item, 0)}\r\n        title=\"Đăng ký tham gia\"\r\n      >\r\n        <span class=\"material-icons\" style={{ color: \"#7467ef\" }}>\r\n          add_circle\r\n          </span>\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\nclass EQAPlanningActiveFrom extends React.Component {\r\n  state = {\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    data: [],\r\n    totalElements: 0,\r\n    itemList: [],\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    shouldOpenConfirmationDeleteAllDialog: false,\r\n    shouldOpenHealthOrgRegisterDialog: false,\r\n    isRunning: true,\r\n    text: \"\",\r\n    listEQARound: [],\r\n    round: null,\r\n    planning: null,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTextChange = this.handleTextChange.bind(this);\r\n  }\r\n\r\n  handleTextChange(event) {\r\n    this.setState({ text: event.target.value });\r\n  }\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  search() {\r\n    var searchObject = {};\r\n    searchObject.text = this.state.text;\r\n    if (this.state.planning != null) {\r\n      searchObject.planningId = this.state.planning.id;\r\n    }\r\n    searchObject.pageIndex = this.state.page;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchObject.isRunning = this.state.isRunning;\r\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(\r\n      ({ data }) => {\r\n        this.setState({\r\n          itemList: [...data.content],\r\n          totalElements: data.totalElements\r\n        });\r\n      }\r\n    );\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ value: event.target.value });\r\n  }\r\n  componentDidMount() {\r\n    // let searchObject = { pageIndex: 0, pageSize: 1000000 };\r\n    // searchByPageEQARound(searchObject).then(({ data }) => {\r\n    //   if (data != null && data.content.length > 0) {\r\n    //     this.setState({ listEQARound: [...data.content] }, () => {});\r\n    //   }\r\n    // });\r\n    this.updatePageData();\r\n  }\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    searchObject.text = this.state.text;\r\n    if (this.state.planning != null) {\r\n      searchObject.planningId = this.state.planning.id;\r\n    }\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchObject.isRunning = this.state.isRunning;\r\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(\r\n      ({ data }) => {\r\n        this.setState({\r\n          itemList: [...data.content],\r\n          totalElements: data.totalElements\r\n        });\r\n      }\r\n    );\r\n  };\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n  healthOrgRegisterRound = rowData => {\r\n    this.setState(\r\n      { shouldOpenHealthOrgRegisterDialog: true, planning: rowData },\r\n      function () { }\r\n    );\r\n  };\r\n  handleHealthOrgRegisterDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenHealthOrgRegisterDialog: false\r\n    });\r\n  };\r\n  // handleFilterEQARound = (event, round, reason, details) => {\r\n  //   if (round != null && round.id != null) {\r\n  //     let searchObject = {};\r\n  //     searchObject.roundId = round.id;\r\n  //     searchObject.isRunning = this.state.isRunning;\r\n  //     searchObject.pageIndex = this.state.page;\r\n  //     searchObject.pageSize = this.state.rowsPerPage;\r\n  //     searchByPage(searchObject).then(({ data }) => {\r\n  //       this.setState({\r\n  //         itemList: [...data.content],\r\n  //         totalElements: data.totalElements,\r\n  //         round: round\r\n  //       });\r\n  //     });\r\n  //     if (reason == \"clear\") {\r\n  //       this.setState({ round: null });\r\n  //     }\r\n  //   } else {\r\n  //     this.setState({ round: null }, () => {\r\n  //       let searchObject = {};\r\n  //       searchObject.isRunning = this.state.isRunning;\r\n  //       searchObject.pageIndex = this.state.page;\r\n  //       searchObject.pageSize = this.state.rowsPerPage;\r\n  //       searchByPage(searchObject).then(({ data }) => {\r\n  //         this.setState({\r\n  //           itemList: [...data.content],\r\n  //           totalElements: data.totalElements,\r\n  //           round: round\r\n  //         });\r\n  //       });\r\n  //     });\r\n  //   }\r\n  // };\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    const { text, shouldOpenHealthOrgRegisterDialog } = this.state;\r\n    let { listEQARound, planning } = this.state;\r\n    let columns = [\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"100\",\r\n        headerStyle: {\r\n          minWidth: \"80px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"80px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => (\r\n          <Button\r\n            // className=\"mb-16 mr-16 align-bottom\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            title={t(\"AllocationSampleSet.ViewDetailOrg\")}\r\n            onClick={() => {\r\n              this.healthOrgRegisterRound(rowData);\r\n            }}\r\n          >\r\n            {t(\"general.register\")}\r\n          </Button>\r\n        )\r\n      },\r\n\r\n      // {\r\n      //   title: t(\"stt\"),\r\n      //   width: \"150\",\r\n      //   align: \"left\",\r\n      //   headerStyle: {\r\n      //     minWidth: \"75px\",\r\n      //     paddingLeft: \"0px\",\r\n      //     paddingRight: \"0px\",\r\n      //   },\r\n      //   cellStyle: {\r\n      //     minWidth: \"75px\",\r\n      //     paddingLeft: \"0px\",\r\n      //     paddingRight: \"0px\",\r\n      //     textAlign: \"left\",\r\n      //   },\r\n      //   render: rowData => rowData.tableData.id + 1\r\n      // },\r\n      {\r\n        title: t(\"Year\"), field: \"name\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"100px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"100px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData => rowData.year ? (\r\n        <span>\r\n          {rowData.year}  -  {parseFloat(rowData.year) + 1 }\r\n        </span>) : \"\"\r\n      },\r\n      {\r\n        title: t(\"EQARound.registrationStartDate\"),\r\n        field: \"\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          rowData.startDate ? (\r\n            <span>\r\n              {moment(rowData.startDate).format(\"DD/MM/YYYY HH:mm\")}\r\n            </span>\r\n          ) : (\r\n              \"\"\r\n            )\r\n      },\r\n      {\r\n        title: t(\"EQARound.registrationExpiryDate\"),\r\n        field: \"\",\r\n        align: \"left\",\r\n        width: \"150\",\r\n        headerStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth: \"200px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        },\r\n        render: rowData =>\r\n          rowData.endDate ? (\r\n            <span>\r\n              {moment(rowData.endDate).format(\r\n                \"DD/MM/YYYY HH:mm\"\r\n              )}\r\n            </span>\r\n          ) : (\r\n              \"\"\r\n            )\r\n      },\r\n\r\n    ];\r\n    return (\r\n      <Grid container spacing={2} className={\"flex-end\"}>\r\n        <Helmet>\r\n          <title>\r\n            {t(\"EQAHealthOrgRoundRegister.titlePage\")} | {t(\"web_site\")}\r\n          </title>\r\n        </Helmet>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {this.state.shouldOpenHealthOrgRegisterDialog && (\r\n              <EQAHealthOrgPlanningRegisterDialog\r\n                t={t}\r\n                i18n={i18n}\r\n                handleClose={this.handleHealthOrgRegisterDialogClose}\r\n                open={this.state.shouldOpenHealthOrgRegisterDialog}\r\n                item={this.state.planning}\r\n              />\r\n            )}\r\n            {this.state.shouldOpenConfirmationDialog && (\r\n              <ConfirmationDialog\r\n                title={t(\"confirm\")}\r\n                open={this.state.shouldOpenConfirmationDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleConfirmationResponse}\r\n                text={t(\"DeleteConfirm\")}\r\n              />\r\n            )}\r\n          </div>\r\n          <MaterialTable\r\n            data={this.state.itemList}\r\n            columns={columns}\r\n            parentChildData={(row, rows) => {\r\n              var list = rows.find(a => a.id === row.parentId);\r\n              return list;\r\n            }}\r\n            options={{\r\n              selection: false,\r\n              actionsColumnIndex: -1,\r\n              paging: false,\r\n              search: false,\r\n              rowStyle: (rowData, index) => ({\r\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n              }),\r\n              maxBodyHeight: '450px',\r\n              minBodyHeight: '370px',\r\n              headerStyle: {\r\n                backgroundColor: '#358600',\r\n                color: '#fff',\r\n              },\r\n              padding: 'dense',\r\n              toolbar: false\r\n            }}\r\n            components={{\r\n              Toolbar: props => <MTableToolbar {...props} />\r\n            }}\r\n            onSelectionChange={rows => {\r\n              this.data = rows;\r\n            }}\r\n            localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n          />\r\n          <TablePagination\r\n            align=\"left\"\r\n            className=\"px-16\"\r\n            rowsPerPageOptions={[1, 2, 3, 5, 10, 25]}\r\n            component=\"div\"\r\n            labelRowsPerPage={t('general.rows_per_page')}\r\n            labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n            count={this.state.totalElements}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            page={this.state.page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\"\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\"\r\n            }}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.setRowsPerPage}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\nexport default EQAPlanningActiveFrom;\r\n"]},"metadata":{},"sourceType":"module"}