{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n}; // Copyright (c) 2016 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\nimport PropTypes from 'prop-types';\n/**\n * Get the dimensions of the component for the future use.\n * @param {Object} props Props.\n * @param {Object} defaultMargins Object with default margins.\n * @returns {Object} Dimensions of the component.\n */\n\nexport function getInnerDimensions(props, defaultMargins) {\n  var margin = props.margin,\n      width = props.width,\n      height = props.height;\n\n  var marginProps = _extends({}, defaultMargins, typeof margin === 'number' ? {\n    left: margin,\n    right: margin,\n    top: margin,\n    bottom: margin\n  } : margin);\n\n  var _marginProps$left = marginProps.left,\n      marginLeft = _marginProps$left === undefined ? 0 : _marginProps$left,\n      _marginProps$top = marginProps.top,\n      marginTop = _marginProps$top === undefined ? 0 : _marginProps$top,\n      _marginProps$right = marginProps.right,\n      marginRight = _marginProps$right === undefined ? 0 : _marginProps$right,\n      _marginProps$bottom = marginProps.bottom,\n      marginBottom = _marginProps$bottom === undefined ? 0 : _marginProps$bottom;\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop,\n    marginRight: marginRight,\n    marginBottom: marginBottom,\n    innerHeight: height - marginBottom - marginTop,\n    innerWidth: width - marginLeft - marginRight\n  };\n}\n/**\n * Calculate the margin of the sunburst,\n * so it can be at the center of the container\n * @param  {Number} width - the width of the container\n * @param  {Number} height - the height of the container\n * @param  {Number} radius - the max radius of the sunburst\n * @return {Object} an object includes {bottom, left, right, top}\n */\n\nexport function getRadialLayoutMargin(width, height, radius) {\n  var marginX = width / 2 - radius;\n  var marginY = height / 2 - radius;\n  return {\n    bottom: marginY,\n    left: marginX,\n    right: marginX,\n    top: marginY\n  };\n}\nexport var MarginPropType = PropTypes.oneOfType([PropTypes.shape({\n  left: PropTypes.number,\n  top: PropTypes.number,\n  right: PropTypes.number,\n  bottom: PropTypes.number\n}), PropTypes.number]);\nexport var DEFAULT_MARGINS = {\n  left: 40,\n  right: 10,\n  top: 10,\n  bottom: 40\n};","map":null,"metadata":{},"sourceType":"module"}