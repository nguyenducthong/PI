{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport Mock from \"../mock\";\nimport * as _ from \"lodash\";\nimport ConstantList from \"../../app/appConfig\";\nvar TodoDB = {\n  todo: [{\n    id: 1,\n    title: \"API problem\",\n    note: \"API is malfunctioning. kindly fix it\",\n    important: true,\n    starred: true,\n    done: false,\n    read: false,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1, 2]\n  }, {\n    id: 2,\n    title: \"Mobile problem\",\n    note: \"Mobile is malfunctioning. fix it\",\n    important: false,\n    starred: false,\n    done: true,\n    read: true,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [2]\n  }, {\n    id: 3,\n    title: \"API problem\",\n    note: \"API is malfunctioning. fix it\",\n    important: false,\n    starred: false,\n    done: true,\n    read: false,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1]\n  }, {\n    id: 4,\n    title: \"API problem\",\n    note: \"API is malfunctioning. fix it\",\n    important: false,\n    starred: false,\n    done: false,\n    read: true,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1, 2, 3]\n  }, {\n    id: 5,\n    title: \"API problem\",\n    note: \"API is malfunctioning. fix it\",\n    important: false,\n    starred: false,\n    done: true,\n    read: false,\n    selected: false,\n    startDate: new Date().toISOString(),\n    dueDate: new Date().toISOString(),\n    tag: [1]\n  }],\n  tag: [{\n    id: 1,\n    name: \"frontend\"\n  }, {\n    id: 2,\n    name: \"backend\"\n  }, {\n    id: 3,\n    name: \"API\"\n  }, {\n    id: 4,\n    name: \"issue\"\n  }, {\n    id: 5,\n    name: \"mobile\"\n  }]\n};\nMock.onGet(ConstantList.ROOT_PATH + \"api/todo/all\").reply(function (config) {\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onGet(ConstantList.ROOT_PATH + \"api/todo/tag\").reply(function (config) {\n  var response = TodoDB.tag;\n  return [200, response];\n});\nMock.onGet(ConstantList.ROOT_PATH + \"api/todo\").reply(function (config) {\n  var id = parseInt(config.data);\n  var response = TodoDB.todo.find(function (todo) {\n    return todo.id === id;\n  });\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/todo/reorder\").reply(function (config) {\n  var _JSON$parse = JSON.parse(config.data),\n      todoList = _JSON$parse.todoList;\n\n  TodoDB.todo = _toConsumableArray(todoList);\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/todo/add\").reply(function (config) {\n  var _JSON$parse2 = JSON.parse(config.data),\n      todo = _JSON$parse2.todo;\n\n  TodoDB.todo.push(_objectSpread({}, todo));\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/todo/tag/add\").reply(function (config) {\n  var _JSON$parse3 = JSON.parse(config.data),\n      tag = _JSON$parse3.tag;\n\n  TodoDB.tag.push(_objectSpread({}, tag));\n  var response = TodoDB.tag;\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/todo/update\").reply(function (config) {\n  var _JSON$parse4 = JSON.parse(config.data),\n      todo = _JSON$parse4.todo;\n\n  TodoDB.todo.map(function (t, index) {\n    if (t.id === todo.id) {\n      TodoDB.todo[index] = _objectSpread({}, todo);\n    }\n\n    return \"dummy value\";\n  });\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/todo/delete\").reply(function (config) {\n  var _JSON$parse5 = JSON.parse(config.data),\n      todo = _JSON$parse5.todo;\n\n  _.remove(TodoDB.todo, function (t) {\n    return t.id === todo.id;\n  });\n\n  var response = TodoDB.todo;\n  return [200, response];\n});\nMock.onPost(ConstantList.ROOT_PATH + \"api/todo/tag/delete\").reply(function (config) {\n  var _JSON$parse6 = JSON.parse(config.data),\n      tag = _JSON$parse6.tag;\n\n  _.remove(TodoDB.tag, function (t) {\n    return t.id === tag.id;\n  });\n\n  var response = TodoDB.tag;\n  return [200, response];\n}); // Mock.onPost(ConstantList.ROOT_PATH+\"api/chat/create-chat-room\").reply(config => {\n//   let data = JSON.parse(config.data);\n//   let { id, chatId, ...rest } = data;\n//   ChatDB.user.map(user => {\n//     if (id === user.id) {\n//       user.chatInfo.push({ chatId, ...rest });\n//     }\n//   });\n//   ChatDB.chatCollection.push({\n//     id: chatId,\n//     chats: []\n//   });\n//   let temp;\n//   let response = ChatDB.user\n//     .find(user => user.id === id)\n//     .chatInfo.map(contact => {\n//       temp = ChatDB.contacts.find(user => user.id === contact.contactId);\n//       return { ...temp, ...contact };\n//     });\n//   response = _.orderBy(response, [\"lastChatTime\"], [\"desc\"]);\n//   console.log(response);\n//   return [200, response];\n// });","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/fake-db/db/todos.js"],"names":["Mock","_","ConstantList","TodoDB","todo","id","title","note","important","starred","done","read","selected","startDate","Date","toISOString","dueDate","tag","name","onGet","ROOT_PATH","reply","config","response","parseInt","data","find","onPost","JSON","parse","todoList","push","map","t","index","remove"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,CACJ;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,IAAI,EAAE,sCAHR;AAIEC,IAAAA,SAAS,EAAE,IAJb;AAKEC,IAAAA,OAAO,EAAE,IALX;AAMEC,IAAAA,IAAI,EAAE,KANR;AAOEC,IAAAA,IAAI,EAAE,KAPR;AAQEC,IAAAA,QAAQ,EAAE,KARZ;AASEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EATb;AAUEC,IAAAA,OAAO,EAAE,IAAIF,IAAJ,GAAWC,WAAX,EAVX;AAYEE,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ;AAZP,GADI,EAeJ;AACEZ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,gBAFT;AAGEC,IAAAA,IAAI,EAAE,kCAHR;AAIEC,IAAAA,SAAS,EAAE,KAJb;AAKEC,IAAAA,OAAO,EAAE,KALX;AAMEC,IAAAA,IAAI,EAAE,IANR;AAOEC,IAAAA,IAAI,EAAE,IAPR;AAQEC,IAAAA,QAAQ,EAAE,KARZ;AASEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EATb;AAUEC,IAAAA,OAAO,EAAE,IAAIF,IAAJ,GAAWC,WAAX,EAVX;AAYEE,IAAAA,GAAG,EAAE,CAAC,CAAD;AAZP,GAfI,EA6BJ;AACEZ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,IAAI,EAAE,+BAHR;AAIEC,IAAAA,SAAS,EAAE,KAJb;AAKEC,IAAAA,OAAO,EAAE,KALX;AAMEC,IAAAA,IAAI,EAAE,IANR;AAOEC,IAAAA,IAAI,EAAE,KAPR;AAQEC,IAAAA,QAAQ,EAAE,KARZ;AASEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EATb;AAUEC,IAAAA,OAAO,EAAE,IAAIF,IAAJ,GAAWC,WAAX,EAVX;AAYEE,IAAAA,GAAG,EAAE,CAAC,CAAD;AAZP,GA7BI,EA2CJ;AACEZ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,IAAI,EAAE,+BAHR;AAIEC,IAAAA,SAAS,EAAE,KAJb;AAKEC,IAAAA,OAAO,EAAE,KALX;AAMEC,IAAAA,IAAI,EAAE,KANR;AAOEC,IAAAA,IAAI,EAAE,IAPR;AAQEC,IAAAA,QAAQ,EAAE,KARZ;AASEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EATb;AAUEC,IAAAA,OAAO,EAAE,IAAIF,IAAJ,GAAWC,WAAX,EAVX;AAYEE,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAZP,GA3CI,EAyDJ;AACEZ,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,KAAK,EAAE,aAFT;AAGEC,IAAAA,IAAI,EAAE,+BAHR;AAIEC,IAAAA,SAAS,EAAE,KAJb;AAKEC,IAAAA,OAAO,EAAE,KALX;AAMEC,IAAAA,IAAI,EAAE,IANR;AAOEC,IAAAA,IAAI,EAAE,KAPR;AAQEC,IAAAA,QAAQ,EAAE,KARZ;AASEC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EATb;AAUEC,IAAAA,OAAO,EAAE,IAAIF,IAAJ,GAAWC,WAAX,EAVX;AAYEE,IAAAA,GAAG,EAAE,CAAC,CAAD;AAZP,GAzDI,CADO;AA0EbA,EAAAA,GAAG,EAAE,CACH;AACEZ,IAAAA,EAAE,EAAE,CADN;AAEEa,IAAAA,IAAI,EAAE;AAFR,GADG,EAKH;AACEb,IAAAA,EAAE,EAAE,CADN;AAEEa,IAAAA,IAAI,EAAE;AAFR,GALG,EASH;AACEb,IAAAA,EAAE,EAAE,CADN;AAEEa,IAAAA,IAAI,EAAE;AAFR,GATG,EAaH;AACEb,IAAAA,EAAE,EAAE,CADN;AAEEa,IAAAA,IAAI,EAAE;AAFR,GAbG,EAiBH;AACEb,IAAAA,EAAE,EAAE,CADN;AAEEa,IAAAA,IAAI,EAAE;AAFR,GAjBG;AA1EQ,CAAf;AAkGAlB,IAAI,CAACmB,KAAL,CAAWjB,YAAY,CAACkB,SAAb,GAAuB,cAAlC,EAAkDC,KAAlD,CAAwD,UAAAC,MAAM,EAAI;AAChE,MAAMC,QAAQ,GAAGpB,MAAM,CAACC,IAAxB;AACA,SAAO,CAAC,GAAD,EAAMmB,QAAN,CAAP;AACD,CAHD;AAKAvB,IAAI,CAACmB,KAAL,CAAWjB,YAAY,CAACkB,SAAb,GAAuB,cAAlC,EAAkDC,KAAlD,CAAwD,UAAAC,MAAM,EAAI;AAChE,MAAMC,QAAQ,GAAGpB,MAAM,CAACc,GAAxB;AACA,SAAO,CAAC,GAAD,EAAMM,QAAN,CAAP;AACD,CAHD;AAKAvB,IAAI,CAACmB,KAAL,CAAWjB,YAAY,CAACkB,SAAb,GAAuB,UAAlC,EAA8CC,KAA9C,CAAoD,UAAAC,MAAM,EAAI;AAC5D,MAAMjB,EAAE,GAAGmB,QAAQ,CAACF,MAAM,CAACG,IAAR,CAAnB;AAEA,MAAMF,QAAQ,GAAGpB,MAAM,CAACC,IAAP,CAAYsB,IAAZ,CAAiB,UAAAtB,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYA,EAAhB;AAAA,GAArB,CAAjB;AACA,SAAO,CAAC,GAAD,EAAMkB,QAAN,CAAP;AACD,CALD;AAOAvB,IAAI,CAAC2B,MAAL,CAAYzB,YAAY,CAACkB,SAAb,GAAuB,kBAAnC,EAAuDC,KAAvD,CAA6D,UAAAC,MAAM,EAAI;AAAA,oBAClDM,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACG,IAAlB,CADkD;AAAA,MAC/DK,QAD+D,eAC/DA,QAD+D;;AAGrE3B,EAAAA,MAAM,CAACC,IAAP,sBAAkB0B,QAAlB;AACA,MAAIP,QAAQ,GAAGpB,MAAM,CAACC,IAAtB;AACA,SAAO,CAAC,GAAD,EAAMmB,QAAN,CAAP;AACD,CAND;AAQAvB,IAAI,CAAC2B,MAAL,CAAYzB,YAAY,CAACkB,SAAb,GAAuB,cAAnC,EAAmDC,KAAnD,CAAyD,UAAAC,MAAM,EAAI;AAAA,qBAClDM,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACG,IAAlB,CADkD;AAAA,MAC3DrB,IAD2D,gBAC3DA,IAD2D;;AAEjED,EAAAA,MAAM,CAACC,IAAP,CAAY2B,IAAZ,mBAAsB3B,IAAtB;AACA,MAAImB,QAAQ,GAAGpB,MAAM,CAACC,IAAtB;AACA,SAAO,CAAC,GAAD,EAAMmB,QAAN,CAAP;AACD,CALD;AAOAvB,IAAI,CAAC2B,MAAL,CAAYzB,YAAY,CAACkB,SAAb,GAAuB,kBAAnC,EAAuDC,KAAvD,CAA6D,UAAAC,MAAM,EAAI;AAAA,qBACvDM,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACG,IAAlB,CADuD;AAAA,MAC/DR,GAD+D,gBAC/DA,GAD+D;;AAErEd,EAAAA,MAAM,CAACc,GAAP,CAAWc,IAAX,mBAAqBd,GAArB;AACA,MAAIM,QAAQ,GAAGpB,MAAM,CAACc,GAAtB;AACA,SAAO,CAAC,GAAD,EAAMM,QAAN,CAAP;AACD,CALD;AAOAvB,IAAI,CAAC2B,MAAL,CAAYzB,YAAY,CAACkB,SAAb,GAAuB,iBAAnC,EAAsDC,KAAtD,CAA4D,UAAAC,MAAM,EAAI;AAAA,qBACrDM,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACG,IAAlB,CADqD;AAAA,MAC9DrB,IAD8D,gBAC9DA,IAD8D;;AAGpED,EAAAA,MAAM,CAACC,IAAP,CAAY4B,GAAZ,CAAgB,UAACC,CAAD,EAAIC,KAAJ,EAAc;AAC5B,QAAID,CAAC,CAAC5B,EAAF,KAASD,IAAI,CAACC,EAAlB,EAAsB;AACpBF,MAAAA,MAAM,CAACC,IAAP,CAAY8B,KAAZ,sBAA0B9B,IAA1B;AACD;;AACD,WAAO,aAAP;AACD,GALD;AAOA,MAAImB,QAAQ,GAAGpB,MAAM,CAACC,IAAtB;AACA,SAAO,CAAC,GAAD,EAAMmB,QAAN,CAAP;AACD,CAZD;AAcAvB,IAAI,CAAC2B,MAAL,CAAYzB,YAAY,CAACkB,SAAb,GAAuB,iBAAnC,EAAsDC,KAAtD,CAA4D,UAAAC,MAAM,EAAI;AAAA,qBACrDM,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACG,IAAlB,CADqD;AAAA,MAC9DrB,IAD8D,gBAC9DA,IAD8D;;AAEpEH,EAAAA,CAAC,CAACkC,MAAF,CAAShC,MAAM,CAACC,IAAhB,EAAsB,UAAA6B,CAAC;AAAA,WAAIA,CAAC,CAAC5B,EAAF,KAASD,IAAI,CAACC,EAAlB;AAAA,GAAvB;;AACA,MAAIkB,QAAQ,GAAGpB,MAAM,CAACC,IAAtB;AACA,SAAO,CAAC,GAAD,EAAMmB,QAAN,CAAP;AACD,CALD;AAOAvB,IAAI,CAAC2B,MAAL,CAAYzB,YAAY,CAACkB,SAAb,GAAuB,qBAAnC,EAA0DC,KAA1D,CAAgE,UAAAC,MAAM,EAAI;AAAA,qBAC1DM,IAAI,CAACC,KAAL,CAAWP,MAAM,CAACG,IAAlB,CAD0D;AAAA,MAClER,GADkE,gBAClEA,GADkE;;AAExEhB,EAAAA,CAAC,CAACkC,MAAF,CAAShC,MAAM,CAACc,GAAhB,EAAqB,UAAAgB,CAAC;AAAA,WAAIA,CAAC,CAAC5B,EAAF,KAASY,GAAG,CAACZ,EAAjB;AAAA,GAAtB;;AACA,MAAIkB,QAAQ,GAAGpB,MAAM,CAACc,GAAtB;AACA,SAAO,CAAC,GAAD,EAAMM,QAAN,CAAP;AACD,CALD,E,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import Mock from \"../mock\";\nimport * as _ from \"lodash\";\nimport ConstantList from \"../../app/appConfig\";\nconst TodoDB = {\n  todo: [\n    {\n      id: 1,\n      title: \"API problem\",\n      note: \"API is malfunctioning. kindly fix it\",\n      important: true,\n      starred: true,\n      done: false,\n      read: false,\n      selected: false,\n      startDate: new Date().toISOString(),\n      dueDate: new Date().toISOString(),\n\n      tag: [1, 2]\n    },\n    {\n      id: 2,\n      title: \"Mobile problem\",\n      note: \"Mobile is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: true,\n      read: true,\n      selected: false,\n      startDate: new Date().toISOString(),\n      dueDate: new Date().toISOString(),\n\n      tag: [2]\n    },\n    {\n      id: 3,\n      title: \"API problem\",\n      note: \"API is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: true,\n      read: false,\n      selected: false,\n      startDate: new Date().toISOString(),\n      dueDate: new Date().toISOString(),\n\n      tag: [1]\n    },\n    {\n      id: 4,\n      title: \"API problem\",\n      note: \"API is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: false,\n      read: true,\n      selected: false,\n      startDate: new Date().toISOString(),\n      dueDate: new Date().toISOString(),\n\n      tag: [1, 2, 3]\n    },\n    {\n      id: 5,\n      title: \"API problem\",\n      note: \"API is malfunctioning. fix it\",\n      important: false,\n      starred: false,\n      done: true,\n      read: false,\n      selected: false,\n      startDate: new Date().toISOString(),\n      dueDate: new Date().toISOString(),\n\n      tag: [1]\n    }\n  ],\n\n  tag: [\n    {\n      id: 1,\n      name: \"frontend\"\n    },\n    {\n      id: 2,\n      name: \"backend\"\n    },\n    {\n      id: 3,\n      name: \"API\"\n    },\n    {\n      id: 4,\n      name: \"issue\"\n    },\n    {\n      id: 5,\n      name: \"mobile\"\n    }\n  ]\n};\n\nMock.onGet(ConstantList.ROOT_PATH+\"api/todo/all\").reply(config => {\n  const response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onGet(ConstantList.ROOT_PATH+\"api/todo/tag\").reply(config => {\n  const response = TodoDB.tag;\n  return [200, response];\n});\n\nMock.onGet(ConstantList.ROOT_PATH+\"api/todo\").reply(config => {\n  const id = parseInt(config.data);\n\n  const response = TodoDB.todo.find(todo => todo.id === id);\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/todo/reorder\").reply(config => {\n  let { todoList } = JSON.parse(config.data);\n\n  TodoDB.todo = [...todoList];\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/todo/add\").reply(config => {\n  let { todo } = JSON.parse(config.data);\n  TodoDB.todo.push({ ...todo });\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/todo/tag/add\").reply(config => {\n  let { tag } = JSON.parse(config.data);\n  TodoDB.tag.push({ ...tag });\n  let response = TodoDB.tag;\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/todo/update\").reply(config => {\n  let { todo } = JSON.parse(config.data);\n\n  TodoDB.todo.map((t, index) => {\n    if (t.id === todo.id) {\n      TodoDB.todo[index] = { ...todo };\n    }\n    return \"dummy value\";\n  });\n\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/todo/delete\").reply(config => {\n  let { todo } = JSON.parse(config.data);\n  _.remove(TodoDB.todo, t => t.id === todo.id);\n  let response = TodoDB.todo;\n  return [200, response];\n});\n\nMock.onPost(ConstantList.ROOT_PATH+\"api/todo/tag/delete\").reply(config => {\n  let { tag } = JSON.parse(config.data);\n  _.remove(TodoDB.tag, t => t.id === tag.id);\n  let response = TodoDB.tag;\n  return [200, response];\n});\n\n// Mock.onPost(ConstantList.ROOT_PATH+\"api/chat/create-chat-room\").reply(config => {\n//   let data = JSON.parse(config.data);\n//   let { id, chatId, ...rest } = data;\n//   ChatDB.user.map(user => {\n//     if (id === user.id) {\n//       user.chatInfo.push({ chatId, ...rest });\n//     }\n//   });\n//   ChatDB.chatCollection.push({\n//     id: chatId,\n//     chats: []\n//   });\n\n//   let temp;\n//   let response = ChatDB.user\n//     .find(user => user.id === id)\n//     .chatInfo.map(contact => {\n//       temp = ChatDB.contacts.find(user => user.id === contact.contactId);\n//       return { ...temp, ...contact };\n//     });\n//   response = _.orderBy(response, [\"lastChatTime\"], [\"desc\"]);\n//   console.log(response);\n\n//   return [200, response];\n// });\n"]},"metadata":{},"sourceType":"module"}