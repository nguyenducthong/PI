{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\IntroduceTheProgram\\\\IntroduceTheProgramDialogMessageContent.jsx\";\nimport React, { Component } from 'react';\nimport { Dialog, Button, Grid, DialogActions, FormControlLabel, Switch, DialogTitle, DialogContent, Icon, IconButton } from \"@material-ui/core\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport { generateRandomId } from \"utils\";\nimport Draggable from \"react-draggable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\nimport EditorForm from \"./EditorForm\";\nimport { addNew, update } from \"./IntroduceTheProgramService\";\nimport IntroduceTheProgramDialogTab from \"./IntroduceTheProgramDialogTab\";\nimport Checkbox from '@material-ui/core/Checkbox';\n\nvar IntroduceTheProgramDialogMessageContent = /*#__PURE__*/function (_Component) {\n  _inherits(IntroduceTheProgramDialogMessageContent, _Component);\n\n  var _super = _createSuper(IntroduceTheProgramDialogMessageContent);\n\n  function IntroduceTheProgramDialogMessageContent() {\n    var _this;\n\n    _classCallCheck(this, IntroduceTheProgramDialogMessageContent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleChangeContent = function (messageContent) {\n      var item = _this.state.item;\n      item[\"messageContent\"] = messageContent;\n\n      _this.setState({\n        item: item\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(IntroduceTheProgramDialogMessageContent, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          open = _this$props.open,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item,\n          isRoleAdmin = _this$props.isRoleAdmin,\n          isView = _this$props.isView;\n      this.setState({\n        item: item\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var t = this.props.t;\n      var item = this.state.item;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-8\",\n        container: true,\n        spacing: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        md: 12,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(EditorForm, {\n        content: item.messageContent ? item.messageContent : \"\",\n        handleChangeContent: this.handleChangeContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return IntroduceTheProgramDialogMessageContent;\n}(Component);\n\nexport default IntroduceTheProgramDialogMessageContent;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/IntroduceTheProgram/IntroduceTheProgramDialogMessageContent.jsx"],"names":["React","Component","Dialog","Button","Grid","DialogActions","FormControlLabel","Switch","DialogTitle","DialogContent","Icon","IconButton","ValidatorForm","TextValidator","generateRandomId","Draggable","Paper","toast","EditorForm","addNew","update","IntroduceTheProgramDialogTab","Checkbox","IntroduceTheProgramDialogMessageContent","handleChangeContent","messageContent","item","state","setState","props","open","handleClose","isRoleAdmin","isView","t"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,aAJJ,EAKIC,gBALJ,EAMIC,MANJ,EAOIC,WAPJ,EAQIC,aARJ,EASIC,IATJ,EAUIC,UAVJ,QAWO,mBAXP;AAYA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,gBAAT,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;AACA,OAAO,mCAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;AACA,OAAOC,4BAAP,MAAyC,gCAAzC;AACA,OAAOC,QAAP,MAAqB,4BAArB;;IAEMC,uC;;;;;;;;;;;;;;;;UAQFC,mB,GAAsB,UAACC,cAAD,EAAoB;AAAA,UAChCC,IADgC,GACvB,MAAKC,KADkB,CAChCD,IADgC;AAEtCA,MAAAA,IAAI,CAAC,gBAAD,CAAJ,GAAyBD,cAAzB;;AACA,YAAKG,QAAL,CAAc;AAAEF,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACH,K;;;;;;;yCAXoB;AAAA,wBACsC,KAAKG,KAD3C;AAAA,UACXC,IADW,eACXA,IADW;AAAA,UACLC,WADK,eACLA,WADK;AAAA,UACQL,IADR,eACQA,IADR;AAAA,UACcM,WADd,eACcA,WADd;AAAA,UAC2BC,MAD3B,eAC2BA,MAD3B;AAEjB,WAAKL,QAAL,CAAc;AACVF,QAAAA,IAAI,EAAEA;AADI,OAAd;AAGH;;;6BAOQ;AAAA,UACCQ,CADD,GACO,KAAKL,KADZ,CACCK,CADD;AAAA,UAECR,IAFD,GAEU,KAAKC,KAFf,CAECD,IAFD;AAGL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAuB,QAAA,SAAS,MAAhC;AAAiC,QAAA,OAAO,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,EAA/B;AAAmC,QAAA,EAAE,EAAE,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AACI,QAAA,OAAO,EAAEA,IAAI,CAACD,cAAL,GAAsBC,IAAI,CAACD,cAA3B,GAA4C,EADzD;AAEI,QAAA,mBAAmB,EAAE,KAAKD,mBAF9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ;AAYH;;;;EA5BiDvB,S;;AA+BtD,eAAesB,uCAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    Grid,\r\n    DialogActions,\r\n    FormControlLabel,\r\n    Switch,\r\n    DialogTitle,\r\n    DialogContent,\r\n    Icon,\r\n    IconButton,\r\n} from \"@material-ui/core\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport { generateRandomId } from \"utils\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"../../../styles/views/_style.scss\";\r\nimport EditorForm from \"./EditorForm\";\r\nimport { addNew, update } from \"./IntroduceTheProgramService\";\r\nimport IntroduceTheProgramDialogTab from \"./IntroduceTheProgramDialogTab\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nclass IntroduceTheProgramDialogMessageContent extends Component {\r\n    componentWillMount() {\r\n        let { open, handleClose, item, isRoleAdmin, isView } = this.props;\r\n        this.setState({\r\n            item: item,\r\n        })\r\n    }\r\n\r\n    handleChangeContent = (messageContent) => {\r\n        let { item } = this.state\r\n        item[\"messageContent\"] = messageContent;\r\n        this.setState({ item: item });\r\n    };\r\n    render() {\r\n        let { t } = this.props;\r\n        let { item } = this.state;\r\n        return (\r\n            <div>\r\n                <Grid className=\"mb-8\" container spacing={4}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                        <EditorForm\r\n                            content={item.messageContent ? item.messageContent : \"\"}\r\n                            handleChangeContent={this.handleChangeContent}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IntroduceTheProgramDialogMessageContent;"]},"metadata":{},"sourceType":"module"}