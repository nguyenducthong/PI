{"ast":null,"code":"import _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrgRoundRegister\\\\EQAHealthOrgRoundRegisterUpdateStatus.jsx\";\nimport React, { Component } from \"react\";\nimport { Dialog, Button, Grid, Input, Icon, IconButton } from \"@material-ui/core\";\nimport { updateSubscriptionStatus } from \"./EQAHealthOrgRoundRegisterService\";\nimport { TabList, Tabs, Tab, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\nimport { toast } from 'react-toastify';\nimport LocalConstants from \"./Constants\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../../styles/views/_style.scss';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction PaperComponent(props) {\n  return /*#__PURE__*/React.createElement(Draggable, {\n    handle: \"#draggable-dialog-title\",\n    cancel: '[class*=\"MuiDialogContent-root\"]',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar EQAHealthOrgRoundRegisterUpdateStatus = /*#__PURE__*/function (_Component) {\n  _inherits(EQAHealthOrgRoundRegisterUpdateStatus, _Component);\n\n  var _super = _createSuper(EQAHealthOrgRoundRegisterUpdateStatus);\n\n  function EQAHealthOrgRoundRegisterUpdateStatus() {\n    var _this;\n\n    _classCallCheck(this, EQAHealthOrgRoundRegisterUpdateStatus);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      status: 0,\n      feeStatus: 0\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n\n      if (source === \"hasResult\") {\n        _this.setState({\n          hasErrorResult: false\n        });\n      }\n    };\n\n    _this.handleFormSubmit = function () {\n      var t = _this.props.t;\n      var _this$state = _this.state,\n          status = _this$state.status,\n          feeStatus = _this$state.feeStatus,\n          healthOrg = _this$state.healthOrg;\n      healthOrg.forEach(function (element) {\n        element.status = status;\n        element.feeStatus = feeStatus;\n      });\n      updateSubscriptionStatus(healthOrg).then(function () {\n        toast.success(t(\"mess_update\")); // this.props.handleOKEditClose();\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAHealthOrgRoundRegisterUpdateStatus, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//let healthOrg = {};\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          handleClose = _this$props.handleClose,\n          item = _this$props.item;\n      this.setState({\n        healthOrg: item\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          status = _this$state2.status,\n          feeStatus = _this$state2.feeStatus;\n      var _this$props2 = this.props,\n          open = _this$props2.open,\n          handleClose = _this$props2.handleClose,\n          handleOKEditClose = _this$props2.handleOKEditClose,\n          t = _this$props2.t,\n          i18n = _this$props2.i18n,\n          item = _this$props2.item;\n      return /*#__PURE__*/React.createElement(Dialog, {\n        scroll: 'paper',\n        open: open,\n        PaperComponent: PaperComponent,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DialogTitle, {\n        style: {\n          cursor: 'move'\n        },\n        id: \"draggable-dialog-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"mb-20 styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }, \" \", t(\"update\") + \" \" + t(\"Status\"), \" \"), /*#__PURE__*/React.createElement(IconButton, {\n        style: {\n          position: \"absolute\",\n          right: \"10px\",\n          top: \"10px\"\n        },\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        color: \"error\",\n        title: t(\"close\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 116\n        }\n      }, \"close\"))), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DialogContent, {\n        dividers: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-16\",\n        container: true,\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"feeStatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 53\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.title\"))), /*#__PURE__*/React.createElement(Select // name=\"feeStatus\"\n      , {\n        value: feeStatus,\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        } // input={<Input id=\"feeStatus\" />}\n        ,\n        inputProps: {\n          id: \"feeStatus\",\n          name: \"feeStatus\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.No\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, t(\"EQAHealthOrgRoundRegister.FeeStatus.Yes\"))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 50\n        }\n      }, t(\"EQAHealthOrgRoundRegister.status\"))), /*#__PURE__*/React.createElement(Select // name=\"status\"\n      , {\n        value: status,\n        defaultValue: {\n          value: 0\n        },\n        onChange: function onChange(event) {\n          return _this2.handleChange(event);\n        } // input={<Input id=\"status\" />}\n        ,\n        inputProps: {\n          id: \"status\",\n          name: \"status\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: LocalConstants.EQAHealthOrgRoundRegister_Value.new,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }, t(\"EQAHealthOrgRoundRegister.Status.New\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: LocalConstants.EQAHealthOrgRoundRegister_Value.confirmed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }\n      }, t(\"EQAHealthOrgRoundRegister.Status.Confirmed\")), /*#__PURE__*/React.createElement(MenuItem, {\n        value: LocalConstants.EQAHealthOrgRoundRegister_Value.cancel_Registration,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }\n      }, t(\"EQAHealthOrgRoundRegister.Status.Cancel_Registration\"))))))), /*#__PURE__*/React.createElement(DialogActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleClose();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }\n      }, t('general.cancel')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      }, t('general.save')))));\n    }\n  }]);\n\n  return EQAHealthOrgRoundRegisterUpdateStatus;\n}(Component);\n\nexport default EQAHealthOrgRoundRegisterUpdateStatus;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrgRoundRegister/EQAHealthOrgRoundRegisterUpdateStatus.jsx"],"names":["React","Component","Dialog","Button","Grid","Input","Icon","IconButton","updateSubscriptionStatus","TabList","Tabs","Tab","TabPanel","toast","LocalConstants","DialogActions","MenuItem","FormControl","ValidatorForm","TextValidator","TextField","Select","InputLabel","Paper","Draggable","DialogContent","DialogTitle","configure","autoClose","draggable","limit","PaperComponent","props","EQAHealthOrgRoundRegisterUpdateStatus","state","status","feeStatus","handleChange","event","source","persist","setState","target","name","value","hasErrorResult","handleFormSubmit","t","healthOrg","forEach","element","then","success","handleClose","item","open","handleOKEditClose","i18n","cursor","position","right","top","overflowY","display","flexDirection","id","EQAHealthOrgRoundRegister_Value","new","confirmed","cancel_Registration"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,KAJF,EAISC,IAJT,EAIeC,UAJf,QAKO,mBALP;AAMA,SACIC,wBADJ,QAES,oCAFT;AAGA,SAAQC,OAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAA0BC,QAA1B,QAAyC,YAAzC;AACA,OAAO,iCAAP;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,SAAvC,QAAwD,kCAAxD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAO,uCAAP;AACA,OAAO,mCAAP;AACAb,KAAK,CAACc,SAAN,CAAgB;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,SAAS,EAAE,KAFG;AAGdC,EAAAA,KAAK,EAAC;AAHQ,CAAhB;;AAMA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,sBACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,yBAAlB;AAA4C,IAAA,MAAM,EAAE,kCAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;IAEGC,qC;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,CADJ;AAEJC,MAAAA,SAAS,EAAE;AAFP,K;;UAKNC,Y,GAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChCD,MAAAA,KAAK,CAACE,OAAN;;AACA,YAAKC,QAAL,CAAc;AACZ,SAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAqBL,KAAK,CAACI,MAAN,CAAaE;AADtB,OAAd;;AAGD,UAAGL,MAAM,KAAK,WAAd,EAA0B;AACzB,cAAKE,QAAL,CAAc;AAACI,UAAAA,cAAc,EAAE;AAAjB,SAAd;AACA;AAED,K;;UAEDC,gB,GAAmB,YAAM;AAAA,UACjBC,CADiB,GACX,MAAKf,KADM,CACjBe,CADiB;AAAA,wBAEgB,MAAKb,KAFrB;AAAA,UAEjBC,MAFiB,eAEjBA,MAFiB;AAAA,UAETC,SAFS,eAETA,SAFS;AAAA,UAEEY,SAFF,eAEEA,SAFF;AAGvBA,MAAAA,SAAS,CAACC,OAAV,CAAkB,UAAAC,OAAO,EAAI;AACzBA,QAAAA,OAAO,CAACf,MAAR,GAAiBA,MAAjB;AACAe,QAAAA,OAAO,CAACd,SAAR,GAAoBA,SAApB;AACH,OAHD;AAKA5B,MAAAA,wBAAwB,CAACwC,SAAD,CAAxB,CAAoCG,IAApC,CAAyC,YAAK;AAC1CtC,QAAAA,KAAK,CAACuC,OAAN,CAAcL,CAAC,CAAC,aAAD,CAAf,EAD0C,CAE1C;AACH,OAHD;AAID,K;;;;;;;wCAEgB,CACf;AAEH;;;yCACoB;AAAA,wBACW,KAAKf,KADhB;AAAA,UACXqB,WADW,eACXA,WADW;AAAA,UACEC,IADF,eACEA,IADF;AAEjB,WAAKb,QAAL,CAAc;AACZO,QAAAA,SAAS,EAAGM;AADA,OAAd;AAID;;;6BAEM;AAAA;;AAAA,yBAIA,KAAKpB,KAJL;AAAA,UAEDC,MAFC,gBAEDA,MAFC;AAAA,UAGDC,SAHC,gBAGDA,SAHC;AAAA,yBAKyD,KAAKJ,KAL9D;AAAA,UAKCuB,IALD,gBAKCA,IALD;AAAA,UAKOF,WALP,gBAKOA,WALP;AAAA,UAKoBG,iBALpB,gBAKoBA,iBALpB;AAAA,UAKuCT,CALvC,gBAKuCA,CALvC;AAAA,UAK0CU,IAL1C,gBAK0CA,IAL1C;AAAA,UAKgDH,IALhD,gBAKgDA,IALhD;AAOL,0BACI,oBAAC,MAAD;AACI,QAAA,MAAM,EAAE,OADZ;AAEI,QAAA,IAAI,EAAEC,IAFV;AAGI,QAAA,cAAc,EAAExB,cAHpB;AAII,QAAA,QAAQ,EAAE,IAJd;AAKI,QAAA,SAAS,EAAE,IALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOA,oBAAC,WAAD;AAAa,QAAA,KAAK,EAAE;AAAE2B,UAAAA,MAAM,EAAE;AAAV,SAApB;AAAwC,QAAA,EAAE,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAM,QAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAqCX,CAAC,CAAC,QAAD,CAAD,GAAa,GAAb,GAAmBA,CAAC,CAAC,QAAD,CAAzD,MADA,eAEA,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAAEY,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,KAAK,EAAE,MAA/B;AAAuCC,UAAAA,GAAG,EAAE;AAA5C,SAAnB;AAAyE,QAAA,OAAO,EAAE;AAAA,iBAAMR,WAAW,EAAjB;AAAA,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAuG,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AACrG,QAAA,KAAK,EAAEN,CAAC,CAAC,OAAD,CAD6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAvG,CAFA,CAPA,eAeA,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAE,KAAKD,gBAAzC;AACA,QAAA,KAAK,EAAE;AACHgB,UAAAA,SAAS,EAAE,MADR;AAEHC,UAAAA,OAAO,EAAE,MAFN;AAGHC,UAAAA,aAAa,EAAE;AAHZ,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMA,oBAAC,aAAD;AAAe,QAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAwB,QAAA,SAAS,MAAjC;AAAkC,QAAA,OAAO,EAAE,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,OAAvB;AAA+B,QAAA,IAAI,EAAC,OAApC;AAA4C,QAAA,OAAO,EAAG,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgC;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBjB,CAAC,CAAC,2CAAD,CAAzB,CAAhC,CADA,eAEA,oBAAC,MAAD,CACI;AADJ;AAEI,QAAA,KAAK,EAAEX,SAFX;AAGI,QAAA,QAAQ,EAAE,kBAAAE,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,SAHnB,CAII;AAJJ;AAKI,QAAA,UAAU,EAAE;AACV2B,UAAAA,EAAE,EAAE,WADM;AAEVtB,UAAAA,IAAI,EAAE;AAFI,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAUI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBI,CAAC,CAAC,wCAAD,CAAtB,CAVJ,eAWI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBA,CAAC,CAAC,yCAAD,CAAtB,CAXJ,CAFA,CADJ,CADA,eAmBA,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,OAAvB;AAA+B,QAAA,IAAI,EAAC,OAApC;AAA4C,QAAA,OAAO,EAAG,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,UAAD;AAAY,QAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA6B;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwBA,CAAC,CAAC,kCAAD,CAAzB,CAA7B,CADA,eAEA,oBAAC,MAAD,CACI;AADJ;AAEI,QAAA,KAAK,EAAEZ,MAFX;AAGI,QAAA,YAAY,EAAE;AAAES,UAAAA,KAAK,EAAE;AAAT,SAHlB;AAII,QAAA,QAAQ,EAAE,kBAAAN,KAAK;AAAA,iBAAI,MAAI,CAACD,YAAL,CAAkBC,KAAlB,CAAJ;AAAA,SAJnB,CAKI;AALJ;AAMI,QAAA,UAAU,EAAE;AACV2B,UAAAA,EAAE,EAAE,QADM;AAEVtB,UAAAA,IAAI,EAAE;AAFI,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAWI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAG7B,cAAc,CAACoD,+BAAf,CAA+CC,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuEpB,CAAC,CAAC,sCAAD,CAAxE,CAXJ,eAYI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAGjC,cAAc,CAACoD,+BAAf,CAA+CE,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8ErB,CAAC,CAAC,4CAAD,CAA/E,CAZJ,eAaI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAGjC,cAAc,CAACoD,+BAAf,CAA+CG,mBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwFtB,CAAC,CAAC,sDAAD,CAAzF,CAbJ,CAFA,CADJ,CAnBA,CADJ,CANA,eAiDA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AACA,QAAA,SAAS,EAAC,oBADV;AAEA,QAAA,OAAO,EAAC,WAFR;AAGA,QAAA,KAAK,EAAC,WAHN;AAIA,QAAA,OAAO,EAAE;AAAA,iBAAMM,WAAW,EAAjB;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAI+BN,CAAC,CAAC,gBAAD,CAJhC,CADJ,eAOI,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,oBAAlB;AACA,QAAA,OAAO,EAAC,WADR;AAEA,QAAA,KAAK,EAAC,SAFN;AAGA,QAAA,IAAI,EAAC,QAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAICA,CAAC,CAAC,cAAD,CAJF,CAPJ,CAjDA,CAfA,CADJ;AAkFH;;;;EApIgD9C,S;;AAuIrD,eAAegC,qCAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  Grid,\r\n  Input, Icon, IconButton\r\n} from \"@material-ui/core\";\r\nimport {\r\n    updateSubscriptionStatus\r\n  } from \"./EQAHealthOrgRoundRegisterService\";\r\nimport {TabList,Tabs, Tab,TabPanel} from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport { toast } from 'react-toastify';\r\nimport LocalConstants from \"./Constants\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { ValidatorForm, TextValidator, TextField } from \"react-material-ui-form-validator\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../styles/views/_style.scss';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\n\r\nfunction PaperComponent(props) {\r\n    return (\r\n      <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n        <Paper {...props} />\r\n      </Draggable>\r\n    );\r\n  }\r\n\r\nclass EQAHealthOrgRoundRegisterUpdateStatus  extends Component{\r\n    state = {\r\n        status: 0,\r\n        feeStatus: 0\r\n\r\n      };\r\n      handleChange = (event, source) => {\r\n        event.persist();\r\n        this.setState({\r\n          [event.target.name]: event.target.value\r\n        });\r\n       if(source === \"hasResult\"){\r\n        this.setState({hasErrorResult: false});\r\n       }\r\n   \r\n      };\r\n\r\n      handleFormSubmit = () => {\r\n        let { t } = this.props;\r\n        let { status, feeStatus, healthOrg }=  this.state;\r\n        healthOrg.forEach(element => {\r\n            element.status = status;\r\n            element.feeStatus = feeStatus;\r\n        });\r\n\r\n        updateSubscriptionStatus(healthOrg).then(() =>{\r\n            toast.success(t(\"mess_update\"));\r\n            // this.props.handleOKEditClose();\r\n        })\r\n      };\r\n\r\n    componentDidMount(){\r\n        //let healthOrg = {};\r\n        \r\n    }\r\n    componentWillMount() {\r\n        let { handleClose, item } = this.props;\r\n        this.setState({\r\n          healthOrg : item\r\n        });\r\n\r\n      }\r\n\r\n    render() {\r\n        let {\r\n            status,\r\n            feeStatus,\r\n        } =  this.state;\r\n        let { open, handleClose, handleOKEditClose, t, i18n, item } = this.props;\r\n\r\n        return (\r\n            <Dialog \r\n                scroll={'paper'} \r\n                open={open} \r\n                PaperComponent={PaperComponent} \r\n                maxWidth={\"sm\"}\r\n                fullWidth={true}\r\n                >\r\n            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n            <span className=\"mb-20 styleColor\"> {t(\"update\")+ \" \" + t(\"Status\")} </span>\r\n            <IconButton style={{ position: \"absolute\", right: \"10px\", top: \"10px\" }} onClick={() => handleClose()}><Icon color=\"error\"\r\n              title={t(\"close\")}>\r\n              close\r\n            </Icon>\r\n            </IconButton>\r\n            </DialogTitle>\r\n            <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}\r\n            style={{\r\n                overflowY: \"auto\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\"\r\n            }}>\r\n            <DialogContent dividers>\r\n                <Grid className=\"mb-16\" container spacing={2}>\r\n                <Grid item sm={12} xs={12}>\r\n                    <FormControl className=\"w-100\" size=\"small\" variant = \"outlined\">\r\n                    <InputLabel htmlFor=\"feeStatus\"><span className=\"font\">{t(\"EQAHealthOrgRoundRegister.FeeStatus.title\")}</span></InputLabel>\r\n                    <Select\r\n                        // name=\"feeStatus\"\r\n                        value={feeStatus}\r\n                        onChange={event => this.handleChange(event)}\r\n                        // input={<Input id=\"feeStatus\" />}\r\n                        inputProps={{\r\n                          id: \"feeStatus\",\r\n                          name: \"feeStatus\"\r\n                        }}\r\n                    >\r\n                        <MenuItem value={0}>{t(\"EQAHealthOrgRoundRegister.FeeStatus.No\")}</MenuItem>\r\n                        <MenuItem value={1}>{t(\"EQAHealthOrgRoundRegister.FeeStatus.Yes\")}</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item sm={12} xs={12}>\r\n                    <FormControl className=\"w-100\" size=\"small\" variant = \"outlined\">\r\n                    <InputLabel htmlFor=\"status\"><span className=\"font\">{t(\"EQAHealthOrgRoundRegister.status\")}</span></InputLabel>\r\n                    <Select\r\n                        // name=\"status\"\r\n                        value={status}\r\n                        defaultValue={{ value: 0 }}\r\n                        onChange={event => this.handleChange(event)}\r\n                        // input={<Input id=\"status\" />}\r\n                        inputProps={{\r\n                          id: \"status\",\r\n                          name: \"status\"\r\n                        }}\r\n                    >\r\n                        <MenuItem value= {LocalConstants.EQAHealthOrgRoundRegister_Value.new}>{t(\"EQAHealthOrgRoundRegister.Status.New\")}</MenuItem>\r\n                        <MenuItem value= {LocalConstants.EQAHealthOrgRoundRegister_Value.confirmed} >{t(\"EQAHealthOrgRoundRegister.Status.Confirmed\")}</MenuItem>\r\n                        <MenuItem value= {LocalConstants.EQAHealthOrgRoundRegister_Value.cancel_Registration} >{t(\"EQAHealthOrgRoundRegister.Status.Cancel_Registration\")}</MenuItem>\r\n                    </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                \r\n                </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button\r\n                className=\"mr-36 align-bottom\"\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => handleClose()}>{t('general.cancel')}\r\n                </Button>\r\n                <Button className=\"mr-16 align-bottom\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\">\r\n                {t('general.save')}\r\n                </Button>\r\n            </DialogActions>\r\n            </ValidatorForm>\r\n      </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EQAHealthOrgRoundRegisterUpdateStatus;"]},"metadata":{},"sourceType":"module"}