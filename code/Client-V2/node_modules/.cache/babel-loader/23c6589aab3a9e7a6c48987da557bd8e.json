{"ast":null,"code":"import _slicedToArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\Reagent\\\\Tabs.jsx\";\nimport ConstantList from \"../../appConfig\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport HelpIcon from '@material-ui/icons/Help';\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket';\nimport ThumbDown from '@material-ui/icons/ThumbDown';\nimport ThumbUp from '@material-ui/icons/ThumbUp';\nimport moment from \"moment\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { Helmet } from 'react-helmet';\nimport Fab from \"@material-ui/core/Fab\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Typography, Tabs, Box, Tab, AppBar, TextField, Checkbox, FormLabel, Button, Grid, FormControlLabel, IconButton, Icon, FormControl, RadioGroup, Radio, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport QRCode from 'qrcode.react';\nimport { MuiPickersUtilsProvider, DateTimePicker, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport AsynchronousAutocomplete from '../utilities/AsynchronousAutocomplete';\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport NumberFormat from 'react-number-format';\nimport Card from \"@material-ui/core/Card\";\nimport ReagentInformation from \"./ReagentInformation\";\nvar LightTooltip = withStyles(function (theme) {\n  return {\n    tooltip: {\n      backgroundColor: theme.palette.common.white,\n      color: 'rgba(0, 0, 0, 0.87)',\n      boxShadow: theme.shadows[1],\n      fontSize: 11,\n      position: \"absolute\",\n      top: '-10px',\n      left: '-25px',\n      width: '80px'\n    }\n  };\n})(Tooltip);\n\nfunction MaterialButton(props) {\n  var t = props.t,\n      i18n = props.i18n;\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"delete\")));\n}\n\nfunction NumberFormatCustom(props) {\n  var inputRef = props.inputRef,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"inputRef\", \"onChange\"]);\n\n  return /*#__PURE__*/React.createElement(NumberFormat, Object.assign({}, other, {\n    getInputRef: inputRef,\n    onValueChange: function onValueChange(values) {\n      props.onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    name: props.name,\n    value: props.value,\n    thousandSeparator: true,\n    isNumericString: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }));\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nfunction TabPanel(props) {\n  var children = props.children,\n      value = props.value,\n      index = props.index,\n      other = _objectWithoutProperties(props, [\"children\", \"value\", \"index\"]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: \"scrollable-force-tabpanel-\".concat(index),\n    \"aria-labelledby\": \"scrollable-force-tab-\".concat(index)\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, children))));\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: \"scrollable-force-tab-\".concat(index),\n    'aria-controls': \"scrollable-force-tabpanel-\".concat(index)\n  };\n}\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      width: '100%',\n      backgroundColor: theme.palette.background.paper\n    },\n    textHeader: {\n      fontSize: '0.75rem'\n    }\n  };\n});\nexport default function CreateStaff(props) {\n  var t = props.t;\n  var i18n = props.i18n;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState({}),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      item = _React$useState4[0],\n      setItem = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      v = _React$useState6[0],\n      setValueD = _React$useState6[1];\n\n  var handleChangeValue = function handleChangeValue(event, newValue) {\n    setValue(newValue);\n  };\n\n  var searchObject = {\n    pageIndex: 1,\n    pageSize: 1000000\n  };\n  var isEmpty = true;\n\n  if (props.item != null && props.item.files != null) {\n    isEmpty = props.item.files.length === 0;\n\n    if (props.item.logoPath) {\n      isEmpty = false;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    value: value,\n    index: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReagentInformation, {\n    t: t,\n    useStyles: useStyles,\n    item: props.item ? props.item : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/Reagent/Tabs.jsx"],"names":["ConstantList","React","PropTypes","makeStyles","PhoneIcon","FavoriteIcon","PersonPinIcon","HelpIcon","ShoppingBasket","ThumbDown","ThumbUp","moment","Breadcrumb","ConfirmationDialog","Helmet","Fab","Autocomplete","Typography","Tabs","Box","Tab","AppBar","TextField","Checkbox","FormLabel","Button","Grid","FormControlLabel","IconButton","Icon","FormControl","RadioGroup","Radio","InputLabel","MenuItem","Select","QRCode","MuiPickersUtilsProvider","DateTimePicker","KeyboardTimePicker","KeyboardDatePicker","DateFnsUtils","ValidatorForm","TextValidator","AsynchronousAutocomplete","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","withStyles","Tooltip","NumberFormat","Card","ReagentInformation","LightTooltip","theme","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","position","top","left","width","MaterialButton","props","t","i18n","item","onSelect","NumberFormatCustom","inputRef","onChange","other","values","target","name","value","propTypes","func","isRequired","string","TabPanel","children","index","node","any","a11yProps","id","useStyles","root","flexGrow","background","paper","textHeader","CreateStaff","classes","useState","setValue","setItem","v","setValueD","handleChangeValue","event","newValue","searchObject","pageIndex","pageSize","isEmpty","files","length","logoPath"],"mappings":"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","sourcesContent":["import ConstantList from \"../../appConfig\";\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport PhoneIcon from '@material-ui/icons/Phone'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin'\r\nimport HelpIcon from '@material-ui/icons/Help'\r\nimport ShoppingBasket from '@material-ui/icons/ShoppingBasket'\r\nimport ThumbDown from '@material-ui/icons/ThumbDown'\r\nimport ThumbUp from '@material-ui/icons/ThumbUp'\r\nimport moment from \"moment\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { Helmet } from 'react-helmet';\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport {\r\n  Typography,\r\n  Tabs,\r\n  Box,\r\n  Tab,\r\n  AppBar,\r\n  TextField,\r\n  Checkbox,\r\n  FormLabel,\r\n  Button,\r\n  Grid,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Icon,\r\n  FormControl,\r\n  RadioGroup,\r\n  Radio,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport QRCode from 'qrcode.react'\r\nimport { MuiPickersUtilsProvider, DateTimePicker,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker, } from '@material-ui/pickers'\r\nimport DateFnsUtils from '@date-io/date-fns'\r\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator'\r\nimport AsynchronousAutocomplete from '../utilities/AsynchronousAutocomplete'\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport NumberFormat from 'react-number-format';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport ReagentInformation from \"./ReagentInformation\";\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: theme.palette.common.white,\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n    boxShadow: theme.shadows[1],\r\n    fontSize: 11,\r\n    position: \"absolute\",\r\n    top: '-10px',\r\n    left: '-25px',\r\n    width: '80px'\r\n  }\r\n}))(Tooltip);\r\n\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = props;\r\n  const item = props.item;\r\n  return (\r\n    <span>\r\n      {/* <LightTooltip title={t('Asset.reload_code')} placement=\"top\" enterDelay={300} leaveDelay={200}> */}\r\n        <IconButton onClick={() => props.onSelect(item, 1)}>\r\n          <Icon color=\"primary\">delete</Icon>\r\n        </IconButton>\r\n      {/* </LightTooltip> */}\r\n    </span>\r\n  )\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n  const { inputRef, onChange, ...other } = props;\r\n  return (\r\n    <NumberFormat\r\n      {...other}\r\n      getInputRef={inputRef}\r\n      onValueChange={(values) => {\r\n        props.onChange({\r\n          target: {\r\n            name: props.name,\r\n            value: values.value,\r\n\r\n          },\r\n        });\r\n      }}\r\n      name={props.name}\r\n      value={props.value}\r\n      thousandSeparator\r\n      isNumericString\r\n    />\r\n  );\r\n}\r\n\r\nNumberFormatCustom.propTypes = {\r\n  inputRef: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-force-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-force-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={3}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  textHeader:{fontSize:'0.75rem',}\r\n}))\r\n\r\nexport default function CreateStaff(props) {\r\n  const t = props.t\r\n  const i18n = props.i18n\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  const [item, setItem] = React.useState({})\r\n  const [v, setValueD] = React.useState('')\r\n  const handleChangeValue = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n  \r\n  const searchObject = { pageIndex: 1, pageSize: 1000000 }\r\n\r\n  let isEmpty =true;\r\n  if(props.item!=null && props.item.files!=null){\r\n    isEmpty= props.item.files.length === 0;\r\n    if (props.item.logoPath) {\r\n      isEmpty = false\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} value={value} index={0} >\r\n        <ReagentInformation t={t} \r\n        useStyles={useStyles} \r\n        item ={props.item ? props.item:{}} />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}