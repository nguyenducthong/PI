{"ast":null,"code":"import _regeneratorRuntime from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\EQAHealthOrgType\\\\EQAHealthOrgTypeTable.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, IconButton, Icon, TablePagination, Button, FormControl, Input, InputAdornment } from \"@material-ui/core\";\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\nimport { getAllEQAHealthOrgTypes, deleteItem, searchByPage, getItemById } from \"./EQAHealthOrgTypeService\";\nimport EQAHealthOrgTypeEditorDialog from \"./EQAHealthOrgTypeEditorDialog\";\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\nimport shortid from \"shortid\";\nimport { saveAs } from 'file-saver';\nimport { Link } from \"react-router-dom\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Helmet } from 'react-helmet';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nfunction MaterialButton(props) {\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t,\n      i18n = _useTranslation.i18n;\n\n  var item = props.item;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"edit\")), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    onClick: function onClick() {\n      return props.onSelect(item, 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    fontSize: \"small\",\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n}\n\nvar EQAHealthOrgTypeTable = /*#__PURE__*/function (_Component) {\n  _inherits(EQAHealthOrgTypeTable, _Component);\n\n  var _super = _createSuper(EQAHealthOrgTypeTable);\n\n  function EQAHealthOrgTypeTable() {\n    var _this;\n\n    _classCallCheck(this, EQAHealthOrgTypeTable);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      keyword: '',\n      rowsPerPage: 10,\n      page: 0,\n      eQAHealthOrgType: [],\n      item: {},\n      shouldOpenEditorDialog: false,\n      shouldOpenConfirmationDialog: false,\n      selectAllItem: false,\n      selectedList: [],\n      totalElements: 0,\n      shouldOpenConfirmationDeleteAllDialog: false\n    };\n    _this.numSelected = 0;\n    _this.rowCount = 0;\n\n    _this.handleTextChange = function (event) {\n      _this.setState({\n        keyword: event.target.value\n      }, function () {});\n    };\n\n    _this.handleKeyDownEnterSearch = function (e) {\n      if (e.key === 'Enter') {\n        _this.search();\n      }\n    };\n\n    _this.setPage = function (page) {\n      _this.setState({\n        page\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.setRowsPerPage = function (event) {\n      _this.setState({\n        rowsPerPage: event.target.value,\n        page: 0\n      }, function () {\n        this.updatePageData();\n      });\n    };\n\n    _this.handleChangePage = function (event, newPage) {\n      _this.setPage(newPage);\n    };\n\n    _this.updatePageData = function () {\n      var searchObject = {};\n\n      if (_this.state.keyword != \"\") {\n        searchObject.text = _this.state.keyword.trim();\n      }\n\n      searchObject.pageIndex = _this.state.page + 1;\n      searchObject.pageSize = _this.state.rowsPerPage;\n      searchByPage(searchObject, _this.state.page, _this.state.rowsPerPage).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          itemList: _toConsumableArray(data.content),\n          totalElements: data.totalElements\n        });\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false,\n        shouldOpenConfirmationDeleteAllDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleOKEditClose = function () {\n      _this.setState({\n        shouldOpenEditorDialog: false,\n        shouldOpenConfirmationDialog: false\n      });\n\n      _this.updatePageData();\n    };\n\n    _this.handleDeleteEQAHealthOrgType = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleEditEQAHealthOrgType = function (item) {\n      getItemById(item.id).then(function (result) {\n        _this.setState({\n          item: result.data,\n          shouldOpenEditorDialog: true\n        });\n      });\n    };\n\n    _this.handleConfirmationResponse = function () {\n      var t = _this.props.t;\n      deleteItem(_this.state.id).then(function () {\n        _this.updatePageData();\n\n        _this.handleDialogClose();\n\n        toast.success(t(\"EQAHealthOrgTypeTable.notify.deleteSuccess\"));\n      }).catch(function () {\n        toast.warning(t('EQAHealthOrgTypeTable.notify.error'));\n\n        _this.handleDialogClose();\n      });\n    };\n\n    _this.handleEditItem = function (item) {\n      _this.setState({\n        item: item,\n        shouldOpenEditorDialog: true\n      });\n    };\n\n    _this.handleClick = function (event, item) {\n      var eQAHealthOrgType = _this.state.eQAHealthOrgType;\n\n      if (item.checked == null) {\n        item.checked = true;\n      } else {\n        item.checked = !item.checked;\n      }\n\n      var selectAllItem = true;\n\n      for (var i = 0; i < eQAHealthOrgType.length; i++) {\n        if (eQAHealthOrgType[i].checked == null || eQAHealthOrgType[i].checked == false) {\n          selectAllItem = false;\n        }\n\n        if (eQAHealthOrgType[i].id == item.id) {\n          eQAHealthOrgType[i] = item;\n        }\n      }\n\n      _this.setState({\n        selectAllItem: selectAllItem,\n        eQAHealthOrgType: eQAHealthOrgType\n      });\n    };\n\n    _this.handleSelectAllClick = function (event) {\n      var eQAHealthOrgType = _this.state.eQAHealthOrgType;\n\n      for (var i = 0; i < eQAHealthOrgType.length; i++) {\n        eQAHealthOrgType[i].checked = !_this.state.selectAllItem;\n      }\n\n      _this.setState({\n        selectAllItem: !_this.state.selectAllItem,\n        eQAHealthOrgType: eQAHealthOrgType\n      });\n    };\n\n    _this.handleDelete = function (id) {\n      _this.setState({\n        id,\n        shouldOpenConfirmationDialog: true\n      });\n    };\n\n    _this.handleDeleteAll = function (event) {\n      var t = _this.props.t;\n\n      if (_this.data != null) {\n        _this.handleDeleteList(_this.data).then(function () {\n          _this.updatePageData();\n\n          _this.handleDialogClose();\n        });\n      } else {\n        toast.warning(t('general.select_data'));\n\n        _this.handleDialogClose();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(EQAHealthOrgTypeTable, [{\n    key: \"search\",\n    value: function search() {\n      this.setState({\n        page: 0\n      }, function () {\n        var _this2 = this;\n\n        var searchObject = {};\n\n        if (this.state.keyword != \"\") {\n          searchObject.text = this.state.keyword.trim();\n        }\n\n        searchObject.pageIndex = this.state.page + 1;\n        searchObject.pageSize = this.state.rowsPerPage;\n        searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(function (_ref2) {\n          var data = _ref2.data;\n\n          _this2.setState({\n            itemList: _toConsumableArray(data.content),\n            totalElements: data.totalElements\n          });\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updatePageData();\n    }\n  }, {\n    key: \"handleDeleteList\",\n    value: function () {\n      var _handleDeleteList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(list) {\n        var _this3 = this;\n\n        var t, i;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                t = this.props.t;\n                i = 0;\n\n              case 2:\n                if (!(i < list.length)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _context.next = 5;\n                return deleteItem(list[i].id).then(function (res) {\n                  toast.success(t(\"EQAHealthOrgTypeTable.notify.deleteSuccess\") + \" \" + list[i].code);\n\n                  _this3.updatePageData();\n\n                  _this3.handleDialogClose();\n                }).catch(function (err) {\n                  toast.warning(t('EQAHealthOrgTypeTable.notify.error'));\n\n                  _this3.handleDialogClose();\n                });\n\n              case 5:\n                i++;\n                _context.next = 2;\n                break;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleDeleteList(_x) {\n        return _handleDeleteList.apply(this, arguments);\n      }\n\n      return handleDeleteList;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          keyword = _this$state.keyword,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page,\n          totalElements = _this$state.totalElements,\n          itemList = _this$state.itemList,\n          item = _this$state.item,\n          shouldOpenConfirmationDialog = _this$state.shouldOpenConfirmationDialog,\n          shouldOpenEditorDialog = _this$state.shouldOpenEditorDialog,\n          shouldOpenConfirmationDeleteAllDialog = _this$state.shouldOpenConfirmationDeleteAllDialog;\n      var columns = [{\n        title: t(\"Action\"),\n        field: \"custom\",\n        align: \"left\",\n        width: \"250\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        },\n        render: function render(rowData) {\n          return /*#__PURE__*/React.createElement(MaterialButton, {\n            item: rowData,\n            onSelect: function onSelect(rowData, method) {\n              if (method === 0) {\n                getItemById(rowData.id).then(function (_ref3) {\n                  var data = _ref3.data;\n\n                  if (data.parent === null) {\n                    data.parent = {};\n                  }\n\n                  _this4.setState({\n                    item: data,\n                    shouldOpenEditorDialog: true\n                  });\n                });\n              } else if (method === 1) {\n                _this4.handleDelete(rowData.id);\n              } else {\n                alert('Call Selected Here:' + rowData.id);\n              }\n            },\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 28\n            }\n          });\n        }\n      }, {\n        title: t(\"Code\"),\n        field: \"code\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"Name\"),\n        field: \"name\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }, {\n        title: t(\"Description\"),\n        field: \"description\",\n        align: \"left\",\n        width: \"150\",\n        headerStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\"\n        },\n        cellStyle: {\n          minWidth: \"150px\",\n          paddingLeft: \"10px\",\n          paddingRight: \"0px\",\n          textAlign: \"left\"\n        }\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"mb-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }\n      }, t(\"EQAHealthOrgTypeTable.title\"), \" | \", t(\"web_site\"))), /*#__PURE__*/React.createElement(Breadcrumb, {\n        routeSegments: [{\n          name: t(\"category\"),\n          path: \"/directory/apartment\"\n        }, {\n          name: t('EQAHealthOrgTypeTable.title')\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 7,\n        md: 7,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-16 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          _this4.handleEditItem({\n            startDate: new Date(),\n            endDate: new Date()\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }\n      }, t('Add')), /*#__PURE__*/React.createElement(Button, {\n        className: \"mb-16 mr-36 align-bottom\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this4.setState({\n            shouldOpenConfirmationDeleteAllDialog: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }\n      }, t('Delete')), shouldOpenConfirmationDeleteAllDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        open: shouldOpenConfirmationDeleteAllDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleDeleteAll,\n        title: t(\"confirm\"),\n        text: t('DeleteAllConfirm'),\n        Yes: t('general.Yes'),\n        No: t('general.No'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: t('EnterSearch'),\n        className: \"mb-16 mr-10 stylePlaceholder\",\n        type: \"text\",\n        name: \"keyword\",\n        value: keyword,\n        onKeyDown: this.handleKeyDownEnterSearch,\n        onChange: this.handleTextChange,\n        placeholder: t('general.enterSearch'),\n        startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 21\n          }\n        }, \" \", /*#__PURE__*/React.createElement(SearchIcon, {\n          onClick: function onClick() {\n            return _this4.search(keyword);\n          },\n          style: {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 35\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }\n      }, shouldOpenEditorDialog && /*#__PURE__*/React.createElement(EQAHealthOrgTypeEditorDialog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        open: shouldOpenEditorDialog,\n        handleOKEditClose: this.handleOKEditClose,\n        item: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }\n      }), shouldOpenConfirmationDialog && /*#__PURE__*/React.createElement(ConfirmationDialog, {\n        title: t(\"confirm\"),\n        open: shouldOpenConfirmationDialog,\n        onConfirmDialogClose: this.handleDialogClose,\n        onYesClick: this.handleConfirmationResponse,\n        text: t('DeleteConfirm'),\n        Yes: t('general.Yes'),\n        No: t('general.No'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(MaterialTable, {\n        title: t('List'),\n        data: itemList,\n        columns: columns,\n        parentChildData: function parentChildData(row, rows) {\n          var list = rows.find(function (a) {\n            return a.id === row.parentId;\n          });\n          return list;\n        },\n        options: {\n          selection: true,\n          actionsColumnIndex: -1,\n          paging: false,\n          search: false,\n          rowStyle: function rowStyle(rowData, index) {\n            return {\n              backgroundColor: index % 2 === 1 ? '#EEE' : '#FFF'\n            };\n          },\n          maxBodyHeight: '450px',\n          minBodyHeight: '370px',\n          headerStyle: {\n            backgroundColor: '#358600',\n            color: '#fff'\n          },\n          padding: 'dense',\n          toolbar: false\n        },\n        components: {\n          Toolbar: function Toolbar(props) {\n            return /*#__PURE__*/React.createElement(MTableToolbar, Object.assign({}, props, {\n              __self: _this4,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }\n            }));\n          }\n        },\n        onSelectionChange: function onSelectionChange(rows) {\n          _this4.data = rows;\n        },\n        localization: {\n          body: {\n            emptyDataSourceMessage: \"\".concat(t(\"general.emptyDataMessageTable\"))\n          }\n        } // actions={[\n        //   {\n        //     tooltip: 'Remove All Selected Users',\n        //     icon: 'delete',\n        //     onClick: (evt, data) => {\n        //       this.handleDeleteAll(data);\n        //       alert('You want to delete ' + data.length + ' rows');\n        //     }\n        //   },\n        // ]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(TablePagination, {\n        align: \"left\",\n        className: \"px-16\",\n        rowsPerPageOptions: [1, 2, 3, 5, 10, 25, 50, 100],\n        component: \"div\",\n        labelRowsPerPage: t('general.rows_per_page'),\n        labelDisplayedRows: function labelDisplayedRows(_ref4) {\n          var from = _ref4.from,\n              to = _ref4.to,\n              count = _ref4.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(t('general.of'), \" \").concat(count !== -1 ? count : \"more than \".concat(to));\n        },\n        count: totalElements,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.setRowsPerPage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return EQAHealthOrgTypeTable;\n}(Component);\n\nexport default EQAHealthOrgTypeTable;","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/EQAHealthOrgType/EQAHealthOrgTypeTable.jsx"],"names":["React","Component","Grid","IconButton","Icon","TablePagination","Button","FormControl","Input","InputAdornment","MaterialTable","MTableToolbar","Chip","MTableBody","MTableHeader","getAllEQAHealthOrgTypes","deleteItem","searchByPage","getItemById","EQAHealthOrgTypeEditorDialog","Breadcrumb","ConfirmationDialog","useTranslation","withTranslation","Trans","shortid","saveAs","Link","SearchIcon","Helmet","toast","configure","autoClose","draggable","limit","MaterialButton","props","t","i18n","item","onSelect","EQAHealthOrgTypeTable","state","keyword","rowsPerPage","page","eQAHealthOrgType","shouldOpenEditorDialog","shouldOpenConfirmationDialog","selectAllItem","selectedList","totalElements","shouldOpenConfirmationDeleteAllDialog","numSelected","rowCount","handleTextChange","event","setState","target","value","handleKeyDownEnterSearch","e","key","search","setPage","updatePageData","setRowsPerPage","handleChangePage","newPage","searchObject","text","trim","pageIndex","pageSize","then","data","itemList","content","handleDialogClose","handleOKEditClose","handleDeleteEQAHealthOrgType","id","handleEditEQAHealthOrgType","result","handleConfirmationResponse","success","catch","warning","handleEditItem","handleClick","checked","i","length","handleSelectAllClick","handleDelete","handleDeleteAll","handleDeleteList","list","res","code","err","columns","title","field","align","width","headerStyle","minWidth","paddingLeft","paddingRight","cellStyle","textAlign","render","rowData","method","parent","alert","name","path","startDate","Date","endDate","position","top","right","row","rows","find","a","parentId","selection","actionsColumnIndex","paging","rowStyle","index","backgroundColor","maxBodyHeight","minBodyHeight","color","padding","toolbar","Toolbar","body","emptyDataSourceMessage","from","to","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Icon,\r\n  TablePagination,\r\n  Button,\r\n  FormControl,\r\n  Input,\r\n  InputAdornment\r\n} from \"@material-ui/core\";\r\nimport MaterialTable, { MTableToolbar, Chip, MTableBody, MTableHeader } from 'material-table';\r\nimport { getAllEQAHealthOrgTypes, deleteItem, searchByPage, getItemById } from \"./EQAHealthOrgTypeService\";\r\nimport EQAHealthOrgTypeEditorDialog from \"./EQAHealthOrgTypeEditorDialog\";\r\nimport { Breadcrumb, ConfirmationDialog } from \"egret\";\r\nimport { useTranslation, withTranslation, Trans } from 'react-i18next';\r\nimport shortid from \"shortid\";\r\nimport { saveAs } from 'file-saver';\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Helmet } from 'react-helmet';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure({\r\n  autoClose: 1000,\r\n  draggable: false,\r\n  limit:3\r\n});\r\nfunction MaterialButton(props) {\r\n  const { t, i18n } = useTranslation();\r\n  const item = props.item;\r\n  return <div>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 0)}>\r\n      <Icon fontSize=\"small\" color=\"primary\">edit</Icon>\r\n    </IconButton>\r\n    <IconButton size=\"small\" onClick={() => props.onSelect(item, 1)}>\r\n      <Icon fontSize=\"small\" color=\"error\">delete</Icon>\r\n    </IconButton>\r\n  </div>;\r\n}\r\n\r\nclass EQAHealthOrgTypeTable extends Component {\r\n  state = {\r\n    keyword: '',\r\n    rowsPerPage: 10,\r\n    page: 0,\r\n    eQAHealthOrgType: [],\r\n    item: {},\r\n    shouldOpenEditorDialog: false,\r\n    shouldOpenConfirmationDialog: false,\r\n    selectAllItem: false,\r\n    selectedList: [],\r\n    totalElements: 0,\r\n    shouldOpenConfirmationDeleteAllDialog: false\r\n  };\r\n  numSelected = 0;\r\n  rowCount = 0;\r\n\r\n  handleTextChange = event => {\r\n    this.setState({ keyword: event.target.value }, function () {\r\n    })\r\n  };\r\n\r\n  handleKeyDownEnterSearch = e => {\r\n    if (e.key === 'Enter') {\r\n      this.search();\r\n    }\r\n  };\r\n\r\n  setPage = page => {\r\n    this.setState({ page }, function () {\r\n      this.updatePageData();\r\n    })\r\n  };\r\n\r\n  setRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value, page: 0 }, function () {\r\n      this.updatePageData();\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setPage(newPage);\r\n  };\r\n\r\n  search() {\r\n    this.setState({ page: 0 }, function () {\r\n      var searchObject = {};\r\n      if(this.state.keyword != \"\"){\r\n        searchObject.text = this.state.keyword.trim();\r\n      }\r\n      searchObject.pageIndex = this.state.page + 1;\r\n      searchObject.pageSize = this.state.rowsPerPage;\r\n      searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n        this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n      });\r\n    });\r\n  }\r\n\r\n  updatePageData = () => {\r\n    var searchObject = {};\r\n    if(this.state.keyword != \"\"){\r\n      searchObject.text = this.state.keyword.trim();\r\n    }\r\n    searchObject.pageIndex = this.state.page + 1;\r\n    searchObject.pageSize = this.state.rowsPerPage;\r\n    searchByPage(searchObject, this.state.page, this.state.rowsPerPage).then(({ data }) => {\r\n      this.setState({ itemList: [...data.content], totalElements: data.totalElements })\r\n    }\r\n    );\r\n  };\r\n \r\n  handleDialogClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false,\r\n      shouldOpenConfirmationDeleteAllDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleOKEditClose = () => {\r\n    this.setState({\r\n      shouldOpenEditorDialog: false,\r\n      shouldOpenConfirmationDialog: false\r\n    });\r\n    this.updatePageData();\r\n  };\r\n\r\n  handleDeleteEQAHealthOrgType = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  handleEditEQAHealthOrgType = item => {\r\n    getItemById(item.id).then((result) => {\r\n      this.setState({\r\n        item: result.data,\r\n        shouldOpenEditorDialog: true\r\n      });\r\n    });\r\n  };\r\n\r\n  handleConfirmationResponse = () => {\r\n    let {t} = this.props;\r\n    deleteItem(this.state.id).then(() => {\r\n      this.updatePageData();\r\n      this.handleDialogClose();\r\n      toast.success(t(\"EQAHealthOrgTypeTable.notify.deleteSuccess\"));\r\n    }).catch(()=>{\r\n      toast.warning(t('EQAHealthOrgTypeTable.notify.error'));\r\n      this.handleDialogClose();\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePageData();\r\n  }\r\n\r\n  handleEditItem = item => {\r\n    this.setState({\r\n      item: item,\r\n      shouldOpenEditorDialog: true\r\n    });\r\n  };\r\n\r\n  handleClick = (event, item) => {\r\n    let { eQAHealthOrgType } = this.state;\r\n    if (item.checked == null) {\r\n      item.checked = true;\r\n    } else {\r\n      item.checked = !item.checked;\r\n    }\r\n    var selectAllItem = true;\r\n    for (var i = 0; i < eQAHealthOrgType.length; i++) {\r\n      if (eQAHealthOrgType[i].checked == null || eQAHealthOrgType[i].checked == false) {\r\n        selectAllItem = false;\r\n      }\r\n      if (eQAHealthOrgType[i].id == item.id) {\r\n        eQAHealthOrgType[i] = item;\r\n      }\r\n    }\r\n    this.setState({ selectAllItem: selectAllItem, eQAHealthOrgType: eQAHealthOrgType });\r\n\r\n  };\r\n  handleSelectAllClick = (event) => {\r\n    let { eQAHealthOrgType } = this.state;\r\n    for (var i = 0; i < eQAHealthOrgType.length; i++) {\r\n      eQAHealthOrgType[i].checked = !this.state.selectAllItem;\r\n    }\r\n    this.setState({ selectAllItem: !this.state.selectAllItem, eQAHealthOrgType: eQAHealthOrgType });\r\n  };\r\n\r\n  handleDelete = id => {\r\n    this.setState({\r\n      id,\r\n      shouldOpenConfirmationDialog: true\r\n    });\r\n  };\r\n\r\n  async handleDeleteList(list) {\r\n    let {t} = this.props;\r\n    for (var i = 0; i < list.length; i++) {\r\n      await deleteItem(list[i].id).then((res) => {\r\n          toast.success(t(\"EQAHealthOrgTypeTable.notify.deleteSuccess\") + \" \" + list[i].code);\r\n          this.updatePageData();\r\n          this.handleDialogClose();\r\n      }).catch((err) => {\r\n        toast.warning(t('EQAHealthOrgTypeTable.notify.error'));\r\n        this.handleDialogClose();\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDeleteAll = (event) => {\r\n    let {t} = this.props;\r\n    if(this.data != null){\r\n      this.handleDeleteList(this.data).then(() => {\r\n        this.updatePageData();\r\n        this.handleDialogClose();\r\n      }\r\n      );\r\n    }else{\r\n      toast.warning(t('general.select_data'));\r\n      this.handleDialogClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { t, i18n } = this.props;\r\n    let {\r\n      keyword,\r\n      rowsPerPage,\r\n      page,\r\n      totalElements,\r\n      itemList,\r\n      item,\r\n      shouldOpenConfirmationDialog,\r\n      shouldOpenEditorDialog,\r\n      shouldOpenConfirmationDeleteAllDialog\r\n    } = this.state;\r\n\r\n    let columns = [\r\n      {\r\n        title: t(\"Action\"),\r\n        field: \"custom\",\r\n        align: \"left\",\r\n        width: \"250\",\r\n        headerStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        }, \r\n        render: rowData => <MaterialButton item={rowData}\r\n          onSelect={(rowData, method) => {\r\n            if (method === 0) {\r\n              getItemById(rowData.id).then(({ data }) => {\r\n                if (data.parent === null) {\r\n                  data.parent = {};\r\n                }\r\n                this.setState({\r\n                  item: data,\r\n                  shouldOpenEditorDialog: true\r\n                });\r\n              })\r\n            } else if (method === 1) {\r\n              this.handleDelete(rowData.id);\r\n            } else {\r\n              alert('Call Selected Here:' + rowData.id);\r\n            }\r\n          }}\r\n        />\r\n      },\r\n      { title: t(\"Code\"), field: \"code\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        }, \r\n      },\r\n      { title: t(\"Name\"), field: \"name\", width: \"150\", \r\n        headerStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        }, \r\n      },\r\n      { title: t(\"Description\"), field: \"description\", align: \"left\", width: \"150\",\r\n        headerStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n        },\r\n        cellStyle: {\r\n          minWidth:\"150px\",\r\n          paddingLeft: \"10px\",\r\n          paddingRight: \"0px\",\r\n          textAlign: \"left\",\r\n        }, \r\n      },\r\n      \r\n    ];\r\n\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n\r\n        <div className=\"mb-sm-30\">\r\n        <Helmet>\r\n          <title>{t(\"EQAHealthOrgTypeTable.title\")} | {t(\"web_site\")}</title>\r\n        </Helmet>\r\n          <Breadcrumb routeSegments={[{ name: t(\"category\"), path: \"/directory/apartment\" },{ name: t('EQAHealthOrgTypeTable.title') }]} />\r\n        </div>\r\n        <Grid container spacing={3}>\r\n          <Grid item lg={7} md={7} sm={12} xs={12}>\r\n            <Button\r\n              className=\"mb-16 mr-16 align-bottom\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                this.handleEditItem({ startDate: new Date(), endDate: new Date() });\r\n              }\r\n              }\r\n            >\r\n              {t('Add')}\r\n            </Button>\r\n            <Button className=\"mb-16 mr-36 align-bottom\" variant=\"contained\" color=\"primary\"\r\n              onClick={() => this.setState({ shouldOpenConfirmationDeleteAllDialog: true })}>\r\n              {t('Delete')}\r\n            </Button>\r\n\r\n            {shouldOpenConfirmationDeleteAllDialog && (\r\n              <ConfirmationDialog\r\n                open={shouldOpenConfirmationDeleteAllDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleDeleteAll}\r\n                title={t(\"confirm\")}\r\n                text={t('DeleteAllConfirm')}\r\n                Yes={t('general.Yes')}\r\n                No={t('general.No')}\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Grid item lg={5} md={5} sm={12} xs={12}>\r\n            <FormControl fullWidth>\r\n              <Input\r\n                label={t('EnterSearch')}\r\n                className=\"mb-16 mr-10 stylePlaceholder\"\r\n                type=\"text\"\r\n                name=\"keyword\"\r\n                value={keyword}\r\n                onKeyDown={this.handleKeyDownEnterSearch}\r\n                onChange={this.handleTextChange}\r\n                placeholder={t('general.enterSearch')}\r\n                startAdornment={\r\n                  <InputAdornment >\r\n                    <Link to=\"#\"> <SearchIcon\r\n                      onClick={() => this.search(keyword)}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"0\",\r\n                        right: \"0\"\r\n                      }} /></Link>\r\n                  </InputAdornment>\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div>\r\n            {shouldOpenEditorDialog && (\r\n              <EQAHealthOrgTypeEditorDialog t={t} i18n={i18n}\r\n                handleClose={this.handleDialogClose}\r\n                open={shouldOpenEditorDialog}\r\n                handleOKEditClose={this.handleOKEditClose}\r\n                item={item}\r\n              />\r\n            )}\r\n\r\n            {shouldOpenConfirmationDialog && (\r\n              <ConfirmationDialog\r\n                title={t(\"confirm\")}\r\n                open={shouldOpenConfirmationDialog}\r\n                onConfirmDialogClose={this.handleDialogClose}\r\n                onYesClick={this.handleConfirmationResponse}\r\n                text={t('DeleteConfirm')}\r\n                Yes={t('general.Yes')}\r\n                No={t('general.No')}\r\n              />\r\n            )}\r\n          </div>\r\n          <MaterialTable\r\n            title={t('List')}\r\n            data={itemList}\r\n            columns={columns}\r\n            parentChildData={(row, rows) => {\r\n              var list = rows.find(a => a.id === row.parentId);\r\n              return list;\r\n            }}\r\n            options={{\r\n                selection: true,\r\n                actionsColumnIndex: -1,\r\n                paging: false,\r\n                search: false,\r\n                rowStyle: (rowData, index) => ({\r\n                  backgroundColor: (index % 2 === 1) ? '#EEE' : '#FFF',\r\n                }), \r\n                maxBodyHeight: '450px',\r\n                minBodyHeight: '370px',\r\n                headerStyle: {\r\n                  backgroundColor: '#358600',\r\n                  color:'#fff',\r\n                },\r\n                padding: 'dense',\r\n                toolbar: false\r\n              }}\r\n            components={{\r\n              Toolbar: props => (\r\n                <MTableToolbar {...props} />\r\n              ),\r\n            }}\r\n            onSelectionChange={(rows) => {\r\n              this.data = rows;\r\n            }}\r\n            localization={{\r\n                body: {\r\n                  emptyDataSourceMessage: `${t(\r\n                    \"general.emptyDataMessageTable\"\r\n                  )}`,\r\n                },\r\n              }}\r\n            // actions={[\r\n            //   {\r\n            //     tooltip: 'Remove All Selected Users',\r\n            //     icon: 'delete',\r\n            //     onClick: (evt, data) => {\r\n            //       this.handleDeleteAll(data);\r\n            //       alert('You want to delete ' + data.length + ' rows');\r\n            //     }\r\n            //   },\r\n            // ]}\r\n          />\r\n          <TablePagination\r\n            align=\"left\"\r\n            className=\"px-16\"\r\n            rowsPerPageOptions={[1, 2, 3, 5, 10, 25, 50, 100]}\r\n            component=\"div\"\r\n            labelRowsPerPage={t('general.rows_per_page')}\r\n            labelDisplayedRows={ ({ from, to, count }) => `${from}-${to} ${t('general.of')} ${count !== -1 ? count : `more than ${to}`}`}\r\n            count={totalElements}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\"\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\"\r\n            }}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.setRowsPerPage}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EQAHealthOrgTypeTable;\r\n"]},"metadata":{},"sourceType":"module"}