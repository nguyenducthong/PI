{"ast":null,"code":"import _objectSpread from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\DoAnTotNghiep\\\\code\\\\Client-V2\\\\src\\\\app\\\\views\\\\page-layouts\\\\UserProfile.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport UploadForm from \"./UploadForm\";\nimport ConstantList from \"../../appConfig\";\nimport { Card, Icon, Avatar, Grid, Select, FormControl, Divider, IconButton, Button, withStyles, InputLabel, FormControlLabel, TextField, Checkbox } from \"@material-ui/core\";\nimport DummyChart from \"./DummyChart\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport localStorageService from \"../../services/localStorageService\";\nimport { useTranslation, withTranslation, Trans, t } from \"react-i18next\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { getCurrentUser, saveItem, saveUser, getUserByUsername, saveOrUpdateUser, getListHealthOrgByUser } from \"./UserProfileService\";\nimport UploadCropImagePopup from \"./UploadCropImagePopup\";\nimport ChangePasswordDiaglog from \"./ChangePasswordPopup\";\nimport authService from \"../../services/jwtAuthService\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\nvar API_PATH = ConstantList.API_ENPOINT + \"/api/fileUpload/\";\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3\n});\n\nvar UserProfile = /*#__PURE__*/function (_Component) {\n  _inherits(UserProfile, _Component);\n\n  var _super = _createSuper(UserProfile);\n\n  function UserProfile() {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      open: true,\n      user: {},\n      shouldOpenImageDialog: false,\n      shouldOpenPasswordDialog: false,\n      positiveAffirmativeRight: true,\n      shouldOpenSearchDialog: false,\n      shouldOpenConfirmationDialog: false,\n      isView: false,\n      shouldOpenAdministrativeUnitsPopup: false,\n      level: {},\n      sampleReceiptDate: new Date(),\n      sampleRecipient: \"\",\n      specifySampleStatus: \"\"\n    };\n\n    _this.toggleSidenav = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.handleWindowResize = function () {\n      return function (event) {\n        if (event.target.innerWidth < 768) {\n          _this.setState({\n            mobile: true\n          });\n        } else _this.setState({\n          mobile: false\n        });\n      };\n    };\n\n    _this.handleChange = function (event, source) {\n      event.persist();\n\n      if (source === \"displayName\") {\n        var person = _this.state.person;\n        person = person ? person : {};\n        person.displayName = event.target.value;\n\n        _this.setState({\n          person: person\n        }); // this.setState({ person: person });\n\n\n        return;\n      }\n\n      if (source === \"firstName\") {\n        var _this$state = _this.state,\n            _person = _this$state.person,\n            displayName = _this$state.displayName;\n\n        if (_this.state.person != null && _this.state.person.lastName != null && _this.state.person.lastName != \"\") {\n          _person.displayName = event.target.value + \" \" + _this.state.person.lastName;\n          displayName = event.target.value + \" \" + _this.state.person.lastName;\n        } else {\n          _person.displayName = event.target.value + \"\";\n          displayName = event.target.value + \"\";\n        }\n\n        _person = _person ? _person : {};\n        _person.firstName = event.target.value;\n\n        _this.setState({\n          person: _person,\n          displayName: displayName\n        });\n\n        return;\n      }\n\n      if (source === \"lastName\") {\n        var _this$state2 = _this.state,\n            _person2 = _this$state2.person,\n            _displayName = _this$state2.displayName;\n        _person2 = _person2 ? _person2 : {};\n\n        if (_this.state.person != null && _this.state.person.firstName != null && _this.state.person.firstName != \"\") {\n          _person2.displayName = _this.state.person.firstName + \" \" + event.target.value;\n          _displayName = _this.state.person.firstName + \" \" + event.target.value;\n        } else {\n          _person2.displayName = \"\" + event.target.value;\n          _displayName = \"\" + event.target.value;\n        }\n\n        _person2.lastName = event.target.value;\n\n        _this.setState({\n          person: _person2,\n          displayName: _displayName\n        });\n\n        return;\n      }\n\n      if (source === \"gender\") {\n        var _person3 = _this.state.person;\n        _person3 = _person3 ? _person3 : {};\n        _person3.gender = event.target.value;\n\n        _this.setState({\n          person: _person3\n        });\n\n        return;\n      }\n\n      _this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    _this.handleOpenUploadDialog = function () {\n      _this.setState({\n        shouldOpenImageDialog: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        shouldOpenImageDialog: false\n      });\n    };\n\n    _this.handleOpenPasswordDialog = function () {\n      _this.setState({\n        shouldOpenPasswordDialog: true\n      });\n    };\n\n    _this.handleDialogPasswordClose = function () {\n      _this.setState({\n        shouldOpenPasswordDialog: false\n      });\n    };\n\n    _this.openPasswordDialog = function () {\n      _this.setState({\n        shouldOpenPasswordDialog: true\n      });\n    };\n\n    _this.handleUpdate = function (blobValue) {\n      var t = _this.props.t;\n      var url = ConstantList.API_ENPOINT + \"/api/users/updateavatar\";\n      var formData = new FormData();\n      formData.set(\"uploadfile\", blobValue); //formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n\n      var config = {\n        headers: {\n          \"Content-Type\": \"image/jpg\"\n        }\n      };\n      return axios.post(url, formData, config).then(function (response) {\n        toast.success(t(\"update_success_message\"));\n        var user = response.data;\n\n        _this.setState({\n          user: user\n        });\n\n        authService.setLoginUser(user);\n\n        _this.handleDialogClose();\n      }).catch(function () {\n        toast.warning(t(\"error_update_image\"));\n      });\n    };\n\n    _this.handleFormSubmit = function () {\n      var id = _this.state.id;\n      var t = _this.props.t;\n\n      if (id) {\n        saveOrUpdateUser(_objectSpread({}, _this.state)).then(function (data) {\n          toast.success(t(\"mess_edit\"));\n        });\n      } else {\n        saveOrUpdateUser(_objectSpread({}, _this.state)).then(function (data) {\n          _this.setState({\n            isView: true\n          });\n\n          toast.success(t(\"mess_add\"));\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getCurrentUser().then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          user: data\n        }, function () {});\n\n        _this2.setState(_objectSpread({}, data));\n      }); //let user = localStorageService.getLoginUser();\n\n      if (window.innerWidth < 768) {\n        this.setState({\n          open: false\n        });\n      }\n\n      if (window) this.windowResizeListener = window.addEventListener(\"resize\", function (event) {\n        if (event.target.innerWidth < 768) {\n          _this2.setState({\n            open: false\n          });\n        } else _this2.setState({\n          open: true\n        });\n      }); // getHealthOrg({ pageSize: 1000000, pageIndex: 0 }).then((res) => {\n      //   getItemById(res.data.content[0].id).then((data) => {\n      //     this.setState({\n      //       ...data.data,\n      //     });\n      //   });\n      // });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var user = localStorageService.getLoginUser();\n      getCurrentUser();\n      this.setState({\n        user: user\n      });\n      this.setState(user);\n      if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n    }\n  }, {\n    key: \"render\",\n    // handleFormSubmitAdmin = () => {\n    //   let {\n    //     id,\n    //     code,\n    //     isManualSetCode,\n    //     email,\n    //     hasErrorLever,\n    //     levelId,\n    //   } = this.state;\n    //   let { t } = this.props;\n    //   this.setState({ loading: true });\n    //   if (email != null) {\n    //     checkEmail(id, email).then((res) => {\n    //       if (res.data) {\n    //         toast.warning(t(\"sign_up.duplicate_email\"));\n    //         this.setState({ loading: false });\n    //         return;\n    //       } else {\n    //         if (id) {\n    //           saveItemHealthOrg({\n    //             ...this.state,\n    //           }).then(() => {\n    //             // this.props.handleOKEditClose();\n    //             this.setState({ loading: false });\n    //             toast.success(t(\"mess_edit\"));\n    //           });\n    //         }\n    //       }\n    //     });\n    //   }\n    // };\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state3 = this.state,\n          open = _this$state3.open,\n          email = _this$state3.email,\n          contactPhone = _this$state3.contactPhone,\n          contactName = _this$state3.contactName,\n          user = _this$state3.user,\n          healthOrg = _this$state3.healthOrg,\n          shouldOpenImageDialog = _this$state3.shouldOpenImageDialog,\n          shouldOpenPasswordDialog = _this$state3.shouldOpenPasswordDialog,\n          name = _this$state3.name,\n          taxCodeOfTheUnit = _this$state3.taxCodeOfTheUnit,\n          code = _this$state3.code,\n          specifyTestPurpose = _this$state3.specifyTestPurpose,\n          address = _this$state3.address,\n          specifyLevel = _this$state3.specifyLevel,\n          positiveAffirmativeRight = _this$state3.positiveAffirmativeRight,\n          isManualSetCode = _this$state3.isManualSetCode,\n          hasErrorLever = _this$state3.hasErrorLever,\n          levelId = _this$state3.levelId,\n          loading = _this$state3.loading;\n      var theme = this.props.theme;\n      var _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n      var genders = [{\n        id: \"M\",\n        name: \"Nam\"\n      }, {\n        id: \"F\",\n        name: \"Nữ\"\n      }, {\n        id: \"U\",\n        name: \"Không rõ\"\n      }];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 7\n        }\n      }, this.state.shouldOpenImageDialog && /*#__PURE__*/React.createElement(UploadCropImagePopup, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogClose,\n        handleUpdate: this.handleUpdate,\n        open: this.state.shouldOpenImageDialog,\n        uploadUrl: API_PATH + \"avatarUpload\",\n        acceptType: \"png;jpg;gif;jpeg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }), this.state.shouldOpenPasswordDialog && /*#__PURE__*/React.createElement(ChangePasswordDiaglog, {\n        t: t,\n        i18n: i18n,\n        handleClose: this.handleDialogPasswordClose,\n        handleUpdate: this.handleUpdate,\n        open: this.state.shouldOpenPasswordDialog,\n        uploadUrl: API_PATH + \"avatarUpload\",\n        acceptType: \"png;jpg;gif;jpeg\",\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"styleColor\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }\n      }, t(\"user.person_info\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-profile__sidenav flex-column flex-middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 9\n        }\n      }, this.state.user && this.state.user ? /*#__PURE__*/React.createElement(Avatar, {\n        className: \"avatar mb-20\",\n        src: ConstantList.API_ENPOINT + this.state.user.imagePath,\n        onClick: this.handleOpenUploadDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Avatar, {\n        className: \"avatar mb-20\",\n        src: ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\",\n        onClick: this.handleOpenUploadDialog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }\n      }, \" \", this.state.displayName != null ? this.state.displayName : \"\", \" \")), /*#__PURE__*/React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        style: {\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-sm-30\",\n        t: t,\n        i18n: i18n,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-8 mt-8\",\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        id: \"standard-basic\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"user.firstName\")),\n        value: this.state.person != null ? this.state.person.firstName : \"\",\n        onChange: function onChange(firstName) {\n          return _this3.handleChange(firstName, \"firstName\");\n        },\n        size: \"small\",\n        variant: \"outlined\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        id: \"standard-basic\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"user.lastName\")),\n        size: \"small\",\n        variant: \"outlined\",\n        value: this.state.person != null ? this.state.person.lastName : \"\",\n        onChange: function onChange(lastName) {\n          return _this3.handleChange(lastName, \"lastName\");\n        },\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        id: \"standard-basic\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"user.displayName\")),\n        size: \"small\",\n        variant: \"outlined\",\n        value: this.state.displayName != null ? this.state.displayName : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        className: \"w-100\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-10\",\n        container: true,\n        spacing: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            color: \"red\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 23\n          }\n        }, \" * \"), t(\"user.email\")),\n        size: \"small\",\n        variant: \"outlined\",\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"email\",\n        value: this.state.email ? this.state.email : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TextValidator, {\n        className: \"w-100\",\n        size: \"small\",\n        variant: \"outlined\",\n        label: /*#__PURE__*/React.createElement(\"span\", {\n          className: \"font\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 26\n          }\n        }, t(\"user.username\")),\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username ? this.state.username : \"\",\n        validators: [\"required\"],\n        errorMessages: [t(\"general.errorMessages_required\")],\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        fullWidth: true,\n        size: \"small\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(InputLabel, {\n        htmlFor: \"gender-simple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"font\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 22\n        }\n      }, t(\"user.gender\"))), /*#__PURE__*/React.createElement(Select, {\n        value: this.state.person ? this.state.person.gender : \"\",\n        onChange: function onChange(gender) {\n          return _this3.handleChange(gender, \"gender\");\n        },\n        inputProps: {\n          name: \"gender\",\n          id: \"gender-simple\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 19\n        }\n      }, genders.map(function (item) {\n        return /*#__PURE__*/React.createElement(MenuItem, {\n          key: item.id,\n          value: item.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 25\n          }\n        }, item.name);\n      }))))), /*#__PURE__*/React.createElement(Grid, {\n        className: \"mb-10\",\n        style: {\n          textAlign: \"right\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        className: \"mr-16\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }\n      }, t(\"general.update\")), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.openPasswordDialog();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 15\n        }\n      }, t(\"user.changePass\"))))));\n    }\n  }]);\n\n  return UserProfile;\n}(Component);\n\nexport default withStyles({}, {\n  withTheme: true\n})(UserProfile);","map":{"version":3,"sources":["E:/DoAnTotNghiep/code/Client-V2/src/app/views/page-layouts/UserProfile.jsx"],"names":["React","Component","Fragment","UploadForm","ConstantList","Card","Icon","Avatar","Grid","Select","FormControl","Divider","IconButton","Button","withStyles","InputLabel","FormControlLabel","TextField","Checkbox","DummyChart","ProfileBarChart","ValidatorForm","TextValidator","localStorageService","useTranslation","withTranslation","Trans","t","MenuItem","getCurrentUser","saveItem","saveUser","getUserByUsername","saveOrUpdateUser","getListHealthOrgByUser","UploadCropImagePopup","ChangePasswordDiaglog","authService","axios","toast","API_PATH","API_ENPOINT","configure","autoClose","draggable","limit","UserProfile","state","open","user","shouldOpenImageDialog","shouldOpenPasswordDialog","positiveAffirmativeRight","shouldOpenSearchDialog","shouldOpenConfirmationDialog","isView","shouldOpenAdministrativeUnitsPopup","level","sampleReceiptDate","Date","sampleRecipient","specifySampleStatus","toggleSidenav","setState","handleWindowResize","event","target","innerWidth","mobile","handleChange","source","persist","person","displayName","value","lastName","firstName","gender","name","handleOpenUploadDialog","handleDialogClose","handleOpenPasswordDialog","handleDialogPasswordClose","openPasswordDialog","handleUpdate","blobValue","props","url","formData","FormData","set","config","headers","post","then","response","success","data","setLoginUser","catch","warning","handleFormSubmit","id","window","windowResizeListener","addEventListener","getLoginUser","removeEventListener","email","contactPhone","contactName","healthOrg","taxCodeOfTheUnit","code","specifyTestPurpose","address","specifyLevel","isManualSetCode","hasErrorLever","levelId","loading","theme","i18n","genders","imagePath","ROOT_PATH","overflowY","display","flexDirection","color","username","map","item","textAlign","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport UploadForm from \"./UploadForm\";\nimport ConstantList from \"../../appConfig\";\nimport {\n  Card,\n  Icon,\n  Avatar,\n  Grid,\n  Select,\n  FormControl,\n  Divider,\n  IconButton,\n  Button,\n  withStyles,\n  InputLabel,\n  FormControlLabel,\n  TextField,\n  Checkbox,\n} from \"@material-ui/core\";\nimport DummyChart from \"./DummyChart\";\nimport ProfileBarChart from \"./ProfileBarChart\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\nimport localStorageService from \"../../services/localStorageService\";\nimport { useTranslation, withTranslation, Trans, t } from \"react-i18next\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n  getCurrentUser,\n  saveItem,\n  saveUser,\n  getUserByUsername,\n  saveOrUpdateUser,\n  getListHealthOrgByUser,\n} from \"./UserProfileService\";\nimport UploadCropImagePopup from \"./UploadCropImagePopup\";\nimport ChangePasswordDiaglog from \"./ChangePasswordPopup\";\nimport authService from \"../../services/jwtAuthService\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"../../../styles/views/_style.scss\";\nconst API_PATH = ConstantList.API_ENPOINT + \"/api/fileUpload/\";\n\ntoast.configure({\n  autoClose: 1000,\n  draggable: false,\n  limit: 3,\n});\nclass UserProfile extends Component {\n  state = {\n    open: true,\n    user: {},\n    shouldOpenImageDialog: false,\n    shouldOpenPasswordDialog: false,\n    positiveAffirmativeRight: true,\n    shouldOpenSearchDialog: false,\n    shouldOpenConfirmationDialog: false,\n    isView: false,\n    shouldOpenAdministrativeUnitsPopup: false,\n    level: {},\n    sampleReceiptDate: new Date(),\n    sampleRecipient: \"\",\n    specifySampleStatus: \"\",\n  };\n\n  windowResizeListener;\n\n  toggleSidenav = () => {\n    this.setState({\n      open: !this.state.open,\n    });\n  };\n\n  handleWindowResize = () => {\n    return (event) => {\n      if (event.target.innerWidth < 768) {\n        this.setState({ mobile: true });\n      } else this.setState({ mobile: false });\n    };\n  };\n\n  componentDidMount() {\n \n    getCurrentUser().then(({ data }) => {\n      this.setState({ user: data }, () => {});\n      this.setState({ ...data });\n    });\n    //let user = localStorageService.getLoginUser();\n    if (window.innerWidth < 768) {\n      this.setState({ open: false });\n    }\n    if (window)\n      this.windowResizeListener = window.addEventListener(\"resize\", (event) => {\n        if (event.target.innerWidth < 768) {\n          this.setState({ open: false });\n        } else this.setState({ open: true });\n      });\n    // getHealthOrg({ pageSize: 1000000, pageIndex: 0 }).then((res) => {\n    //   getItemById(res.data.content[0].id).then((data) => {\n    //     this.setState({\n    //       ...data.data,\n    //     });\n    //   });\n    // });\n  }\n  handleChange = (event, source) => {\n    event.persist();\n\n    if (source === \"displayName\") {\n      let { person } = this.state;\n      person = person ? person : {};\n      person.displayName = event.target.value;\n      this.setState({ person: person });\n      // this.setState({ person: person });\n      return;\n    }\n    if (source === \"firstName\") {\n      let { person, displayName } = this.state;\n      if (\n        this.state.person != null &&\n        this.state.person.lastName != null &&\n        this.state.person.lastName != \"\"\n      ) {\n        person.displayName =\n          event.target.value + \" \" + this.state.person.lastName;\n        displayName = event.target.value + \" \" + this.state.person.lastName;\n      } else {\n        person.displayName = event.target.value + \"\";\n        displayName = event.target.value + \"\";\n      }\n      person = person ? person : {};\n      person.firstName = event.target.value;\n      this.setState({\n        person: person,\n        displayName: displayName,\n      });\n      return;\n    }\n    if (source === \"lastName\") {\n      let { person, displayName } = this.state;\n      person = person ? person : {};\n      if (\n        this.state.person != null &&\n        this.state.person.firstName != null &&\n        this.state.person.firstName != \"\"\n      ) {\n        person.displayName =\n          this.state.person.firstName + \" \" + event.target.value;\n        displayName = this.state.person.firstName + \" \" + event.target.value;\n      } else {\n        person.displayName = \"\" + event.target.value;\n        displayName = \"\" + event.target.value;\n      }\n      person.lastName = event.target.value;\n      this.setState({\n        person: person,\n        displayName: displayName,\n      });\n      return;\n    }\n\n    if (source === \"gender\") {\n      let { person } = this.state;\n      person = person ? person : {};\n      person.gender = event.target.value;\n      this.setState({ person: person });\n      return;\n    }\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n  componentWillUnmount() {\n    let user = localStorageService.getLoginUser();\n    getCurrentUser();\n    this.setState({ user: user });\n    this.setState(user);\n    if (window) window.removeEventListener(\"resize\", this.windowResizeListener);\n  }\n  handleOpenUploadDialog = () => {\n    this.setState({\n      shouldOpenImageDialog: true,\n    });\n  };\n  handleDialogClose = () => {\n    this.setState({\n      shouldOpenImageDialog: false,\n    });\n  };\n  handleOpenPasswordDialog = () => {\n    this.setState({\n      shouldOpenPasswordDialog: true,\n    });\n  };\n  handleDialogPasswordClose = () => {\n    this.setState({\n      shouldOpenPasswordDialog: false,\n    });\n  };\n\n  openPasswordDialog = () => {\n    this.setState({\n      shouldOpenPasswordDialog: true,\n    });\n  };\n  handleUpdate = (blobValue) => {\n    let { t } = this.props;\n    const url = ConstantList.API_ENPOINT + \"/api/users/updateavatar\";\n    let formData = new FormData();\n    formData.set(\"uploadfile\", blobValue);\n    //formData.append('uploadfile',file);//Lưu ý tên 'uploadfile' phải trùng với tham số bên Server side\n    const config = {\n      headers: {\n        \"Content-Type\": \"image/jpg\",\n      },\n    };\n    return axios\n      .post(url, formData, config)\n      .then((response) => {\n        toast.success(t(\"update_success_message\"));\n        let user = response.data;\n        this.setState({ user: user });\n        authService.setLoginUser(user);\n        this.handleDialogClose();\n      })\n      .catch(() => {\n        toast.warning(t(\"error_update_image\"));\n      });\n  };\n  handleFormSubmit = () => {\n    let { id } = this.state;\n    let { t } = this.props;\n    if (id) {\n      saveOrUpdateUser({\n        ...this.state,\n      }).then((data) => {\n        toast.success(t(\"mess_edit\"));\n      });\n    } else {\n      saveOrUpdateUser({\n        ...this.state,\n      }).then((data) => {\n        this.setState({ isView: true });\n        toast.success(t(\"mess_add\"));\n      });\n    }\n  };\n  // handleFormSubmitAdmin = () => {\n  //   let {\n  //     id,\n  //     code,\n  //     isManualSetCode,\n  //     email,\n  //     hasErrorLever,\n  //     levelId,\n  //   } = this.state;\n  //   let { t } = this.props;\n  //   this.setState({ loading: true });\n\n  //   if (email != null) {\n  //     checkEmail(id, email).then((res) => {\n  //       if (res.data) {\n  //         toast.warning(t(\"sign_up.duplicate_email\"));\n  //         this.setState({ loading: false });\n  //         return;\n  //       } else {\n  //         if (id) {\n  //           saveItemHealthOrg({\n  //             ...this.state,\n  //           }).then(() => {\n  //             // this.props.handleOKEditClose();\n  //             this.setState({ loading: false });\n  //             toast.success(t(\"mess_edit\"));\n  //           });\n  //         }\n  //       }\n  //     });\n  //   }\n  // };\n  render() {\n    let {\n      open,\n      email,\n      contactPhone,\n      contactName,\n      user,\n      healthOrg,\n      shouldOpenImageDialog,\n      shouldOpenPasswordDialog,\n      name,\n      taxCodeOfTheUnit,\n      code,\n      specifyTestPurpose,\n      address,\n      specifyLevel,\n      positiveAffirmativeRight,\n      isManualSetCode,\n      hasErrorLever,\n      levelId,\n      loading,\n    } = this.state;\n    let { theme } = this.props;\n    let { t, i18n } = this.props;\n    const genders = [\n      { id: \"M\", name: \"Nam\" },\n      { id: \"F\", name: \"Nữ\" },\n      { id: \"U\", name: \"Không rõ\" },\n    ];\n    return (\n      <div className=\"m-sm-30\">\n        {this.state.shouldOpenImageDialog && (\n          <UploadCropImagePopup\n            t={t}\n            i18n={i18n}\n            handleClose={this.handleDialogClose}\n            handleUpdate={this.handleUpdate}\n            open={this.state.shouldOpenImageDialog}\n            uploadUrl={API_PATH + \"avatarUpload\"}\n            acceptType=\"png;jpg;gif;jpeg\"\n          />\n        )}\n        {this.state.shouldOpenPasswordDialog && (\n          <ChangePasswordDiaglog\n            t={t}\n            i18n={i18n}\n            handleClose={this.handleDialogPasswordClose}\n            handleUpdate={this.handleUpdate}\n            open={this.state.shouldOpenPasswordDialog}\n            uploadUrl={API_PATH + \"avatarUpload\"}\n            acceptType=\"png;jpg;gif;jpeg\"\n            user={user}\n          />\n        )}\n        <div>\n          {\n            <span className=\"styleColor\">\n              {t(\"user.person_info\")}\n            </span>\n          }\n        </div>\n        <div className=\"user-profile__sidenav flex-column flex-middle\">\n          {this.state.user && this.state.user ? (\n            <Avatar\n              className=\"avatar mb-20\"\n              src={ConstantList.API_ENPOINT + this.state.user.imagePath}\n              onClick={this.handleOpenUploadDialog}\n            />\n          ) : (\n            <div>\n              <Avatar\n                className=\"avatar mb-20\"\n                src={ConstantList.ROOT_PATH + \"assets/images/avatar.jpg\"}\n                onClick={this.handleOpenUploadDialog}\n              />\n            </div>\n          )}\n          {/* {user.displayName} */}\n          {\n            <span className=\"title\">\n              {\" \"}\n              {this.state.displayName != null\n                ? this.state.displayName\n                : \"\"}{\" \"}\n            </span>\n          }\n        </div>\n        <ValidatorForm\n          ref=\"form\"\n          onSubmit={this.handleFormSubmit}\n          style={{\n            overflowY: \"auto\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div className=\"m-sm-30\" t={t} i18n={i18n}>\n            <Grid className=\"mb-8 mt-8\" container spacing={3}>\n              <Grid item item lg={4} md={4} sm={12} xs={12}>\n                <TextValidator\n                  id=\"standard-basic\"\n                  label={\n                    <span className=\"font\">\n                      <span style={{ color: \"red\" }}> * </span>\n                      {t(\"user.firstName\")}\n                    </span>\n                  }\n                  value={\n                    this.state.person != null\n                      ? this.state.person.firstName\n                      : \"\"\n                  }\n                  onChange={(firstName) =>\n                    this.handleChange(firstName, \"firstName\")\n                  }\n                  size=\"small\"\n                  variant=\"outlined\"\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                  className=\"w-100\"\n                />\n              </Grid>\n\n              <Grid item item lg={4} md={4} sm={12} xs={12}>\n                <TextValidator\n                  id=\"standard-basic\"\n                  label={\n                    <span className=\"font\">\n                      <span style={{ color: \"red\" }}> * </span>\n                      {t(\"user.lastName\")}\n                    </span>\n                  }\n                  size=\"small\"\n                  variant=\"outlined\"\n                  value={\n                    this.state.person != null\n                      ? this.state.person.lastName\n                      : \"\"\n                  }\n                  onChange={(lastName) =>\n                    this.handleChange(lastName, \"lastName\")\n                  }\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                  className=\"w-100\"\n                />\n              </Grid>\n\n              <Grid item item lg={4} md={4} sm={12} xs={12}>\n                <TextValidator\n                  id=\"standard-basic\"\n                  label={\n                    <span className=\"font\">\n                      <span style={{ color: \"red\" }}> * </span>\n                      {t(\"user.displayName\")}\n                    </span>\n                  }\n                  size=\"small\"\n                  variant=\"outlined\"\n                  value={\n                    this.state.displayName != null\n                      ? this.state.displayName\n                      : \"\"\n                  }\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                  className=\"w-100\"\n                />\n              </Grid>\n            </Grid>\n\n            <Grid className=\"mb-10\" container spacing={3}>\n              <Grid item lg={4} md={4} sm={12} xs={12}>\n                <TextValidator\n                  className=\"w-100\"\n                  label={\n                    <span className=\"font\">\n                      <span style={{ color: \"red\" }}> * </span>\n                      {t(\"user.email\")}\n                    </span>\n                  }\n                  size=\"small\"\n                  variant=\"outlined\"\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"email\"\n                  value={this.state.email ? this.state.email : \"\"}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                />\n              </Grid>\n\n              <Grid item lg={4} md={4} sm={12} xs={12}>\n                <TextValidator\n                  className=\"w-100\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                  label={<span className=\"font\">{t(\"user.username\")}</span>}\n                  onChange={this.handleChange}\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username ? this.state.username : \"\"}\n                  validators={[\"required\"]}\n                  errorMessages={[t(\"general.errorMessages_required\")]}\n                  disabled\n                />\n              </Grid>\n\n              <Grid item lg={4} md={4} sm={12} xs={12}>\n                <FormControl fullWidth={true} size=\"small\" variant=\"outlined\">\n                  <InputLabel htmlFor=\"gender-simple\">\n                    {<span className=\"font\">{t(\"user.gender\")}</span>}\n                  </InputLabel>\n                  <Select\n                    value={this.state.person ? this.state.person.gender : \"\"}\n                    onChange={(gender) => this.handleChange(gender, \"gender\")}\n                    inputProps={{\n                      name: \"gender\",\n                      id: \"gender-simple\",\n                    }}\n                  >\n                    {genders.map((item) => {\n                      return (\n                        <MenuItem key={item.id} value={item.id}>\n                          {item.name}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Grid>\n\n            <Grid className=\"mb-10\" style={{ textAlign: \"right\" }}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"submit\"\n                className=\"mr-16\"\n              >\n                {t(\"general.update\")}\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                type=\"button\"\n                onClick={() => this.openPasswordDialog()}\n              >\n                {t(\"user.changePass\")}\n              </Button>\n            </Grid>\n          </div>\n        </ValidatorForm>\n      </div>\n    );\n  }\n}\n\nexport default withStyles({}, { withTheme: true })(UserProfile);\n"]},"metadata":{},"sourceType":"module"}